/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pistax;

public class PistaCommHandler {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PistaCommHandler(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PistaCommHandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PISTAXJNI.delete_PistaCommHandler(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    PISTAXJNI.PistaCommHandler_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    PISTAXJNI.PistaCommHandler_change_ownership(this, swigCPtr, true);
  }

  public PistaCommHandler() {
    this(PISTAXJNI.new_PistaCommHandler(), true);
    PISTAXJNI.PistaCommHandler_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public int open() throws java.io.IOException {
    return (getClass() == PistaCommHandler.class) ? PISTAXJNI.PistaCommHandler_open(swigCPtr, this) : PISTAXJNI.PistaCommHandler_openSwigExplicitPistaCommHandler(swigCPtr, this);
  }

  public int config(int baud, int datab, int stopb, char parity) throws java.io.IOException {
    return (getClass() == PistaCommHandler.class) ? PISTAXJNI.PistaCommHandler_config(swigCPtr, this, baud, datab, stopb, parity) : PISTAXJNI.PistaCommHandler_configSwigExplicitPistaCommHandler(swigCPtr, this, baud, datab, stopb, parity);
  }

  public int write(byte[] data) throws java.io.IOException {
    return PISTAXJNI.PistaCommHandler_write(swigCPtr, this, data);
  }

  public int close() {
    return (getClass() == PistaCommHandler.class) ? PISTAXJNI.PistaCommHandler_close(swigCPtr, this) : PISTAXJNI.PistaCommHandler_closeSwigExplicitPistaCommHandler(swigCPtr, this);
  }

}
