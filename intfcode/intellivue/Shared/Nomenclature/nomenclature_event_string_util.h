/**
 * @file nomenclature_event_string_util.h
 * 
 * @brief String converter for nomenclature from 11073 part 10101. This header
 * includes events nomenclature. This header is intended to be shared by
 * software which uses 11073 nomenclature.
 * 
 * @see ISO/IEEE 11073-10101:2004(E) HEALTH INFORMATICS â€”
 * POINT-OF-CARE MEDICAL DEVICE COMMUNICATION
 * 
 * @author Robert England
 * 
 */
//=============================================================================

#ifndef NOMENCLATURE_EVENT_STRING_UTIL_H_
#define NOMENCLATURE_EVENT_STRING_UTIL_H_

#include "iso_ieee_11073_part_10101_nomenclature_events.h"

class NomenclatureEventStringUtil
{
public:
  const static std::string EventIDToString(const long id)
  {
    std::string str;
    switch(id)
    {
      case MDC_EVT: str = "MDC_EVT"; break;
      case MDC_EVT_ABNORM: str = "MDC_EVT_ABNORM"; break;
      case MDC_EVT_ABSENT: str = "MDC_EVT_ABSENT"; break;
      case MDC_EVT_ACTIVE: str = "MDC_EVT_ACTIVE"; break;
      case MDC_EVT_ALARM: str = "MDC_EVT_ALARM"; break;
      case MDC_EVT_CONN: str = "MDC_EVT_CONN"; break;
      case MDC_EVT_CONTAM: str = "MDC_EVT_CONTAM"; break;
      case MDC_EVT_DEFECT: str = "MDC_EVT_DEFECT"; break;
      case MDC_EVT_DEPLET: str = "MDC_EVT_DEPLET"; break;
      case MDC_EVT_DETEC: str = "MDC_EVT_DETEC"; break;
      case MDC_EVT_DISCONN: str = "MDC_EVT_DISCONN"; break;
      case MDC_EVT_QUALITY: str = "MDC_EVT_QUALITY"; break;
      case MDC_EVT_DISTURB: str = "MDC_EVT_DISTURB"; break;
      case MDC_EVT_SIG_QUALITY: str = "MDC_EVT_SIG_QUALITY"; break;
      case MDC_EVT_EMPTY: str = "MDC_EVT_EMPTY"; break;
      case MDC_EVT_EQU: str = "MDC_EVT_EQU"; break;
      case MDC_EVT_ERR: str = "MDC_EVT_ERR"; break;
      case MDC_EVT_ERRATIC: str = "MDC_EVT_ERRATIC"; break;
      case MDC_EVT_EXCESS: str = "MDC_EVT_EXCESS"; break;
      case MDC_EVT_EXH: str = "MDC_EVT_EXH"; break;
      case MDC_EVT_FAIL: str = "MDC_EVT_FAIL"; break;
      case MDC_EVT_HI: str = "MDC_EVT_HI"; break;
      case MDC_EVT_HI_GT_LIM: str = "MDC_EVT_HI_GT_LIM"; break;
      case MDC_EVT_HI_VAL_GT_LIM: str = "MDC_EVT_HI_VAL_GT_LIM"; break;
      case MDC_EVT_INCORRECT: str = "MDC_EVT_INCORRECT"; break;
      case MDC_EVT_INFILT: str = "MDC_EVT_INFILT"; break;
      case MDC_EVT_INGRESS: str = "MDC_EVT_INGRESS"; break;
      case MDC_EVT_INOP: str = "MDC_EVT_INOP"; break;
      case MDC_EVT_INTERF: str = "MDC_EVT_INTERF"; break;
      case MDC_EVT_INTERRUP: str = "MDC_EVT_INTERRUP"; break;
      case MDC_EVT_IRREG: str = "MDC_EVT_IRREG"; break;
      case MDC_EVT_LEAK: str = "MDC_EVT_LEAK"; break;
      case MDC_EVT_LO: str = "MDC_EVT_LO"; break;
      case MDC_EVT_LO_LT_LIM: str = "MDC_EVT_LO_LT_LIM"; break;
      case MDC_EVT_LO_VAL_LT_LIM: str = "MDC_EVT_LO_VAL_LT_LIM"; break;
      case MDC_EVT_LOST: str = "MDC_EVT_LOST"; break;
      case MDC_EVT_MALF: str = "MDC_EVT_MALF"; break;
      case MDC_EVT_MODE: str = "MDC_EVT_MODE"; break;
      case MDC_EVT_NOISY: str = "MDC_EVT_NOISY"; break;
      case MDC_EVT_NOT_DEFLATED: str = "MDC_EVT_NOT_DEFLATED"; break;
      case MDC_EVT_OBSTRUC: str = "MDC_EVT_OBSTRUC"; break;
      case MDC_EVT_OCCL: str = "MDC_EVT_OCCL"; break;
      case MDC_EVT_OVER: str = "MDC_EVT_OVER"; break;
      case MDC_EVT_OVERFLOW: str = "MDC_EVT_OVERFLOW"; break;
      case MDC_EVT_PROB: str = "MDC_EVT_PROB"; break;
      case MDC_EVT_REVERSED: str = "MDC_EVT_REVERSED"; break;
      case MDC_EVT_SHORT: str = "MDC_EVT_SHORT"; break;
      case MDC_EVT_STAT_DISP_STOP: str = "MDC_EVT_STAT_DISP_STOP"; break;
      case MDC_EVT_SUBATMOS: str = "MDC_EVT_SUBATMOS"; break;
      case MDC_EVT_SUST: str = "MDC_EVT_SUST"; break;
      case MDC_EVT_UNANALYZEABLE: str = "MDC_EVT_UNANALYZEABLE"; break;
      case MDC_EVT_UNAVAIL: str = "MDC_EVT_UNAVAIL"; break;
      case MDC_EVT_UNDEF: str = "MDC_EVT_UNDEF"; break;
      case MDC_EVT_UNDER: str = "MDC_EVT_UNDER"; break;
      case MDC_EVT_UNEQU: str = "MDC_EVT_UNEQU"; break;
      case MDC_EVT_UNK: str = "MDC_EVT_UNK"; break;
      case MDC_EVT_UNPLUGGED: str = "MDC_EVT_UNPLUGGED"; break;
      case MDC_EVT_VIOL: str = "MDC_EVT_VIOL"; break;
      case MDC_EVT_WARMING: str = "MDC_EVT_WARMING"; break;
      case MDC_EVT_WARN: str = "MDC_EVT_WARN"; break;
      case MDC_EVT_WEAK: str = "MDC_EVT_WEAK"; break;
      case MDC_EVT_RECOV_ERR: str = "MDC_EVT_RECOV_ERR"; break;
      case MDC_EVT_UNINTEN_INOP: str = "MDC_EVT_UNINTEN_INOP"; break;
      case MDC_EVT_UNRECOV_ERR: str = "MDC_EVT_UNRECOV_ERR"; break;
      case MDC_EVT_BREATH_ABSENT: str = "MDC_EVT_BREATH_ABSENT"; break;
      case MDC_EVT_CALIB_FAIL: str = "MDC_EVT_CALIB_FAIL"; break;
      case MDC_EVT_COMM_LOST: str = "MDC_EVT_COMM_LOST"; break;
      case MDC_EVT_CONFIG_ERR: str = "MDC_EVT_CONFIG_ERR"; break;
      case MDC_EVT_DATA_ACQN_PROB: str = "MDC_EVT_DATA_ACQN_PROB"; break;
      case MDC_EVT_FUNC_UNAVAIL: str = "MDC_EVT_FUNC_UNAVAIL"; break;
      case MDC_EVT_GAIN_HI: str = "MDC_EVT_GAIN_HI"; break;
      case MDC_EVT_GAIN_LO: str = "MDC_EVT_GAIN_LO"; break;
      case MDC_EVT_HANDL_ERR: str = "MDC_EVT_HANDL_ERR"; break;
      case MDC_EVT_INFLAT_OVER: str = "MDC_EVT_INFLAT_OVER"; break;
      case MDC_EVT_MIX_ERR: str = "MDC_EVT_MIX_ERR"; break;
      case MDC_EVT_POSN_IRREG: str = "MDC_EVT_POSN_IRREG"; break;
      case MDC_EVT_POSN_PROB: str = "MDC_EVT_POSN_PROB"; break;
      case MDC_EVT_PROC_ERR: str = "MDC_EVT_PROC_ERR"; break;
      case MDC_EVT_RANGE_ERR: str = "MDC_EVT_RANGE_ERR"; break;
      case MDC_EVT_RANGE_OVER: str = "MDC_EVT_RANGE_OVER"; break;
      case MDC_EVT_RANGE_UNDER: str = "MDC_EVT_RANGE_UNDER"; break;
      case MDC_EVT_SHAPE_ERR: str = "MDC_EVT_SHAPE_ERR"; break;
      case MDC_EVT_SIG_ERRATIC: str = "MDC_EVT_SIG_ERRATIC"; break;
      case MDC_EVT_SRC_ABSENT: str = "MDC_EVT_SRC_ABSENT"; break;
      case MDC_EVT_SUPPLY_LO: str = "MDC_EVT_SUPPLY_LO"; break;
      case MDC_EVT_SUPPLY_PROB: str = "MDC_EVT_SUPPLY_PROB"; break;
      case MDC_EVT_SVC_QUALITY: str = "MDC_EVT_SVC_QUALITY"; break;
      case MDC_EVT_SYNCH_ERR: str = "MDC_EVT_SYNCH_ERR"; break;
      case MDC_EVT_SYNCH_INOP: str = "MDC_EVT_SYNCH_INOP"; break;
      case MDC_EVT_TIMEOUT_ERR: str = "MDC_EVT_TIMEOUT_ERR"; break;
      case MDC_EVT_VIB_PROB: str = "MDC_EVT_VIB_PROB"; break;
      case MDC_EVT_WEDGE_OCCL: str = "MDC_EVT_WEDGE_OCCL"; break;
      case MDC_EVT_BATT_FAIL: str = "MDC_EVT_BATT_FAIL"; break;
      case MDC_EVT_BATT_LO: str = "MDC_EVT_BATT_LO"; break;
      case MDC_EVT_BATT_MALF: str = "MDC_EVT_BATT_MALF"; break;
      case MDC_EVT_BATT_PROB: str = "MDC_EVT_BATT_PROB"; break;
      case MDC_EVT_VENT_OCCL: str = "MDC_EVT_VENT_OCCL"; break;
      case MDC_EVT_BUFF_OVERFLO: str = "MDC_EVT_BUFF_OVERFLO"; break;
      case MDC_EVT_CABLE_SHORT: str = "MDC_EVT_CABLE_SHORT"; break;
      case MDC_EVT_CATH_PULM_INFLAT_OVER: str = "MDC_EVT_CATH_PULM_INFLAT_OVER"; break;
      case MDC_EVT_CKT_SHORT: str = "MDC_EVT_CKT_SHORT"; break;
      case MDC_EVT_VENT_EXH: str = "MDC_EVT_VENT_EXH"; break;
      case MDC_EVT_CO2_CAN_LEAK: str = "MDC_EVT_CO2_CAN_LEAK"; break;
      case MDC_EVT_CO2_SAMPL_LINE_DEFECT: str = "MDC_EVT_CO2_SAMPL_LINE_DEFECT"; break;
      case MDC_EVT_CO2_WIND_OBSTRUC: str = "MDC_EVT_CO2_WIND_OBSTRUC"; break;
      case MDC_EVT_COMM_LINK_NOISY: str = "MDC_EVT_COMM_LINK_NOISY"; break;
      case MDC_EVT_COMM_MODULE_ERR: str = "MDC_EVT_COMM_MODULE_ERR"; break;
      case MDC_EVT_COMPONENT_POSN_PROB: str = "MDC_EVT_COMPONENT_POSN_PROB"; break;
      case MDC_EVT_CONNECTOR_SHORT: str = "MDC_EVT_CONNECTOR_SHORT"; break;
      case MDC_EVT_CUFF_INCORRECT: str = "MDC_EVT_CUFF_INCORRECT"; break;
      case MDC_EVT_CUFF_LEAK: str = "MDC_EVT_CUFF_LEAK"; break;
      case MDC_EVT_CUFF_NOT_DEFLATED: str = "MDC_EVT_CUFF_NOT_DEFLATED"; break;
      case MDC_EVT_CUFF_INFLAT_OVER: str = "MDC_EVT_CUFF_INFLAT_OVER"; break;
      case MDC_EVT_DOOR_OR_HANDLE_POSN_PROB: str = "MDC_EVT_DOOR_OR_HANDLE_POSN_PROB"; break;
      case MDC_EVT_ELEC_PWR_LINE_PROB: str = "MDC_EVT_ELEC_PWR_LINE_PROB"; break;
      case MDC_EVT_ENDOTRACH_TUBE_LEAK: str = "MDC_EVT_ENDOTRACH_TUBE_LEAK"; break;
      case MDC_EVT_EQUIP_MALF: str = "MDC_EVT_EQUIP_MALF"; break;
      case MDC_EVT_FLUID_LINE_DISTURB: str = "MDC_EVT_FLUID_LINE_DISTURB"; break;
      case MDC_EVT_FLUID_LINE_INFILT: str = "MDC_EVT_FLUID_LINE_INFILT"; break;
      case MDC_EVT_FLUID_LINE_INGRESS: str = "MDC_EVT_FLUID_LINE_INGRESS"; break;
      case MDC_EVT_TUBE_OCCL: str = "MDC_EVT_TUBE_OCCL"; break;
      case MDC_EVT_FLUID_LINE_PROB: str = "MDC_EVT_FLUID_LINE_PROB"; break;
      case MDC_EVT_FLUID_LINE_FLOW_SENSOR_PROB: str = "MDC_EVT_FLUID_LINE_FLOW_SENSOR_PROB"; break;
      case MDC_EVT_GAS_CONTAM: str = "MDC_EVT_GAS_CONTAM"; break;
      case MDC_EVT_GAS_AGENT_IDENT_MALF: str = "MDC_EVT_GAS_AGENT_IDENT_MALF"; break;
      case MDC_EVT_GAS_LINE_PROB: str = "MDC_EVT_GAS_LINE_PROB"; break;
      case MDC_EVT_HEATING_PWR_PROB: str = "MDC_EVT_HEATING_PWR_PROB"; break;
      case MDC_EVT_HOSE_LEAK: str = "MDC_EVT_HOSE_LEAK"; break;
      case MDC_EVT_HOSE_OBSTRUC: str = "MDC_EVT_HOSE_OBSTRUC"; break;
      case MDC_EVT_LEAD_DISCONN: str = "MDC_EVT_LEAD_DISCONN"; break;
      case MDC_EVT_LEAD_NOISY: str = "MDC_EVT_LEAD_NOISY"; break;
      case MDC_EVT_LEAD_OFF: str = "MDC_EVT_LEAD_OFF"; break;
      case MDC_EVT_LEADS_OFF: str = "MDC_EVT_LEADS_OFF"; break;
      case MDC_EVT_LIGHTS_IN_ROOM_OFF: str = "MDC_EVT_LIGHTS_IN_ROOM_OFF"; break;
      case MDC_EVT_LIGHT_INTERF: str = "MDC_EVT_LIGHT_INTERF"; break;
      case MDC_EVT_LIGHT_SRC_ABSENT: str = "MDC_EVT_LIGHT_SRC_ABSENT"; break;
      case MDC_EVT_MED_GAS_SUPPLY_LO: str = "MDC_EVT_MED_GAS_SUPPLY_LO"; break;
      case MDC_EVT_MODULE_DISCONN: str = "MDC_EVT_MODULE_DISCONN"; break;
      case MDC_EVT_MODULE_EXCESS: str = "MDC_EVT_MODULE_EXCESS"; break;
      case MDC_EVT_MODULE_UNK: str = "MDC_EVT_MODULE_UNK"; break;
      case MDC_EVT_MS_SUBSYS_DISCONN: str = "MDC_EVT_MS_SUBSYS_DISCONN"; break;
      case MDC_EVT_MSG_COMM_ERR: str = "MDC_EVT_MSG_COMM_ERR"; break;
      case MDC_EVT_O2_SUPPLY_LO: str = "MDC_EVT_O2_SUPPLY_LO"; break;
      case MDC_EVT_OPTIC_MODULE_ABSENT: str = "MDC_EVT_OPTIC_MODULE_ABSENT"; break;
      case MDC_EVT_OPTIC_MODULE_DEFECT: str = "MDC_EVT_OPTIC_MODULE_DEFECT"; break;
      case MDC_EVT_PAPER_PROB: str = "MDC_EVT_PAPER_PROB"; break;
      case MDC_EVT_PLUGIN_INCORRECT: str = "MDC_EVT_PLUGIN_INCORRECT"; break;
      case MDC_EVT_PLUGIN_POSN_IRREG: str = "MDC_EVT_PLUGIN_POSN_IRREG"; break;
      case MDC_EVT_SENSOR_DISCONN: str = "MDC_EVT_SENSOR_DISCONN"; break;
      case MDC_EVT_SENSOR_MALF: str = "MDC_EVT_SENSOR_MALF"; break;
      case MDC_EVT_SENSOR_PROB: str = "MDC_EVT_SENSOR_PROB"; break;
      case MDC_EVT_SIDESTRM_MALF: str = "MDC_EVT_SIDESTRM_MALF"; break;
      case MDC_EVT_SIDESTRM_OFF: str = "MDC_EVT_SIDESTRM_OFF"; break;
      case MDC_EVT_SIDESTRM_ON: str = "MDC_EVT_SIDESTRM_ON"; break;
      case MDC_EVT_SITE_TIMER_PROB: str = "MDC_EVT_SITE_TIMER_PROB"; break;
      case MDC_EVT_SW_VER_UNK: str = "MDC_EVT_SW_VER_UNK"; break;
      case MDC_EVT_TUBE_DISCONN: str = "MDC_EVT_TUBE_DISCONN"; break;
      case MDC_EVT_TUBE_LEAK: str = "MDC_EVT_TUBE_LEAK"; break;
      case MDC_EVT_TUBE_OBSTRUC: str = "MDC_EVT_TUBE_OBSTRUC"; break;
      case MDC_EVT_FLUID_LINE_OCCL: str = "MDC_EVT_FLUID_LINE_OCCL"; break;
      case MDC_EVT_XDUCR_ABSENT: str = "MDC_EVT_XDUCR_ABSENT"; break;
      case MDC_EVT_XDUCR_DISCONN: str = "MDC_EVT_XDUCR_DISCONN"; break;
      case MDC_EVT_XDUCR_MALF: str = "MDC_EVT_XDUCR_MALF"; break;
      case MDC_EVT_BW_INCORRECT: str = "MDC_EVT_BW_INCORRECT"; break;
      case MDC_EVT_FLOW_LO: str = "MDC_EVT_FLOW_LO"; break;
      case MDC_EVT_FLOW_REVERSED: str = "MDC_EVT_FLOW_REVERSED"; break;
      case MDC_EVT_FLUID_LINE_DRIP_MALF: str = "MDC_EVT_FLUID_LINE_DRIP_MALF"; break;
      case MDC_EVT_INTENS_ERR: str = "MDC_EVT_INTENS_ERR"; break;
      case MDC_EVT_INTENS_LIGHT_ERR: str = "MDC_EVT_INTENS_LIGHT_ERR"; break;
      case MDC_EVT_MSMT_DISCONN: str = "MDC_EVT_MSMT_DISCONN"; break;
      case MDC_EVT_MSMT_ERR: str = "MDC_EVT_MSMT_ERR"; break;
      case MDC_EVT_MSMT_FAIL: str = "MDC_EVT_MSMT_FAIL"; break;
      case MDC_EVT_MSMT_INOP: str = "MDC_EVT_MSMT_INOP"; break;
      case MDC_EVT_MSMT_INTERF: str = "MDC_EVT_MSMT_INTERF"; break;
      case MDC_EVT_MSMT_INTERRUP: str = "MDC_EVT_MSMT_INTERRUP"; break;
      case MDC_EVT_MSMT_RANGE_OVER: str = "MDC_EVT_MSMT_RANGE_OVER"; break;
      case MDC_EVT_MSMT_RANGE_UNDER: str = "MDC_EVT_MSMT_RANGE_UNDER"; break;
      case MDC_EVT_PRESS_HI_GT_LIM: str = "MDC_EVT_PRESS_HI_GT_LIM"; break;
      case MDC_EVT_PRESS_HI_VAL_GT_LIM: str = "MDC_EVT_PRESS_HI_VAL_GT_LIM"; break;
      case MDC_EVT_PRESS_SUBATMOS: str = "MDC_EVT_PRESS_SUBATMOS"; break;
      case MDC_EVT_PRESS_SUPPLY_HI: str = "MDC_EVT_PRESS_SUPPLY_HI"; break;
      case MDC_EVT_PRESS_SUPPLY_LO: str = "MDC_EVT_PRESS_SUPPLY_LO"; break;
      case MDC_EVT_PRESS_CUFF_OVER: str = "MDC_EVT_PRESS_CUFF_OVER"; break;
      case MDC_EVT_SIG_LO: str = "MDC_EVT_SIG_LO"; break;
      case MDC_EVT_SIG_UNANALYZEABLE: str = "MDC_EVT_SIG_UNANALYZEABLE"; break;
      case MDC_EVT_SIG_RANGE_OVER: str = "MDC_EVT_SIG_RANGE_OVER"; break;
      case MDC_EVT_SIG_RANGE_UNDER: str = "MDC_EVT_SIG_RANGE_UNDER"; break;
      case MDC_EVT_SIG_STRENGTH_WEAK: str = "MDC_EVT_SIG_STRENGTH_WEAK"; break;
      case MDC_EVT_TEMP_HI_GT_LIM: str = "MDC_EVT_TEMP_HI_GT_LIM"; break;
      case MDC_EVT_TEMP_HI_VAL_GT_LIM: str = "MDC_EVT_TEMP_HI_VAL_GT_LIM"; break;
      case MDC_EVT_UNIT_INVALID: str = "MDC_EVT_UNIT_INVALID"; break;
      case MDC_EVT_UNSUPPORTED: str = "MDC_EVT_UNSUPPORTED"; break;
      case MDC_EVT_MSG_NOM_ERR: str = "MDC_EVT_MSG_NOM_ERR"; break;
      case MDC_EVT_SIG_GAIN_LO: str = "MDC_EVT_SIG_GAIN_LO"; break;
      case MDC_EVT_OP_INVALID: str = "MDC_EVT_OP_INVALID"; break;
      case MDC_EVT_MATERIAL_LOW_OR_OUT: str = "MDC_EVT_MATERIAL_LOW_OR_OUT"; break;
      case MDC_EVT_AL_LIMIT: str = "MDC_EVT_AL_LIMIT"; break;
      case MDC_EVT_QOS: str = "MDC_EVT_QOS"; break;
      case MDC_EVT_TIMING: str = "MDC_EVT_TIMING"; break;
      case MDC_EVT_MSG_ERR_PROC: str = "MDC_EVT_MSG_ERR_PROC"; break;
      case MDC_EVT_COMPUT_UNDERFLOW: str = "MDC_EVT_COMPUT_UNDERFLOW"; break;
      case MDC_EVT_PROC: str = "MDC_EVT_PROC"; break;
      case MDC_EVT_VENT_DELIV_O2_LO: str = "MDC_EVT_VENT_DELIV_O2_LO"; break;
      case MDC_EVT_SYNCH: str = "MDC_EVT_SYNCH"; break;
      case MDC_EVT_CUFF_POSN_ERR: str = "MDC_EVT_CUFF_POSN_ERR"; break;
      case MDC_EVT_WAVE_ARTIF_ERR: str = "MDC_EVT_WAVE_ARTIF_ERR"; break;
      case MDC_EVT_WAVE_SIG_QUAL_ERR: str = "MDC_EVT_WAVE_SIG_QUAL_ERR"; break;
      case MDC_EVT_MSMT_INTERF_ERR: str = "MDC_EVT_MSMT_INTERF_ERR"; break;
      case MDC_EVT_WAVE_SHAPE_ABNORM: str = "MDC_EVT_WAVE_SHAPE_ABNORM"; break;
      case MDC_EVT_SIG_NOISY: str = "MDC_EVT_SIG_NOISY"; break;
      case MDC_EVT_WAVE_OSCIL_ABSENT: str = "MDC_EVT_WAVE_OSCIL_ABSENT"; break;
      case MDC_EVT_SIG_ABSENT: str = "MDC_EVT_SIG_ABSENT"; break;
      case MDC_EVT_SIG_OUT_OF_RANGE: str = "MDC_EVT_SIG_OUT_OF_RANGE"; break;
      case MDC_EVT_SIG_PROC_ERR: str = "MDC_EVT_SIG_PROC_ERR"; break;
      case MDC_EVT_LIMIT_AL_HI: str = "MDC_EVT_LIMIT_AL_HI"; break;
      case MDC_EVT_MSG_CORRUPT: str = "MDC_EVT_MSG_CORRUPT"; break;
      case MDC_EVT_NBP_MOTION_DETEC: str = "MDC_EVT_NBP_MOTION_DETEC"; break;
      case MDC_EVT_NBP_CUFF_DISCONN_OR_LEAK: str = "MDC_EVT_NBP_CUFF_DISCONN_OR_LEAK"; break;
      case MDC_EVT_POWER_SUPPLY_PROB: str = "MDC_EVT_POWER_SUPPLY_PROB"; break;
      case MDC_EVT_VOLTAGE_OUT_OF_RANGE: str = "MDC_EVT_VOLTAGE_OUT_OF_RANGE"; break;
      case MDC_EVT_CO2_MSMT_FAIL: str = "MDC_EVT_CO2_MSMT_FAIL"; break;
      case MDC_EVT_CO2_SENSOR_FAIL: str = "MDC_EVT_CO2_SENSOR_FAIL"; break;
      case MDC_EVT_VENT_CYC_INSP_START: str = "MDC_EVT_VENT_CYC_INSP_START"; break;
      case MDC_EVT_COMM: str = "MDC_EVT_COMM"; break;
      case MDC_EVT_MSG_SEMAN_ERR: str = "MDC_EVT_MSG_SEMAN_ERR"; break;
      case MDC_EVT_FRAM_ERR: str = "MDC_EVT_FRAM_ERR"; break;
      case MDC_EVT_PARITY_ERR: str = "MDC_EVT_PARITY_ERR"; break;
      case MDC_EVT_DOOR_POSN_ERR: str = "MDC_EVT_DOOR_POSN_ERR"; break;
      case MDC_EVT_MSG_SYNTAX_UNDEF: str = "MDC_EVT_MSG_SYNTAX_UNDEF"; break;
      case MDC_EVT_TIMER_SYNCH_TICK: str = "MDC_EVT_TIMER_SYNCH_TICK"; break;
      case MDC_EVT_DATA_ACQN_ERR: str = "MDC_EVT_DATA_ACQN_ERR"; break;
      case MDC_EVT_LIGHT_ON: str = "MDC_EVT_LIGHT_ON"; break;
      case MDC_EVT_TEMP_ENVIRON_LOW_ABNORM: str = "MDC_EVT_TEMP_ENVIRON_LOW_ABNORM"; break;
      case MDC_EVT_TEMP_ENVIRON_HI_ABNORM: str = "MDC_EVT_TEMP_ENVIRON_HI_ABNORM"; break;
      case MDC_EVT_HUMID_EXCESS: str = "MDC_EVT_HUMID_EXCESS"; break;
      case MDC_EVT_SIG_ABSENT_OSCIL: str = "MDC_EVT_SIG_ABSENT_OSCIL"; break;
      case MDC_EVT_SIG_AMPL_INVALID: str = "MDC_EVT_SIG_AMPL_INVALID"; break;
      case MDC_EVT_SIG_RATE_EQU: str = "MDC_EVT_SIG_RATE_EQU"; break;
      case MDC_EVT_SIG_ARTIFACT: str = "MDC_EVT_SIG_ARTIFACT"; break;
      case MDC_EVT_BUFF_OVERFLOW: str = "MDC_EVT_BUFF_OVERFLOW"; break;
      case MDC_EVT_VENT_TEMP_AWAY_HI: str = "MDC_EVT_VENT_TEMP_AWAY_HI"; break;
      case MDC_EVT_TEMP_ERR_ENVIRON: str = "MDC_EVT_TEMP_ERR_ENVIRON"; break;
      case MDC_EVT_VENT_OBSTRUC: str = "MDC_EVT_VENT_OBSTRUC"; break;
      case MDC_EVT_VENT_ENDOTRACH_TUBE_OBSTRUC: str = "MDC_EVT_VENT_ENDOTRACH_TUBE_OBSTRUC"; break;
      case MDC_EVT_VENT_VOL_BREATHING_IRREG: str = "MDC_EVT_VENT_VOL_BREATHING_IRREG"; break;
      case MDC_EVT_VENT_VOL_MSMT_INOP: str = "MDC_EVT_VENT_VOL_MSMT_INOP"; break;
      case MDC_EVT_RESPIRATOR_TEMP_HI: str = "MDC_EVT_RESPIRATOR_TEMP_HI"; break;
      case MDC_EVT_VENT_GAS_AGENT_NOT_SELECTED: str = "MDC_EVT_VENT_GAS_AGENT_NOT_SELECTED"; break;
      case MDC_EVT_VENT_SYNCH_INOP: str = "MDC_EVT_VENT_SYNCH_INOP"; break;
      case MDC_EVT_FLOW_DISTURB: str = "MDC_EVT_FLOW_DISTURB"; break;
      case MDC_EVT_VENT_EXP_VALVE_STUCK: str = "MDC_EVT_VENT_EXP_VALVE_STUCK"; break;
      case MDC_EVT_TIME_PD_DELIV_COMP: str = "MDC_EVT_TIME_PD_DELIV_COMP"; break;
      case MDC_EVT_DEV_STAT_RPT: str = "MDC_EVT_DEV_STAT_RPT"; break;
      case MDC_EVT_VENT_MIX_IRIS_INOP: str = "MDC_EVT_VENT_MIX_IRIS_INOP"; break;
      case MDC_EVT_TIME_PD_STANDBY_COMP: str = "MDC_EVT_TIME_PD_STANDBY_COMP"; break;
      case MDC_EVT_VENT_BREATHING_SYS_VENTED: str = "MDC_EVT_VENT_BREATHING_SYS_VENTED"; break;
      case MDC_EVT_VENT_CO2_ABSORB_EXH: str = "MDC_EVT_VENT_CO2_ABSORB_EXH"; break;
      case MDC_EVT_VENT_CO2_SENSOR_LINE_OBSTRUC: str = "MDC_EVT_VENT_CO2_SENSOR_LINE_OBSTRUC"; break;
      case MDC_EVT_VENT_ENDOTRACH_TUBE_OCCL: str = "MDC_EVT_VENT_ENDOTRACH_TUBE_OCCL"; break;
      case MDC_EVT_VENT_TEMP_HI: str = "MDC_EVT_VENT_TEMP_HI"; break;
      case MDC_EVT_VENT_COMPONENT_DISCONN: str = "MDC_EVT_VENT_COMPONENT_DISCONN"; break;
      case MDC_EVT_VENT_PRESS_O2_INSP_INOP: str = "MDC_EVT_VENT_PRESS_O2_INSP_INOP"; break;
      case MDC_EVT_VENT_GAS_LINE_PROB: str = "MDC_EVT_VENT_GAS_LINE_PROB"; break;
      case MDC_EVT_VENT_GAS_MIXER_INOP: str = "MDC_EVT_VENT_GAS_MIXER_INOP"; break;
      case MDC_EVT_VENT_BREATHING_SYS_LEAK: str = "MDC_EVT_VENT_BREATHING_SYS_LEAK"; break;
      case MDC_EVT_LIMIT_AL_LO: str = "MDC_EVT_LIMIT_AL_LO"; break;
      case MDC_EVT_PRESS_FLUID_LINE_EXCESS: str = "MDC_EVT_PRESS_FLUID_LINE_EXCESS"; break;
      case MDC_EVT_POWER_PROB: str = "MDC_EVT_POWER_PROB"; break;
      case MDC_EVT_ENVIRON: str = "MDC_EVT_ENVIRON"; break;
      case MDC_EVT_VENT_DISCONN: str = "MDC_EVT_VENT_DISCONN"; break;
      case MDC_EVT_SYRINGE_TIMEOUT_WARN: str = "MDC_EVT_SYRINGE_TIMEOUT_WARN"; break;
      case MDC_EVT_USER_INPUT_DATA_VAL_ERR_HI: str = "MDC_EVT_USER_INPUT_DATA_VAL_ERR_HI"; break;
      case MDC_EVT_VENT_INOP: str = "MDC_EVT_VENT_INOP"; break;
      case MDC_EVT_VENT_STUCK: str = "MDC_EVT_VENT_STUCK"; break;
      case MDC_EVT_PUMP_SYRINGE_DELIV_TIMEOUT: str = "MDC_EVT_PUMP_SYRINGE_DELIV_TIMEOUT"; break;
      case MDC_EVT_FLOW_OBSTRUC: str = "MDC_EVT_FLOW_OBSTRUC"; break;
      case MDC_EVT_HUMID_HI_ERR: str = "MDC_EVT_HUMID_HI_ERR"; break;
      case MDC_EVT_FLUID_LINE_HI_GT_LIM_PRESSURE: str = "MDC_EVT_FLUID_LINE_HI_GT_LIM_PRESSURE"; break;
      case MDC_EVT_FLOW_FLUID_LINE_RES_WARN: str = "MDC_EVT_FLOW_FLUID_LINE_RES_WARN"; break;
      case MDC_EVT_TIMEOUT: str = "MDC_EVT_TIMEOUT"; break;
      case MDC_EVT_PUMP_VOL_TBI_COMP: str = "MDC_EVT_PUMP_VOL_TBI_COMP"; break;
      case MDC_EVT_DISPOS_LO: str = "MDC_EVT_DISPOS_LO"; break;
      case MDC_EVT_EQUIP: str = "MDC_EVT_EQUIP"; break;
      case MDC_EVT_FLUID_LINE_AIR: str = "MDC_EVT_FLUID_LINE_AIR"; break;
      case MDC_EVT_VENT_FLOW_O2_DELIV_LO: str = "MDC_EVT_VENT_FLOW_O2_DELIV_LO"; break;
      case MDC_EVT_VENT_CONC_O2_DELIV_LO: str = "MDC_EVT_VENT_CONC_O2_DELIV_LO"; break;
      case MDC_EVT_PUMP_FLOW_FREE: str = "MDC_EVT_PUMP_FLOW_FREE"; break;
      case MDC_EVT_INCOMPAT: str = "MDC_EVT_INCOMPAT"; break;
      case MDC_EVT_NOS: str = "MDC_EVT_NOS"; break;
      case MDC_EVT_APNEA: str = "MDC_EVT_APNEA"; break;
      case MDC_EVT_ECG_NOT_PACED: str = "MDC_EVT_ECG_NOT_PACED"; break;
      case MDC_EVT_ECG_ASYSTOLE: str = "MDC_EVT_ECG_ASYSTOLE"; break;
      case MDC_EVT_ECG_BEAT_MISSED: str = "MDC_EVT_ECG_BEAT_MISSED"; break;
      case MDC_EVT_ECG_BEAT_UNUSUAL: str = "MDC_EVT_ECG_BEAT_UNUSUAL"; break;
      case MDC_EVT_ECG_BIGEM: str = "MDC_EVT_ECG_BIGEM"; break;
      case MDC_EVT_ECG_SINUS_BRADY: str = "MDC_EVT_ECG_SINUS_BRADY"; break;
      case MDC_EVT_ECG_BRADY_EXTREME: str = "MDC_EVT_ECG_BRADY_EXTREME"; break;
      case MDC_EVT_ECG_BRADY_SUST: str = "MDC_EVT_ECG_BRADY_SUST"; break;
      case MDC_EVT_ECG_FIB: str = "MDC_EVT_ECG_FIB"; break;
      case MDC_EVT_ECG_NO_ECT_BEAT: str = "MDC_EVT_ECG_NO_ECT_BEAT"; break;
      case MDC_EVT_ECG_PACED_BEAT: str = "MDC_EVT_ECG_PACED_BEAT"; break;
      case MDC_EVT_STAT_ECG_PACING: str = "MDC_EVT_STAT_ECG_PACING"; break;
      case MDC_EVT_ECG_PACING_CAPT: str = "MDC_EVT_ECG_PACING_CAPT"; break;
      case MDC_EVT_ECG_PACING_NON_CAPT: str = "MDC_EVT_ECG_PACING_NON_CAPT"; break;
      case MDC_EVT_ECG_PACING_RUN: str = "MDC_EVT_ECG_PACING_RUN"; break;
      case MDC_EVT_ECG_PATT: str = "MDC_EVT_ECG_PATT"; break;
      case MDC_EVT_ECG_PAUSE: str = "MDC_EVT_ECG_PAUSE"; break;
      case MDC_EVT_ECG_QUADRIGEM: str = "MDC_EVT_ECG_QUADRIGEM"; break;
      case MDC_EVT_ECG_RHY: str = "MDC_EVT_ECG_RHY"; break;
      case MDC_EVT_ECG_RHY_ABSENT: str = "MDC_EVT_ECG_RHY_ABSENT"; break;
      case MDC_EVT_ECG_RHY_ECT: str = "MDC_EVT_ECG_RHY_ECT"; break;
      case MDC_EVT_ECG_RR_IRREG: str = "MDC_EVT_ECG_RR_IRREG"; break;
      case MDC_EVT_ECG_TACHY: str = "MDC_EVT_ECG_TACHY"; break;
      case MDC_EVT_ECG_TACHY_EXTREME: str = "MDC_EVT_ECG_TACHY_EXTREME"; break;
      case MDC_EVT_ECG_TACHY_UNSPEC: str = "MDC_EVT_ECG_TACHY_UNSPEC"; break;
      case MDC_EVT_ECG_TRIGEM: str = "MDC_EVT_ECG_TRIGEM"; break;
      case MDC_EVT_ECG_ATR_FIB: str = "MDC_EVT_ECG_ATR_FIB"; break;
      case MDC_EVT_ECG_ATR_P_C: str = "MDC_EVT_ECG_ATR_P_C"; break;
      case MDC_EVT_ECG_ATR_PACING: str = "MDC_EVT_ECG_ATR_PACING"; break;
      case MDC_EVT_ECG_ATR_STAND: str = "MDC_EVT_ECG_ATR_STAND"; break;
      case MDC_EVT_ECG_ATR_TACHY: str = "MDC_EVT_ECG_ATR_TACHY"; break;
      case MDC_EVT_ECG_ATR_TACHY_MULTIFOCAL: str = "MDC_EVT_ECG_ATR_TACHY_MULTIFOCAL"; break;
      case MDC_EVT_ECG_ATR_TACHY_PAROX: str = "MDC_EVT_ECG_ATR_TACHY_PAROX"; break;
      case MDC_EVT_ECG_AV_DISSOC: str = "MDC_EVT_ECG_AV_DISSOC"; break;
      case MDC_EVT_ECG_AV_PACING_SEQ: str = "MDC_EVT_ECG_AV_PACING_SEQ"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_1: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_1"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_2: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_2"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_2_TYPE_I: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_2_TYPE_I"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_2_TYPE_II: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_2_TYPE_II"; break;
      case MDC_EVT_ECG_BB_BLK: str = "MDC_EVT_ECG_BB_BLK"; break;
      case MDC_EVT_ECG_CARD_BEAT_RATE_HI: str = "MDC_EVT_ECG_CARD_BEAT_RATE_HI"; break;
      case MDC_EVT_ECG_CARD_BEAT_RATE_IRREG: str = "MDC_EVT_ECG_CARD_BEAT_RATE_IRREG"; break;
      case MDC_EVT_ECG_CARD_BEAT_RATE_LO: str = "MDC_EVT_ECG_CARD_BEAT_RATE_LO"; break;
      case MDC_EVT_ECG_CARD_BEAT: str = "MDC_EVT_ECG_CARD_BEAT"; break;
      case MDC_EVT_ECG_HEART_DYING: str = "MDC_EVT_ECG_HEART_DYING"; break;
      case MDC_EVT_ECG_HEART_BLK: str = "MDC_EVT_ECG_HEART_BLK"; break;
      case MDC_EVT_ECG_HEART_BLK_COMP: str = "MDC_EVT_ECG_HEART_BLK_COMP"; break;
      case MDC_EVT_ECG_JUNC_P_C: str = "MDC_EVT_ECG_JUNC_P_C"; break;
      case MDC_EVT_ECG_JUNC_TACHY: str = "MDC_EVT_ECG_JUNC_TACHY"; break;
      case MDC_EVT_ECG_JUNC_TACHY_PAROX: str = "MDC_EVT_ECG_JUNC_TACHY_PAROX"; break;
      case MDC_EVT_ECG_LA_FASC_BLK: str = "MDC_EVT_ECG_LA_FASC_BLK"; break;
      case MDC_EVT_ECG_LBB_BLK: str = "MDC_EVT_ECG_LBB_BLK"; break;
      case MDC_EVT_ECG_LP_FASC_BLK: str = "MDC_EVT_ECG_LP_FASC_BLK"; break;
      case MDC_EVT_ECG_PACER_NOT_PACING: str = "MDC_EVT_ECG_PACER_NOT_PACING"; break;
      case MDC_EVT_ECG_PT_NOT_PACED: str = "MDC_EVT_ECG_PT_NOT_PACED"; break;
      case MDC_EVT_ECG_RBB_BLK: str = "MDC_EVT_ECG_RBB_BLK"; break;
      case MDC_EVT_ECG_SV_BEAT: str = "MDC_EVT_ECG_SV_BEAT"; break;
      case MDC_EVT_ECG_SV_P_C: str = "MDC_EVT_ECG_SV_P_C"; break;
      case MDC_EVT_ECG_SV_TACHY: str = "MDC_EVT_ECG_SV_TACHY"; break;
      case MDC_EVT_ECG_V_PARASYS: str = "MDC_EVT_ECG_V_PARASYS"; break;
      case MDC_EVT_ECG_V_BIGEM: str = "MDC_EVT_ECG_V_BIGEM"; break;
      case MDC_EVT_ECG_V_FIB: str = "MDC_EVT_ECG_V_FIB"; break;
      case MDC_EVT_ECG_V_FLUT: str = "MDC_EVT_ECG_V_FLUT"; break;
      case MDC_EVT_ECG_V_P_C: str = "MDC_EVT_ECG_V_P_C"; break;
      case MDC_EVT_ECG_V_P_C_RonT: str = "MDC_EVT_ECG_V_P_C_RonT"; break;
      case MDC_EVT_ECG_V_P_C_MULTIFORM: str = "MDC_EVT_ECG_V_P_C_MULTIFORM"; break;
      case MDC_EVT_ECG_V_P_C_PAIR: str = "MDC_EVT_ECG_V_P_C_PAIR"; break;
      case MDC_EVT_ECG_V_P_C_RUN: str = "MDC_EVT_ECG_V_P_C_RUN"; break;
      case MDC_EVT_ECG_V_P_C_TRIP: str = "MDC_EVT_ECG_V_P_C_TRIP"; break;
      case MDC_EVT_ECG_V_PACING: str = "MDC_EVT_ECG_V_PACING"; break;
      case MDC_EVT_ECG_V_QUADRIGEM: str = "MDC_EVT_ECG_V_QUADRIGEM"; break;
      case MDC_EVT_ECG_V_RHY: str = "MDC_EVT_ECG_V_RHY"; break;
      case MDC_EVT_ECG_V_STAND: str = "MDC_EVT_ECG_V_STAND"; break;
      case MDC_EVT_ECG_V_TACHY: str = "MDC_EVT_ECG_V_TACHY"; break;
      case MDC_EVT_ECG_V_TACHY_NON_SUST: str = "MDC_EVT_ECG_V_TACHY_NON_SUST"; break;
      case MDC_EVT_ECG_V_TACHY_SUST: str = "MDC_EVT_ECG_V_TACHY_SUST"; break;
      case MDC_EVT_ECG_V_TACHY_TORSADE: str = "MDC_EVT_ECG_V_TACHY_TORSADE"; break;
      case MDC_EVT_ECG_V_TACHY_RHY: str = "MDC_EVT_ECG_V_TACHY_RHY"; break;
      case MDC_EVT_ECG_V_TACHY_RHY_SUST: str = "MDC_EVT_ECG_V_TACHY_RHY_SUST"; break;
      case MDC_EVT_ECG_V_TRIGEM: str = "MDC_EVT_ECG_V_TRIGEM"; break;
      case MDC_EVT_ECG_V_TRIGEM_RHY: str = "MDC_EVT_ECG_V_TRIGEM_RHY"; break;
      case MDC_EVT_ECG_STAT_ECT: str = "MDC_EVT_ECG_STAT_ECT"; break;
      case MDC_EVT_ECG_STAT_RHY: str = "MDC_EVT_ECG_STAT_RHY"; break;
      case MDC_EVT_UNEQU_HR_AND_PR: str = "MDC_EVT_UNEQU_HR_AND_PR"; break;
      case MDC_EVT_DESAT: str = "MDC_EVT_DESAT"; break;
      case MDC_EVT_ECG_SV_P_C_RUN: str = "MDC_EVT_ECG_SV_P_C_RUN"; break;
      case MDC_EVT_ECG_V_P_C_RATE: str = "MDC_EVT_ECG_V_P_C_RATE"; break;
      case MDC_EVT_EEG_SPK_AND_WV: str = "MDC_EVT_EEG_SPK_AND_WV"; break;
      case MDC_EVT_RESP_VOL_BREATHING_IRREG: str = "MDC_EVT_RESP_VOL_BREATHING_IRREG"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_3: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_3"; break;
      case MDC_EVT_ECG_JUNC_RHY: str = "MDC_EVT_ECG_JUNC_RHY"; break;
      case MDC_EVT_ECG_SINUS_TACHY: str = "MDC_EVT_ECG_SINUS_TACHY"; break;
      case MDC_EVT_EEG_DISCHG_SEIZ_CLIN: str = "MDC_EVT_EEG_DISCHG_SEIZ_CLIN"; break;
      case MDC_EVT_ECG_ARRHY: str = "MDC_EVT_ECG_ARRHY"; break;
      case MDC_EVT_EEG_DISCHG_EPILEPTIFORM: str = "MDC_EVT_EEG_DISCHG_EPILEPTIFORM"; break;
      case MDC_EVT_EEG_SPK_SHARP: str = "MDC_EVT_EEG_SPK_SHARP"; break;
      case MDC_EVT_ECG_RHY_CPLT: str = "MDC_EVT_ECG_RHY_CPLT"; break;
      case MDC_EVT_ECG_V_P_C_FREQ: str = "MDC_EVT_ECG_V_P_C_FREQ"; break;
      case MDC_EVT_ECG_ATR_FLUT: str = "MDC_EVT_ECG_ATR_FLUT"; break;
      case MDC_EVT_RESP_BREATHING_SPONT_ASSIST_PSW: str = "MDC_EVT_RESP_BREATHING_SPONT_ASSIST_PSW"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_2_1: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_2_1"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_3_1: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_3_1"; break;
      case MDC_EVT_VENT_RESP_APNEA_15_SEC: str = "MDC_EVT_VENT_RESP_APNEA_15_SEC"; break;
      case MDC_EVT_ECG_PACER_ABSENT: str = "MDC_EVT_ECG_PACER_ABSENT"; break;
      case MDC_EVT_ECG_AV_HEART_BLK_DEG_4_1: str = "MDC_EVT_ECG_AV_HEART_BLK_DEG_4_1"; break;
      case MDC_EVT_ECG_SV_P_C_FREQ: str = "MDC_EVT_ECG_SV_P_C_FREQ"; break;
      case MDC_EVT_VENT_RESP_APNEA_30_SEC: str = "MDC_EVT_VENT_RESP_APNEA_30_SEC"; break;
      case MDC_EVT_ECG_PACER_ARTIF_RECOG: str = "MDC_EVT_ECG_PACER_ARTIF_RECOG"; break;
      case MDC_EVT_ERR_EQU_HR_AND_RR: str = "MDC_EVT_ERR_EQU_HR_AND_RR"; break;
      case MDC_EVT_ECG_JUNC_ESC_BEATS: str = "MDC_EVT_ECG_JUNC_ESC_BEATS"; break;
      case MDC_EVT_ECG_JUNC_TACHY_RUN: str = "MDC_EVT_ECG_JUNC_TACHY_RUN"; break;
      case MDC_EVT_EQU_HR_AND_PR: str = "MDC_EVT_EQU_HR_AND_PR"; break;
      case MDC_EVT_EEG_BACK_ACTIV_ABSENT: str = "MDC_EVT_EEG_BACK_ACTIV_ABSENT"; break;
      case MDC_EVT_BACK_ACTIV_ASYM: str = "MDC_EVT_BACK_ACTIV_ASYM"; break;
      case MDC_EVT_PULS_NON_PULSATILE: str = "MDC_EVT_PULS_NON_PULSATILE"; break;
      case MDC_EVT_STAT_AL_OFF: str = "MDC_EVT_STAT_AL_OFF"; break;
      case MDC_EVT_STAT_AL_ON: str = "MDC_EVT_STAT_AL_ON"; break;
      case MDC_EVT_STAT_BACKUP_MODE: str = "MDC_EVT_STAT_BACKUP_MODE"; break;
      case MDC_EVT_STAT_BATT_CHARGING: str = "MDC_EVT_STAT_BATT_CHARGING"; break;
      case MDC_EVT_STAT_CALIB_MODE: str = "MDC_EVT_STAT_CALIB_MODE"; break;
      case MDC_EVT_STAT_CALIB_RUNNING: str = "MDC_EVT_STAT_CALIB_RUNNING"; break;
      case MDC_EVT_STAT_CALIB_INVIVO_RUNNING: str = "MDC_EVT_STAT_CALIB_INVIVO_RUNNING"; break;
      case MDC_EVT_STAT_CALIB_LIGHT_RUNNING: str = "MDC_EVT_STAT_CALIB_LIGHT_RUNNING"; break;
      case MDC_EVT_STAT_CALIB_PREINS_RUNNING: str = "MDC_EVT_STAT_CALIB_PREINS_RUNNING"; break;
      case MDC_EVT_STAT_CONFIG: str = "MDC_EVT_STAT_CONFIG"; break;
      case MDC_EVT_STAT_SELFTEST_RUNNING: str = "MDC_EVT_STAT_SELFTEST_RUNNING"; break;
      case MDC_EVT_STAT_STANDBY_MODE: str = "MDC_EVT_STAT_STANDBY_MODE"; break;
      case MDC_EVT_STAT_TEST_RUNNING: str = "MDC_EVT_STAT_TEST_RUNNING"; break;
      case MDC_EVT_STAT_ZERO_RUNNING: str = "MDC_EVT_STAT_ZERO_RUNNING"; break;
      case MDC_EVT_STAT_OPT_MOD_SENSOR_CONN: str = "MDC_EVT_STAT_OPT_MOD_SENSOR_CONN"; break;
      case MDC_EVT_STAT_OPT_MOD_SENSOR_WARMING: str = "MDC_EVT_STAT_OPT_MOD_SENSOR_WARMING"; break;
      case MDC_EVT_STAT_SENSOR_WARMING: str = "MDC_EVT_STAT_SENSOR_WARMING"; break;
      case MDC_EVT_STAT_WARMING: str = "MDC_EVT_STAT_WARMING"; break;
      case MDC_EVT_STAT_PRESS_SUST: str = "MDC_EVT_STAT_PRESS_SUST"; break;
      case MDC_EVT_STAT_ECG_AL_ALL_OFF: str = "MDC_EVT_STAT_ECG_AL_ALL_OFF"; break;
      case MDC_EVT_STAT_ECG_AL_SOME_OFF: str = "MDC_EVT_STAT_ECG_AL_SOME_OFF"; break;
      case MDC_EVT_STAT_MODE_SIGH_ACTIVE: str = "MDC_EVT_STAT_MODE_SIGH_ACTIVE"; break;
      case MDC_EVT_STAT_UNCALIB: str = "MDC_EVT_STAT_UNCALIB"; break;
      case MDC_EVT_STAT_VENT_GAS_MIXER_FUNC_DISABL: str = "MDC_EVT_STAT_VENT_GAS_MIXER_FUNC_DISABL"; break;
      case MDC_EVT_STAT_ACTIVE: str = "MDC_EVT_STAT_ACTIVE"; break;
      case MDC_EVT_STAT_VENT_TIME_RESP_VOL_LIMITED: str = "MDC_EVT_STAT_VENT_TIME_RESP_VOL_LIMITED"; break;
      case MDC_EVT_STAT_VENT_PRESS_RESP_VOL_LIMITED: str = "MDC_EVT_STAT_VENT_PRESS_RESP_VOL_LIMITED"; break;
      case MDC_EVT_STAT_VENT_AL_TACHAPNEA_DISABL: str = "MDC_EVT_STAT_VENT_AL_TACHAPNEA_DISABL"; break;
      case MDC_EVT_STAT_CHARGING: str = "MDC_EVT_STAT_CHARGING"; break;
      case MDC_EVT_STAT_AL_SILENCE: str = "MDC_EVT_STAT_AL_SILENCE"; break;
      case MDC_EVT_STAT_AL: str = "MDC_EVT_STAT_AL"; break;
      case MDC_EVT_STAT_DOOR_OPEN: str = "MDC_EVT_STAT_DOOR_OPEN"; break;
      case MDC_EVT_STAT_NBP_INFL_TO_MAX_CUFF_PRESS: str = "MDC_EVT_STAT_NBP_INFL_TO_MAX_CUFF_PRESS"; break;
      case MDC_EVT_STAT_LEARN: str = "MDC_EVT_STAT_LEARN"; break;
      case MDC_EVT_STAT_OFF: str = "MDC_EVT_STAT_OFF"; break;
      case MDC_EVT_STAT_STANDBY: str = "MDC_EVT_STAT_STANDBY"; break;
      case MDC_EVT_STAT_AL_TACHAPNEA_DISABL: str = "MDC_EVT_STAT_AL_TACHAPNEA_DISABL"; break;
      case MDC_EVT_STAT_MODE_TEST: str = "MDC_EVT_STAT_MODE_TEST"; break;
      case MDC_EVT_STAT_WAVE_LEARN: str = "MDC_EVT_STAT_WAVE_LEARN"; break;
      case MDC_EVT_STAT_DOOR_CLOS: str = "MDC_EVT_STAT_DOOR_CLOS"; break;
      case MDC_EVT_STAT_DEPLET: str = "MDC_EVT_STAT_DEPLET"; break;
      case MDC_EVT_STAT_NBP_DEFL_AND_MEAS_BP: str = "MDC_EVT_STAT_NBP_DEFL_AND_MEAS_BP"; break;
      case MDC_EVT_STAT_CONN: str = "MDC_EVT_STAT_CONN"; break;
      case MDC_EVT_STAT_DISCONN: str = "MDC_EVT_STAT_DISCONN"; break;
      case MDC_EVT_STAT_SOUND_IN_ROOM_OFF: str = "MDC_EVT_STAT_SOUND_IN_ROOM_OFF"; break;
      case MDC_EVT_STAT_LIGHTS_IN_ROOM_ON: str = "MDC_EVT_STAT_LIGHTS_IN_ROOM_ON"; break;
      case MDC_EVT_STAT_SOUND_IN_ROOM_ON: str = "MDC_EVT_STAT_SOUND_IN_ROOM_ON"; break;
      case MDC_EVT_STAT_ON: str = "MDC_EVT_STAT_ON"; break;
      case MDC_EVT_STAT_CO2_WARMING: str = "MDC_EVT_STAT_CO2_WARMING"; break;
      case MDC_EVT_STAT_CO2_AL_DISABL: str = "MDC_EVT_STAT_CO2_AL_DISABL"; break;
      case MDC_EVT_STAT_QRS_BEEP_OFF: str = "MDC_EVT_STAT_QRS_BEEP_OFF"; break;
      case MDC_EVT_STAT_APNEA_AL_DISABL: str = "MDC_EVT_STAT_APNEA_AL_DISABL"; break;
      case MDC_EVT_STAT_DEV_BATT_OPERATED: str = "MDC_EVT_STAT_DEV_BATT_OPERATED"; break;
      case MDC_EVT_STAT_DEV: str = "MDC_EVT_STAT_DEV"; break;
      case MDC_EVT_STAT_DEV_MODE_PEDIATRIC: str = "MDC_EVT_STAT_DEV_MODE_PEDIATRIC"; break;
      case MDC_EVT_STAT_DEV_MODE_ADULT: str = "MDC_EVT_STAT_DEV_MODE_ADULT"; break;
      case MDC_EVT_STAT_DEV_MAINS_OPERATED: str = "MDC_EVT_STAT_DEV_MAINS_OPERATED"; break;
      case MDC_EVT_STAT_DEV_MODE_COMPUT_CNTRLD: str = "MDC_EVT_STAT_DEV_MODE_COMPUT_CNTRLD"; break;
      case MDC_EVT_STAT_POWER_SET_LINE: str = "MDC_EVT_STAT_POWER_SET_LINE"; break;
      case MDC_EVT_STAT_POWER_SET_BATT: str = "MDC_EVT_STAT_POWER_SET_BATT"; break;
      case MDC_EVT_STAT_CO2_UNCALIB: str = "MDC_EVT_STAT_CO2_UNCALIB"; break;
      case MDC_EVT_STAT_RUNNING: str = "MDC_EVT_STAT_RUNNING"; break;
      case MDC_EVT_STAT_VENT_BREATH_SPONT: str = "MDC_EVT_STAT_VENT_BREATH_SPONT"; break;
      case MDC_EVT_STAT_VENT_BREATH_MAND: str = "MDC_EVT_STAT_VENT_BREATH_MAND"; break;
      case MDC_EVT_ADVIS_CHK: str = "MDC_EVT_ADVIS_CHK"; break;
      case MDC_EVT_ADVIS_CALIB_CHK: str = "MDC_EVT_ADVIS_CALIB_CHK"; break;
      case MDC_EVT_ADVIS_CALIB_REQD: str = "MDC_EVT_ADVIS_CALIB_REQD"; break;
      case MDC_EVT_ADVIS_CALIB_AND_ZERO_CHK: str = "MDC_EVT_ADVIS_CALIB_AND_ZERO_CHK"; break;
      case MDC_EVT_ADVIS_CONFIG_CHK: str = "MDC_EVT_ADVIS_CONFIG_CHK"; break;
      case MDC_EVT_ADVIS_SETTINGS_CHK: str = "MDC_EVT_ADVIS_SETTINGS_CHK"; break;
      case MDC_EVT_ADVIS_SETUP_CHK: str = "MDC_EVT_ADVIS_SETUP_CHK"; break;
      case MDC_EVT_ADVIS_SRC_CHK: str = "MDC_EVT_ADVIS_SRC_CHK"; break;
      case MDC_EVT_ADVIS_ZERO_CHK: str = "MDC_EVT_ADVIS_ZERO_CHK"; break;
      case MDC_EVT_ADVIS_BATT_COND: str = "MDC_EVT_ADVIS_BATT_COND"; break;
      case MDC_EVT_ADVIS_BATT_REPLACE: str = "MDC_EVT_ADVIS_BATT_REPLACE"; break;
      case MDC_EVT_ADVIS_CABLE_CHK: str = "MDC_EVT_ADVIS_CABLE_CHK"; break;
      case MDC_EVT_ADVIS_CO2_SENSOR_CHK: str = "MDC_EVT_ADVIS_CO2_SENSOR_CHK"; break;
      case MDC_EVT_ADVIS_COMM_CABLE_CHK: str = "MDC_EVT_ADVIS_COMM_CABLE_CHK"; break;
      case MDC_EVT_ADVIS_DISPOS_REPLACE: str = "MDC_EVT_ADVIS_DISPOS_REPLACE"; break;
      case MDC_EVT_ADVIS_GAS_AGENT_CHK: str = "MDC_EVT_ADVIS_GAS_AGENT_CHK"; break;
      case MDC_EVT_ADVIS_LEAD_CHK: str = "MDC_EVT_ADVIS_LEAD_CHK"; break;
      case MDC_EVT_ADVIS_O2_SENSOR_CHK: str = "MDC_EVT_ADVIS_O2_SENSOR_CHK"; break;
      case MDC_EVT_ADVIS_REC_PAPER_REPLACE: str = "MDC_EVT_ADVIS_REC_PAPER_REPLACE"; break;
      case MDC_EVT_ADVIS_SENSOR_CHK: str = "MDC_EVT_ADVIS_SENSOR_CHK"; break;
      case MDC_EVT_ADVIS_STATUS_LOG_CHK: str = "MDC_EVT_ADVIS_STATUS_LOG_CHK"; break;
      case MDC_EVT_ADVIS_VOL_SENSOR_CHK: str = "MDC_EVT_ADVIS_VOL_SENSOR_CHK"; break;
      case MDC_EVT_ADVIS_GAIN_DECR: str = "MDC_EVT_ADVIS_GAIN_DECR"; break;
      case MDC_EVT_ADVIS_GAIN_INCR: str = "MDC_EVT_ADVIS_GAIN_INCR"; break;
      case MDC_EVT_ADVIS_TIME_CHK: str = "MDC_EVT_ADVIS_TIME_CHK"; break;
      case MDC_EVT_ADVIS_UNIT_CHK: str = "MDC_EVT_ADVIS_UNIT_CHK"; break;
      case MDC_EVT_ADVIS_PUMP_SYRINGE_REPLACE_WARN: str = "MDC_EVT_ADVIS_PUMP_SYRINGE_REPLACE_WARN"; break;
      case MDC_EVT_ADVIS_PUMP_SYRINGE_REPLACE_IMMED: str = "MDC_EVT_ADVIS_PUMP_SYRINGE_REPLACE_IMMED"; break;
      case MDC_EVT_ADVIS_VENT_WATER_TRAP_CHK: str = "MDC_EVT_ADVIS_VENT_WATER_TRAP_CHK"; break;
      case MDC_EVT_ADVIS_VAPORISER_CHK_DISCONN: str = "MDC_EVT_ADVIS_VAPORISER_CHK_DISCONN"; break;
      case MDC_EVT_ADVIS_VENT_PRESS_AWAY_CHK: str = "MDC_EVT_ADVIS_VENT_PRESS_AWAY_CHK"; break;
      case MDC_EVT_ADVIS_VENT_FLOW_SENSOR_CHK: str = "MDC_EVT_ADVIS_VENT_FLOW_SENSOR_CHK"; break;
      case MDC_EVT_ADVIS_VENT_FLOW_CALIB: str = "MDC_EVT_ADVIS_VENT_FLOW_CALIB"; break;
      case MDC_EVT_ADVIS_VENT_MIX_IRIS_CALIB: str = "MDC_EVT_ADVIS_VENT_MIX_IRIS_CALIB"; break;
      case MDC_EVT_ADVIS_VENT_AIR_SUPP_CHK: str = "MDC_EVT_ADVIS_VENT_AIR_SUPP_CHK"; break;
      case MDC_EVT_ADVIS_VENT_EXP_VALVE_CHK: str = "MDC_EVT_ADVIS_VENT_EXP_VALVE_CHK"; break;
      default: break;
    }
    return str;
  }

private:
  // Disallow use of implicitly generated member functions:
  NomenclatureEventStringUtil(const NomenclatureEventStringUtil &src);
  NomenclatureEventStringUtil &operator=(const NomenclatureEventStringUtil &rhs);
  
  NomenclatureEventStringUtil(){}
  ~NomenclatureEventStringUtil(){}
};

#endif