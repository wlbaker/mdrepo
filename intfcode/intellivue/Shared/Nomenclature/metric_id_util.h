/**
 * @file metric_id_util.h
 *
 * @brief String converter for nomenclature from 11073 part 10101. This header
 * includes medical supervisory control and data acquisition (SCADA)
 * nomenclature. This header is intended to be shared by software which uses
 * 11073 nomenclature.
 *
 * @see ISO/IEEE 11073-10101:2004(E) HEALTH INFORMATICS â€”
 * POINT-OF-CARE MEDICAL DEVICE COMMUNICATION
 *
 * @author Micheal Szwaja
 *
 */
//=============================================================================

#ifndef METRIC_ID_UTIL_H_
#define METRIC_ID_UTIL_H_

#include <string>
#include "x73_nomenclature_medical_scada.h"

class MetricIDUtil
{
public:
  const static std::string MetricIDToString(const long metric_id)
  {
    std::string metric_str;
    switch(metric_id)
    {
      case MDC_ECG_LEAD_CONFIG: metric_str = "Unspecified lead"; break;
      case MDC_ECG_LEAD_I: metric_str = "I"; break;
      case MDC_ECG_LEAD_II: metric_str = "II"; break;
      case MDC_ECG_LEAD_V1: metric_str = "V1"; break;
      case MDC_ECG_LEAD_V2: metric_str = "V2"; break;
      case MDC_ECG_LEAD_V3: metric_str = "V3"; break;
      case MDC_ECG_LEAD_V4: metric_str = "V4"; break;
      case MDC_ECG_LEAD_V5: metric_str = "V5"; break;
      case MDC_ECG_LEAD_V6: metric_str = "V6"; break;
      case MDC_ECG_LEAD_V7: metric_str = "V7"; break;
      case MDC_ECG_LEAD_V2R: metric_str = "V2R"; break;
      case MDC_ECG_LEAD_V3R: metric_str = "V3R"; break;
      case MDC_ECG_LEAD_V4R: metric_str = "V4R"; break;
      case MDC_ECG_LEAD_V5R: metric_str = "V5R"; break;
      case MDC_ECG_LEAD_V6R: metric_str = "V6R"; break;
      case MDC_ECG_LEAD_V7R: metric_str = "V7R"; break;
      case MDC_ECG_LEAD_VX: metric_str = "X"; break;
      case MDC_ECG_LEAD_VY: metric_str = "Y"; break;
      case MDC_ECG_LEAD_VZ: metric_str = "Z"; break;
      case MDC_ECG_LEAD_CC5: metric_str = "CC5"; break;
      case MDC_ECG_LEAD_CM5: metric_str = "CM5"; break;
      case MDC_ECG_LEAD_LA: metric_str = "Left arm"; break;
      case MDC_ECG_LEAD_RA: metric_str = "Right arm"; break;
      case MDC_ECG_LEAD_LL: metric_str = "Left leg"; break;
      case MDC_ECG_LEAD_fI: metric_str = "I"; break;
      case MDC_ECG_LEAD_fE: metric_str = "E"; break;
      case MDC_ECG_LEAD_fC: metric_str = "C"; break;
      case MDC_ECG_LEAD_fA: metric_str = "A"; break;
      case MDC_ECG_LEAD_fM: metric_str = "M"; break;
      case MDC_ECG_LEAD_fF: metric_str = "F"; break;
      case MDC_ECG_LEAD_fH: metric_str = "H"; break;
      case MDC_ECG_LEAD_Ical: metric_str = "MDC_ECG_LEAD_Ical"; break;
      case MDC_ECG_LEAD_IIcal: metric_str = "MDC_ECG_LEAD_IIcal"; break;
      case MDC_ECG_LEAD_V1cal: metric_str = "MDC_ECG_LEAD_V1cal"; break;
      case MDC_ECG_LEAD_V2cal: metric_str = "MDC_ECG_LEAD_V2cal"; break;
      case MDC_ECG_LEAD_V3cal: metric_str = "MDC_ECG_LEAD_V3cal"; break;
      case MDC_ECG_LEAD_V4cal: metric_str = "MDC_ECG_LEAD_V4cal"; break;
      case MDC_ECG_LEAD_V5cal: metric_str = "MDC_ECG_LEAD_V5cal"; break;
      case MDC_ECG_LEAD_V6cal: metric_str = "MDC_ECG_LEAD_V6cal"; break;
      case MDC_ECG_LEAD_V7cal: metric_str = "MDC_ECG_LEAD_V7cal"; break;
      case MDC_ECG_LEAD_V2Rcal: metric_str = "MDC_ECG_LEAD_V2Rcal"; break;
      case MDC_ECG_LEAD_V3Rcal: metric_str = "MDC_ECG_LEAD_V3Rcal"; break;
      case MDC_ECG_LEAD_V4Rcal: metric_str = "MDC_ECG_LEAD_V4Rcal"; break;
      case MDC_ECG_LEAD_V5Rcal: metric_str = "MDC_ECG_LEAD_V5Rcal"; break;
      case MDC_ECG_LEAD_V6Rcal: metric_str = "MDC_ECG_LEAD_V6Rcal"; break;
      case MDC_ECG_LEAD_V7Rcal: metric_str = "MDC_ECG_LEAD_V7Rcal"; break;
      case MDC_ECG_LEAD_VXcal: metric_str = "MDC_ECG_LEAD_VXcal"; break;
      case MDC_ECG_LEAD_VYcal: metric_str = "MDC_ECG_LEAD_VYcal"; break;
      case MDC_ECG_LEAD_VZcal: metric_str = "MDC_ECG_LEAD_VZcal"; break;
      case MDC_ECG_LEAD_C5cal: metric_str = "MDC_ECG_LEAD_C5cal"; break;
      case MDC_ECG_LEAD_CM5cal: metric_str = "MDC_ECG_LEAD_CM5cal"; break;
      case MDC_ECG_LEAD_LAcal: metric_str = "MDC_ECG_LEAD_LAcal"; break;
      case MDC_ECG_LEAD_RAcal: metric_str = "MDC_ECG_LEAD_RAcal"; break;
      case MDC_ECG_LEAD_LLcal: metric_str = "MDC_ECG_LEAD_LLcal"; break;
      case MDC_ECG_LEAD_fIcal: metric_str = "MDC_ECG_LEAD_fIcal"; break;
      case MDC_ECG_LEAD_fEcal: metric_str = "MDC_ECG_LEAD_fEcal"; break;
      case MDC_ECG_LEAD_fCcal: metric_str = "MDC_ECG_LEAD_fCcal"; break;
      case MDC_ECG_LEAD_fAcal: metric_str = "MDC_ECG_LEAD_fAcal"; break;
      case MDC_ECG_LEAD_fMcal: metric_str = "MDC_ECG_LEAD_fMcal"; break;
      case MDC_ECG_LEAD_fFcal: metric_str = "MDC_ECG_LEAD_fFcal"; break;
      case MDC_ECG_LEAD_fHcal: metric_str = "MDC_ECG_LEAD_fHcal"; break;
      case MDC_ECG_LEAD_III: metric_str = "III"; break;
      case MDC_ECG_LEAD_AVR: metric_str = "aVR"; break;
      case MDC_ECG_LEAD_AVL: metric_str = "aVL"; break;
      case MDC_ECG_LEAD_AVF: metric_str = "aVF"; break;
      case MDC_ECG_LEAD_AVRneg: metric_str = "-aVR"; break;
      case MDC_ECG_LEAD_C: metric_str = "MDC_ECG_LEAD_C"; break;
      case MDC_ECG_LEAD_V: metric_str = "MDC_ECG_LEAD_V"; break;
      case MDC_ECG_LEAD_VR: metric_str = "MDC_ECG_LEAD_VR"; break;
      case MDC_ECG_LEAD_VL: metric_str = "MDC_ECG_LEAD_VL"; break;
      case MDC_ECG_LEAD_VF: metric_str = "MDC_ECG_LEAD_VF"; break;
      case MDC_ECG_LEAD_V8: metric_str = "MDC_ECG_LEAD_V8"; break;
      case MDC_ECG_LEAD_Dn: metric_str = "MDC_ECG_LEAD_Dn"; break;
      case MDC_ECG_LEAD_An: metric_str = "MDC_ECG_LEAD_An"; break;
      case MDC_ECG_LEAD_Jn: metric_str = "MDC_ECG_LEAD_Jn"; break;
      case MDC_ECG_LEAD_MCL: metric_str = "MDC_ECG_LEAD_MCL"; break;
      case MDC_ECG_LEAD_MCL1: metric_str = "MDC_ECG_LEAD_MCL1"; break;
      case MDC_ECG_LEAD_MCL2: metric_str = "MDC_ECG_LEAD_MCL2"; break;
      case MDC_ECG_LEAD_MCL3: metric_str = "MDC_ECG_LEAD_MCL3"; break;
      case MDC_ECG_LEAD_MCL4: metric_str = "MDC_ECG_LEAD_MCL4"; break;
      case MDC_ECG_LEAD_MCL5: metric_str = "MDC_ECG_LEAD_MCL5"; break;
      case MDC_ECG_LEAD_MCL6: metric_str = "MDC_ECG_LEAD_MCL6"; break;
      case MDC_ECG_LEAD_C1FR: metric_str = "MDC_ECG_LEAD_C1FR"; break;
      case MDC_ECG_LEAD_C2FR: metric_str = "MDC_ECG_LEAD_C2FR"; break;
      case MDC_ECG_LEAD_C3FR: metric_str = "MDC_ECG_LEAD_C3FR"; break;
      case MDC_ECG_LEAD_C4FR: metric_str = "MDC_ECG_LEAD_C4FR"; break;
      case MDC_ECG_LEAD_C4RFR: metric_str = "MDC_ECG_LEAD_C4RFR"; break;
      case MDC_ECG_LEAD_C5FR: metric_str = "MDC_ECG_LEAD_C5FR"; break;
      case MDC_ECG_LEAD_C6FR: metric_str = "MDC_ECG_LEAD_C6FR"; break;
      case MDC_ECG_LEAD_C7FR: metric_str = "MDC_ECG_LEAD_C7FR"; break;
      case MDC_ECG_LEAD_C8FR: metric_str = "MDC_ECG_LEAD_C8FR"; break;
      case MDC_ECG_LEAD_ECGLD91: metric_str = "MDC_ECG_LEAD_ECGLD91"; break;
      case MDC_ECG_LEAD_ECGLD92: metric_str = "MDC_ECG_LEAD_ECGLD92"; break;
      case MDC_ECG_LEAD_ECGLD93: metric_str = "MDC_ECG_LEAD_ECGLD93"; break;
      case MDC_ECG_LEAD_ECGLD94: metric_str = "MDC_ECG_LEAD_ECGLD94"; break;
      case MDC_ECG_LEAD_ECGLD95: metric_str = "MDC_ECG_LEAD_ECGLD95"; break;
      case MDC_ECG_LEAD_ECGLD96: metric_str = "MDC_ECG_LEAD_ECGLD96"; break;
      case MDC_ECG_LEAD_ECGLD97: metric_str = "MDC_ECG_LEAD_ECGLD97"; break;
      case MDC_ECG_LEAD_ECGLD98: metric_str = "MDC_ECG_LEAD_ECGLD98"; break;
      case MDC_ECG_LEAD_ECGLD99: metric_str = "MDC_ECG_LEAD_ECGLD99"; break;
      case MDC_ECG_LEAD_ES: metric_str = "MDC_ECG_LEAD_ES"; break;
      case MDC_ECG_LEAD_AS: metric_str = "MDC_ECG_LEAD_AS"; break;
      case MDC_ECG_LEAD_AI: metric_str = "MDC_ECG_LEAD_AI"; break;
      case MDC_ECG_LEAD_dI: metric_str = "MDC_ECG_LEAD_dI"; break;
      case MDC_ECG_LEAD_dII: metric_str = "MDC_ECG_LEAD_dII"; break;
      case MDC_ECG_LEAD_dIII: metric_str = "MDC_ECG_LEAD_dIII"; break;
      case MDC_ECG_LEAD_daVR: metric_str = "MDC_ECG_LEAD_daVR"; break;
      case MDC_ECG_LEAD_daVL: metric_str = "MDC_ECG_LEAD_daVL"; break;
      case MDC_ECG_LEAD_daVF: metric_str = "MDC_ECG_LEAD_daVF"; break;
      case MDC_ECG_LEAD_dV1: metric_str = "MDC_ECG_LEAD_dV1"; break;
      case MDC_ECG_LEAD_dV2: metric_str = "MDC_ECG_LEAD_dV2"; break;
      case MDC_ECG_LEAD_dV3: metric_str = "MDC_ECG_LEAD_dV3"; break;
      case MDC_ECG_LEAD_dV4: metric_str = "MDC_ECG_LEAD_dV4"; break;
      case MDC_ECG_LEAD_dV5: metric_str = "MDC_ECG_LEAD_dV5"; break;
      case MDC_ECG_LEAD_dV6: metric_str = "MDC_ECG_LEAD_dV6"; break;
      case MDC_ECG_LEAD_RL: metric_str = "MDC_ECG_LEAD_RL"; break;
      case MDC_ECG_LEAD_EASI_S: metric_str = "MDC_ECG_LEAD_EASI_S"; break;
      case MDC_ECG_ELEC_POTL: metric_str = "ECG"; break; // Added lead descriptors from table A.7.1.1
      case MDC_ECG_ELEC_POTL_I: metric_str = "ECG|I"; break;
      case MDC_ECG_ELEC_POTL_II: metric_str = "ECG|II"; break;
      case MDC_ECG_ELEC_POTL_V1: metric_str = "ECG|V1"; break;
      case MDC_ECG_ELEC_POTL_V2: metric_str = "ECG|V2"; break;
      case MDC_ECG_ELEC_POTL_V3: metric_str = "ECG|V3"; break;
      case MDC_ECG_ELEC_POTL_V4: metric_str = "ECG|V4"; break;
      case MDC_ECG_ELEC_POTL_V5: metric_str = "ECG|V5"; break;
      case MDC_ECG_ELEC_POTL_V6: metric_str = "ECG|V6"; break;
      case MDC_ECG_ELEC_POTL_VX: metric_str = "ECG|X"; break;
      case MDC_ECG_ELEC_POTL_VY: metric_str = "ECG|Y"; break;
      case MDC_ECG_ELEC_POTL_VZ: metric_str = "ECG|Z"; break;
      case MDC_ECG_ELEC_POTL_LA: metric_str = "ECG|Left arm"; break;
      case MDC_ECG_ELEC_POTL_RA: metric_str = "ECG|Right arm"; break;
      case MDC_ECG_ELEC_POTL_LL: metric_str = "ECG|Left leg"; break;
      case MDC_ECG_ELEC_POTL_III: metric_str = "ECG|III"; break;
      case MDC_ECG_ELEC_POTL_AVR: metric_str = "ECG|aVR"; break;
      case MDC_ECG_ELEC_POTL_AVL: metric_str = "ECG|aVL"; break;
      case MDC_ECG_ELEC_POTL_AVF: metric_str = "ECG|aVF"; break;
      case MDC_ECG_ELEC_POTL_C: metric_str = "MDC_ECG_ELEC_POTL_C"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_V: metric_str = "MDC_ECG_ELEC_POTL_V"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL: metric_str = "MDC_ECG_ELEC_POTL_MCL"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL1: metric_str = "MDC_ECG_ELEC_POTL_MCL1"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL2: metric_str = "MDC_ECG_ELEC_POTL_MCL2"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL3: metric_str = "MDC_ECG_ELEC_POTL_MCL3"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL4: metric_str = "MDC_ECG_ELEC_POTL_MCL4"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL5: metric_str = "MDC_ECG_ELEC_POTL_MCL5"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_MCL6: metric_str = "MDC_ECG_ELEC_POTL_MCL6"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C1FR: metric_str = "MDC_ECG_ELEC_POTL_C1FR"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C2FR: metric_str = "MDC_ECG_ELEC_POTL_C2FR"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C3FR: metric_str = "MDC_ECG_ELEC_POTL_C3FR"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C4FR: metric_str = "MDC_ECG_ELEC_POTL_C4FR"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C5FR: metric_str = "MDC_ECG_ELEC_POTL_C5FR"; break; // TODO ECG| what <lead>?
      case MDC_ECG_ELEC_POTL_C6FR: metric_str = "MDC_ECG_ELEC_POTL_C6FR"; break;  // TODO ECG| what <lead>?
      case MDC_ECG_AMPL_ST: metric_str = "MDC_ECG_AMPL_ST"; break;
      case MDC_ECG_AMPL_J: metric_str = "ST-J"; break; // duplicate MDC_ECG_POINT_J
      case MDC_ECG_AMPL_P_MAX: metric_str = "Pmax"; break;
      case MDC_ECG_AMPL_P_MIN: metric_str = "Pmin"; break;
      case MDC_ECG_AMPL_Q: metric_str = "MDC_ECG_AMPL_Q"; break;
      case MDC_ECG_AMPL_R: metric_str = "Rmax"; break;
      case MDC_ECG_AMPL_S: metric_str = "Smax"; break;
      case MDC_ECG_AMPL_T_MAX: metric_str = "Tmax"; break;
      case MDC_ECG_AMPL_T_MIN: metric_str = "Tmin"; break;
      case MDC_ECG_AMPL_P3: metric_str = "P3"; break;
      case MDC_ECG_AREA_Q: metric_str = "Qarea"; break;
      case MDC_ECG_AREA_T: metric_str = "Tarea"; break;
      case MDC_ECG_AREA_P: metric_str = "Parea"; break;
      case MDC_ECG_AREA_QRS: metric_str = "QRSarea"; break;
      case MDC_ECG_AREA_ST: metric_str = "ST-Tarea"; break;
      case MDC_ECG_TIME_PD_P1: metric_str = "MDC_ECG_TIME_PD_P1"; break;
      case MDC_ECG_TIME_PD_P2: metric_str = "MDC_ECG_TIME_PD_P2"; break;
      case MDC_ECG_TIME_PD_P3: metric_str = "MDC_ECG_TIME_PD_P3"; break;
      case MDC_ECG_SLOPE_ST: metric_str = "STslope"; break;
      case MDC_ECG_TIME_END_P: metric_str = "Poff"; break;
      case MDC_ECG_TIME_END_QRS: metric_str = "QRSoff"; break;
      case MDC_ECG_TIME_END_T: metric_str = "Toff"; break;
      case MDC_ECG_TIME_PD_P: metric_str = "MDC_ECG_TIME_PD_P"; break;
      case MDC_ECG_INTEGRAL_P: metric_str = "Pintegral"; break;
      case MDC_ECG_TIME_PD_PR: metric_str = "PR"; break;
      case MDC_ECG_INTEGRAL_Q: metric_str = "Qintegral"; break;
      case MDC_ECG_TIME_PD_Q: metric_str = "MDC_ECG_TIME_PD_Q"; break;
      case MDC_ECG_TIME_PD_QRS: metric_str = "MDC_ECG_TIME_PD_QRS"; break;
      case MDC_ECG_TIME_PD_QT: metric_str = "QT"; break;
      case MDC_ECG_TIME_PD_QT_CORR: metric_str = "QTc"; break;
      case MDC_ECG_INTEGRAL_QRS: metric_str = "QRS-integral"; break;
      case MDC_ECG_INTEGRAL_T: metric_str = "Tintegral"; break;
      case MDC_ECG_INTEGRAL_ST: metric_str = "ST-Tintegral"; break;
      case MDC_ECG_TIME_START_P: metric_str = "Pon"; break;
      case MDC_ECG_TIME_START_QRS: metric_str = "QRSon"; break;
      case MDC_ECG_TIME_START_T: metric_str = "Ton"; break;
      case MDC_ECG_POINT_REF: metric_str = "MDC_ECG_POINT_REF"; break;
      case MDC_ECG_POINT_ST: metric_str = "MDC_ECG_POINT_ST"; break;
      case MDC_ECG_POINT_ISO: metric_str = "MDC_ECG_POINT_ISO"; break;
      case MDC_ECG_TIME_PD_VENT_ACTIV: metric_str = "MDC_ECG_TIME_PD_VENT_ACTIV"; break;
      case MDC_ECG_TIME_PD_R_1: metric_str = "R1"; break;
      case MDC_ECG_TIME_PD_R_2: metric_str = "R2"; break;
      case MDC_ECG_TIME_PD_R_3: metric_str = "R3"; break;
      case MDC_ECG_TIME_PD_S_1: metric_str = "S1"; break;
      case MDC_ECG_TIME_PD_S_2: metric_str = "S2"; break;
      case MDC_ECG_TIME_PD_S_3: metric_str = "S3"; break;
      case MDC_ECG_ELEC_POTL_R_1: metric_str = "MDC_ECG_ELEC_POTL_R_1"; break;
      case MDC_ECG_ELEC_POTL_R_2: metric_str = "MDC_ECG_ELEC_POTL_R_2"; break;
      case MDC_ECG_ELEC_POTL_R_3: metric_str = "MDC_ECG_ELEC_POTL_R_3"; break;
      case MDC_ECG_ELEC_POTL_S_1: metric_str = "MDC_ECG_ELEC_POTL_S_1"; break;
      case MDC_ECG_ELEC_POTL_S_2: metric_str = "MDC_ECG_ELEC_POTL_S_2"; break;
      case MDC_ECG_ELEC_POTL_S_3: metric_str = "MDC_ECG_ELEC_POTL_S_3"; break;
      case MDC_ECG_ELEC_POTL_ST_60: metric_str = "ST-J60"; break;
      case MDC_ECG_ELEC_POTL_ST_80: metric_str = "ST-J80"; break;
      case MDC_ECG_ELEC_POTL_ST_20: metric_str = "ST-J20"; break;
      case MDC_ECG_ELEC_POTL_ST_40: metric_str = "ST-J40"; break;
      case MDC_ECG_ANGLE_P_FRONT: metric_str = "Paxis"; break;
      case MDC_ECG_ANGLE_QRS_FRONT: metric_str = "QRSaxis"; break;
      case MDC_ECG_ANGLE_T_FRONT: metric_str = "Taxis"; break;
      case MDC_ECG_TIME_PD_PP_GL: metric_str = "PP"; break;
      case MDC_ECG_TIME_PD_PQ: metric_str = "PQint, PRint"; break;
      case MDC_ECG_TIME_PD_PQ_SEG: metric_str = "PQseg"; break; // NOTE duplicate
      case MDC_ECG_TIME_PD_QRS_GL: metric_str = "MDC_ECG_TIME_PD_QRS_GL"; break;
      case MDC_ECG_TIME_PD_QT_GL: metric_str = "QT"; break;
      case MDC_ECG_TIME_PD_QTc: metric_str = "QTc"; break;
      case MDC_ECG_TIME_PD_RR_GL: metric_str = "RR"; break;
      case MDC_ECG_RR_MAX: metric_str = "MDC_ECG_RR_MAX"; break;
      case MDC_ECG_MAG_P_FRONT: metric_str = "MDC_ECG_MAG_P_FRONT"; break;
      case MDC_ECG_MAG_QRS_FRONT: metric_str = "MDC_ECG_MAG_QRS_FRONT"; break;
      case MDC_ECG_MAG_T_FRONT: metric_str = "MDC_ECG_MAG_T_FRONT"; break;
      case MDC_ECG_TIME_PD_P_GL: metric_str = "MDC_ECG_TIME_PD_P_GL"; break;
      case MDC_ECG_QRS_TYPE: metric_str = "QRStyp"; break;
      case MDC_ECG_MAG_P_VECT: metric_str = "MDC_ECG_MAG_P_VECT"; break;
      case MDC_ECG_MAG_QRS_VECT: metric_str = "MDC_ECG_MAG_QRS_VECT"; break;
      case MDC_ECG_MAG_T_VECT: metric_str = "xxxx"; break;
      case MDC_ECG_ANGLE_P_AZIM: metric_str = "MDC_ECG_ANGLE_P_AZIM"; break;
      case MDC_ECG_ANGLE_QRS_AZIM: metric_str = "MDC_ECG_ANGLE_QRS_AZIM"; break;
      case MDC_ECG_ANGLE_T_AZIM: metric_str = "MDC_ECG_ANGLE_T_AZIM"; break;
      case MDC_ECG_ANGLE_P_ELEV: metric_str = "MDC_ECG_ANGLE_P_ELEV"; break;
      case MDC_ECG_ANGLE_QRS_ELEV: metric_str = "MDC_ECG_ANGLE_QRS_ELEV"; break;
      case MDC_ECG_ANGLE_T_ELEV: metric_str = "MDC_ECG_ANGLE_T_ELEV"; break;
      case MDC_ECG_MAG_J_VECT: metric_str = "MDC_ECG_MAG_J_VECT"; break;
      case MDC_ECG_ANGLE_J_AZIM: metric_str = "MDC_ECG_ANGLE_J_AZIM"; break;
      case MDC_ECG_ANGLE_J_ELEV: metric_str = "MDC_ECG_ANGLE_J_ELEV"; break;
      case MDC_ECG_MAG_J20_VECT: metric_str = "MDC_ECG_MAG_J20_VECT"; break;
      case MDC_ECG_ANGLE_J20_AZIM: metric_str = "MDC_ECG_ANGLE_J20_AZIM"; break;
      case MDC_ECG_ANGLE_J20_ELEV: metric_str = "MDC_ECG_ANGLE_J20_ELEV"; break;
      case MDC_ECG_MAG_J40_VECT: metric_str = "MDC_ECG_MAG_J40_VECT"; break;
      case MDC_ECG_ANGLE_J40_AZIM: metric_str = "MDC_ECG_ANGLE_J40_AZIM"; break;
      case MDC_ECG_ANGLE_J40_ELEV: metric_str = "MDC_ECG_ANGLE_J40_ELEV"; break;
      case MDC_ECG_MAG_J60_VECT: metric_str = "MDC_ECG_MAG_J60_VECT"; break;
      case MDC_ECG_ANGLE_J60_AZIM: metric_str = "MDC_ECG_ANGLE_J60_AZIM"; break;
      case MDC_ECG_ANGLE_J60_ELEV: metric_str = "MDC_ECG_ANGLE_J60_ELEV"; break;
      case MDC_ECG_MAG_J80_VECT: metric_str = "MDC_ECG_MAG_J80_VECT"; break;
      case MDC_ECG_ANGLE_J80_AZIM: metric_str = "MDC_ECG_ANGLE_J80_AZIM"; break;
      case MDC_ECG_ANGLE_J80_ELEV: metric_str = "QRStyp"; break;
      case MDC_ECG_MAG_Jxx_VECT: metric_str = "MDC_ECG_MAG_Jxx_VECT"; break;
      case MDC_ECG_ANGLE_Jxx_AZIM: metric_str = "MDC_ECG_ANGLE_Jxx_AZIM"; break;
      case MDC_ECG_ANGLE_Jxx_ELEV: metric_str = "MDC_ECG_ANGLE_Jxx_ELEV"; break;
      case MDC_ECG_TIME_ST_Jxx: metric_str = "Tjxx"; break;
      case MDC_ECG_MAG_P_VECT_FRONT: metric_str = "MDC_ECG_MAG_P_VECT_FRONT"; break;
      case MDC_ECG_MAG_P_VECT_HORIZ: metric_str = "MDC_ECG_MAG_P_VECT_HORIZ"; break;
      case MDC_ECG_MAG_P_VECT_SAGI: metric_str = "MDC_ECG_MAG_P_VECT_SAGI"; break;
      case MDC_ECG_MAG_QRS_VECT_FRONT: metric_str = "MDC_ECG_MAG_QRS_VECT_FRONT"; break;
      case MDC_ECG_MAG_QRS_VECT_HORIZ: metric_str = "MDC_ECG_MAG_QRS_VECT_HORIZ"; break;
      case MDC_ECG_MAG_QRS_VECT_SAGI: metric_str = "MDC_ECG_MAG_QRS_VECT_SAGI"; break;
      case MDC_ECG_MAG_T_VECT_FRONT: metric_str = "MDC_ECG_MAG_T_VECT_FRONT"; break;
      case MDC_ECG_MAG_T_VECT_HORIZ: metric_str = "MDC_ECG_MAG_T_VECT_HORIZ"; break;
      case MDC_ECG_MAG_T_VECT_SAGI: metric_str = "MDC_ECG_MAG_T_VECT_SAGI"; break;
      case MDC_ECG_PATT: metric_str = "MDC_ECG_PATT"; break;
      case MDC_ECG_LEARN_RHY: metric_str = "MDC_ECG_LEARN_RHY"; break;
      case MDC_ECG_ASY_RHY: metric_str = "MDC_ECG_ASY_RHY"; break;
      case MDC_ECG_ATR_PACED_RHY_CAPT: metric_str = "MDC_ECG_ATR_PACED_RHY_CAPT"; break;
      case MDC_ECG_IDIOV_RHY: metric_str = "MDC_ECG_IDIOV_RHY"; break;
      case MDC_ECG_IDIOV_RHY_ACCEL: metric_str = "MDC_ECG_IDIOV_RHY_ACCEL"; break;
      case MDC_ECG_JUNC_RHY: metric_str = "JESRC"; break;
      case MDC_ECG_JUNC_RHY_ACCEL: metric_str = "MDC_ECG_JUNC_RHY_ACCEL"; break;
      case MDC_ECG_PACED_RHY: metric_str = "MDC_ECG_PACED_RHY"; break;
      case MDC_ECG_RHY: metric_str = "MDC_ECG_RHY"; break;
      case MDC_ECG_RHY_ABSENT: metric_str = "MDC_ECG_RHY_ABSENT"; break;
      case MDC_ECG_RHY_ECT: metric_str = "MDC_ECG_RHY_ECT"; break;
      case MDC_ECG_RHY_IRREG: metric_str = "MDC_ECG_RHY_IRREG"; break;
      case MDC_ECG_RHY_REG: metric_str = "MDC_ECG_RHY_REG"; break;
      case MDC_ECG_RHY_SERIOUS: metric_str = "MDC_ECG_RHY_SERIOUS"; break;
      case MDC_ECG_RHY_UNK: metric_str = "MDC_ECG_RHY_UNK"; break;
      case MDC_ECG_RHY_UNANALYZEABLE: metric_str = "MDC_ECG_RHY_UNANALYZEABLE"; break;
      case MDC_ECG_SINUS_RHY: metric_str = "SR"; break;
      case MDC_ECG_SINUS_BRADY_RHY: metric_str = "MDC_ECG_SINUS_BRADY_RHY"; break;
      case MDC_ECG_SINUS_TACHY_RHY: metric_str = "MDC_ECG_SINUS_TACHY_RHY"; break;
      case MDC_ECG_SV_RHY: metric_str = "MDC_ECG_SV_RHY"; break;
      case MDC_ECG_SV_TACHY_RHY: metric_str = "MDC_ECG_SV_TACHY_RHY"; break;
      case MDC_ECG_V_BIGEM_RHY: metric_str = "MDC_ECG_V_BIGEM_RHY"; break;
      case MDC_ECG_V_RHY: metric_str = "MDC_ECG_V_RHY"; break;
      case MDC_ECG_V_RHY_ACCEL: metric_str = "MDC_ECG_V_RHY_ACCEL"; break;
      case MDC_ECG_V_TACHY_RHY: metric_str = "MDC_ECG_V_TACHY_RHY"; break;
      case MDC_ECG_V_TACHY_RHY_SUST: metric_str = "MDC_ECG_V_TACHY_RHY_SUST"; break;
      case MDC_ECG_V_TRIGEM_RHY: metric_str = "MDC_ECG_V_TRIGEM_RHY"; break;
      case MDC_ECG_SV_BRADY_RHY: metric_str = "MDC_ECG_SV_BRADY_RHY"; break;
      case MDC_ECG_V_FIB_RHY: metric_str = "MDC_ECG_V_FIB_RHY"; break;
      case MDC_ECG_V_P_C_RUN_RHY: metric_str = "MDC_ECG_V_P_C_RUN_RHY"; break;
      case MDC_ECG_V_FIB_TACHY_RHY: metric_str = "MDC_ECG_V_FIB_TACHY_RHY"; break;
      case MDC_ECG_BB_RHY_INTERMIT: metric_str = "IBBB"; break;
      case MDC_ECG_JUNC_ESC_RHY: metric_str = "MDC_ECG_JUNC_ESC_RHY"; break;
      case MDC_ECG_RHY_NOS: metric_str = "MDC_ECG_RHY_NOS"; break;
      case MDC_ECG_BRADY: metric_str = "BRADY"; break;
      case MDC_ECG_ARTIFACT_ANNOT: metric_str = "MDC_ECG_ARTIFACT_ANNOT"; break;
      case MDC_ECG_ASYSTOLE: metric_str = "MDC_ECG_ASYSTOLE"; break;
      case MDC_ECG_ATR_PACED_BEAT: metric_str = "MDC_ECG_ATR_PACED_BEAT"; break;
      case MDC_ECG_ATR_PACED_BEAT_CNT: metric_str = "MDC_ECG_ATR_PACED_BEAT_CNT"; break;
      case MDC_ECG_ATR_PACED_BEAT_ANNOT: metric_str = "MDC_ECG_ATR_PACED_BEAT_ANNOT"; break;
      case MDC_ECG_BEAT_MISSED: metric_str = "MDC_ECG_BEAT_MISSED"; break;
      case MDC_ECG_BEAT_MISSED_CNT: metric_str = "MDC_ECG_BEAT_MISSED_CNT"; break;
      case MDC_ECG_BEAT_MISSED_ANNOT: metric_str = "MDC_ECG_BEAT_MISSED_ANNOT"; break;
      case MDC_ECG_BIGEM: metric_str = "MDC_ECG_BIGEM"; break;
      case MDC_ECG_ARTIFACT: metric_str = "MDC_ECG_ARTIFACT"; break;
      case MDC_ECG_BRADY_EXTREME: metric_str = "MDC_ECG_BRADY_EXTREME"; break;
      case MDC_ECG_BRADY_SUST: metric_str = "MDC_ECG_BRADY_SUST"; break;
      case MDC_ECG_DUAL_PACED_BEAT: metric_str = "MDC_ECG_DUAL_PACED_BEAT"; break;
      case MDC_ECG_DUAL_PACED_BEAT_CNT: metric_str = "MDC_ECG_DUAL_PACED_BEAT_CNT"; break;
      case MDC_ECG_DUAL_PACED_BEAT_ANNOT: metric_str = "MDC_ECG_DUAL_PACED_BEAT_ANNOT"; break;
      case MDC_ECG_ECT: metric_str = "MDC_ECG_ECT"; break;
      case MDC_ECG_ECT_CNT: metric_str = "MDC_ECG_ECT_CNT"; break;
      case MDC_ECG_FIB: metric_str = "MDC_ECG_FIB"; break;
      case MDC_ECG_NO_ECT_BEAT: metric_str = "MDC_ECG_NO_ECT_BEAT"; break;
      case MDC_ECG_P_C: metric_str = "MDC_ECG_P_C"; break;
      case MDC_ECG_PACED_BEAT: metric_str = "MDC_ECG_PACED_BEAT"; break;
      case MDC_ECG_PACED_BEAT_CNT: metric_str = "MDC_ECG_PACED_BEAT_CNT"; break;
      case MDC_ECG_PACED_BEAT_RATE: metric_str = "MDC_ECG_PACED_BEAT_RATE"; break;
      case MDC_ECG_PACED_BEAT_RATE_MAX: metric_str = "MDC_ECG_PACED_BEAT_RATE_MAX"; break;
      case MDC_ECG_PACED_BEAT_RATE_MIN: metric_str = "MDC_ECG_PACED_BEAT_RATE_MIN"; break;
      case MDC_ECG_PACED_BEAT_ANNOT: metric_str = "MDC_ECG_PACED_BEAT_ANNOT"; break;
      case MDC_ECG_PACING_EVENT: metric_str = "MDC_ECG_PACING_EVENT"; break;
      case MDC_ECG_PACING_CAPT: metric_str = "MDC_ECG_PACING_CAPT"; break;
      case MDC_ECG_PACING_NON_CAPT: metric_str = "MDC_ECG_PACING_NON_CAPT"; break;
      case MDC_ECG_PACING_NON_CAPT_CNT: metric_str = "MDC_ECG_PACING_NON_CAPT_CNT"; break;
      case MDC_ECG_PACING_NOT_FOUND: metric_str = "MDC_ECG_PACING_NOT_FOUND"; break;
      case MDC_ECG_PACING_RUN: metric_str = "MDC_ECG_PACING_RUN"; break;
      case MDC_ECG_PACING_RUN_CNT: metric_str = "MDC_ECG_PACING_RUN_CNT"; break;
      case MDC_ECG_PAUSE: metric_str = "MDC_ECG_PAUSE"; break;
      case MDC_ECG_QUADRIGEM: metric_str = "MDC_ECG_QUADRIGEM"; break;
      case MDC_ECG_TACHY: metric_str = "MDC_ECG_TACHY"; break;
      case MDC_ECG_TACHY_EXTREME: metric_str = "MDC_ECG_TACHY_EXTREME"; break;
      case MDC_ECG_TACHY_UNSPEC: metric_str = "MDC_ECG_TACHY_UNSPEC"; break;
      case MDC_ECG_ATR_FIB: metric_str = "AFIB"; break;
      case MDC_ECG_ATR_FLUT: metric_str = "AFLT"; break;
      case MDC_ECG_ATR_P_C: metric_str = "PAC"; break;
      case MDC_ECG_ATR_PACING: metric_str = "MDC_ECG_ATR_PACING"; break;
      case MDC_ECG_ATR_STAND: metric_str = "MDC_ECG_ATR_STAND"; break;
      case MDC_ECG_ATR_TACHY: metric_str = "ATACH"; break;
      case MDC_ECG_ATR_TACHY_MULTIFOCAL: metric_str = "MDC_ECG_ATR_TACHY_MULTIFOCAL"; break;
      case MDC_ECG_ATR_TACHY_PAROX: metric_str = "MDC_ECG_ATR_TACHY_PAROX"; break;
      case MDC_ECG_AV_DISSOC: metric_str = "MDC_ECG_AV_DISSOC"; break;
      case MDC_ECG_AV_PACING_SEQ: metric_str = "MDC_ECG_AV_PACING_SEQ"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_1: metric_str = "MDC_ECG_AV_HEART_BLK_DEG_1"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_2: metric_str = "MDC_ECG_AV_HEART_BLK_DEG_2"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_2_I: metric_str = "MDC_ECG_AV_HEART_BLK_DEG_2_I"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_2_II: metric_str = "MDC_ECG_AV_HEART_BLK_DEG_2_II"; break;
      case MDC_ECG_BB_BLK: metric_str = "BBB"; break;
      case MDC_ECG_CARD_BEAT: metric_str = "BEAT"; break;
      case MDC_ECG_CARD_BEAT_CNT: metric_str = "HR"; break;
      case MDC_ECG_HEART_RATE: metric_str = "HR"; break;// Note: duplicate MDC_ECG_CARD_BEAT_RATE
      case MDC_ECG_CARD_BEAT_RATE_BTB: metric_str = "HRbtb"; break;
      case MDC_ECG_CARD_BEAT_RATE_IRREG: metric_str = "HRirreg"; break;
      case MDC_ECG_HEART_DYING: metric_str = "MDC_ECG_HEART_DYING"; break;
      case MDC_ECG_HEART_BLK: metric_str = "MDC_ECG_HEART_BLK"; break;
      case MDC_ECG_HEART_BLK_COMP: metric_str = "MDC_ECG_HEART_BLK_COMP"; break;
      case MDC_ECG_JUNC_ESC_BEATS: metric_str = "JEB"; break;
      case MDC_ECG_JUNC_TACHY: metric_str = "JTACH"; break;
      case MDC_ECG_JUNC_TACHY_PAROX: metric_str = "MDC_ECG_JUNC_TACHY_PAROX"; break;
      case MDC_ECG_LA_FASC_BLK: metric_str = "LAFB"; break;
      case MDC_ECG_LBB_BLK: metric_str = "LBBB"; break;
      case MDC_ECG_LP_FASC_BLK: metric_str = "LPFB"; break;
      case MDC_ECG_PACER_NOT_PACING: metric_str = "MDC_ECG_PACER_NOT_PACING"; break;
      case MDC_ECG_PACER_NOT_PACING_CNT: metric_str = "MDC_ECG_PACER_NOT_PACING_CNT"; break;
      case MDC_ECG_RBB_BLK: metric_str = "RBBB"; break;
      case MDC_ECG_SINUS_BRADY: metric_str = "SBRAD"; break;
      case MDC_ECG_SINUS_TACHY: metric_str = "STACH"; break;
      case MDC_ECG_SV_BEAT: metric_str = "MDC_ECG_SV_BEAT"; break;
      case MDC_ECG_SV_BEAT_CNT: metric_str = "MDC_ECG_SV_BEAT_CNT"; break;
      case MDC_ECG_SV_BEAT_ANNOT: metric_str = "MDC_ECG_SV_BEAT_ANNOT"; break;
      case MDC_ECG_SV_BRADY: metric_str = "MDC_ECG_SV_BRADY"; break;
      case MDC_ECG_SV_ECT: metric_str = "MDC_ECG_SV_ECT"; break;
      case MDC_ECG_SV_ECT_CNT: metric_str = "MDC_ECG_SV_ECT_CNT"; break;
      case MDC_ECG_SV_P_C: metric_str = "SPVC"; break;
      case MDC_ECG_SV_P_C_CNT: metric_str = "MDC_ECG_SV_P_C_CNT"; break;
      case MDC_ECG_SV_P_C_RATE: metric_str = "MDC_ECG_SV_P_C_RATE"; break;
      case MDC_ECG_SV_P_C_RATE_MAX: metric_str = "MDC_ECG_SV_P_C_RATE_MAX"; break;
      case MDC_ECG_SV_P_C_RATE_MIN: metric_str = "MDC_ECG_SV_P_C_RATE_MIN"; break;
      case MDC_ECG_SV_TACHY: metric_str = "MDC_ECG_SV_TACHY"; break;
      case MDC_ECG_V_PARASYS: metric_str = "MDC_ECG_V_PARASYS"; break;
      case MDC_ECG_V_BIGEM: metric_str = "MDC_ECG_V_BIGEM"; break;
      case MDC_ECG_V_FIB: metric_str = "VFib"; break;
      case MDC_ECG_V_FIB_TACHY: metric_str = "MDC_ECG_V_FIB_TACHY"; break;
      case MDC_ECG_V_FLUT: metric_str = "MDC_ECG_V_FLUT"; break;
      case MDC_ECG_V_PACED_BEAT: metric_str = "MDC_ECG_V_PACED_BEAT"; break;
      case MDC_ECG_V_PACED_BEAT_CNT: metric_str = "MDC_ECG_V_PACED_BEAT_CNT"; break;
      case MDC_ECG_V_PACED_BEAT_ANNOT: metric_str = "MDC_ECG_V_PACED_BEAT_ANNOT"; break;
      case MDC_ECG_V_P_C: metric_str = "PVC"; break;
      case MDC_ECG_V_P_C_CNT: metric_str = "MDC_ECG_V_P_C_CNT"; break;
      case MDC_ECG_V_P_C_RATE: metric_str = "MDC_ECG_V_P_C_RATE"; break;
      case MDC_ECG_V_P_C_RATE_MAX: metric_str = "MDC_ECG_V_P_C_RATE_MAX"; break;
      case MDC_ECG_V_P_C_RATE_MIN: metric_str = "MDC_ECG_V_P_C_RATE_MIN"; break;
      case MDC_ECG_V_P_C_FREQ: metric_str = "FPVC"; break;
      case MDC_ECG_V_P_C_INTERP: metric_str = "MDC_ECG_V_P_C_INTERP"; break;
      case MDC_ECG_V_P_C_MULTIFOCAL: metric_str = "MDC_ECG_V_P_C_MULTIFOCAL"; break; // Note duplicate MDC_ECG_MULTIFORM
      case MDC_ECG_V_P_C_PAIR: metric_str = "MDC_ECG_V_P_C_PAIR"; break;
      case MDC_ECG_V_P_C_PAIR_CNT: metric_str = "MDC_ECG_V_P_C_PAIR_CNT"; break;
      case MDC_ECG_SV_P_C_RUN: metric_str = "RUN S"; break;
      case MDC_ECG_SV_P_C_RUN_CNT: metric_str = "MDC_ECG_SV_P_C_RUN_CNT"; break;
      case MDC_ECG_V_P_C_RUN: metric_str = "RUN V"; break;
      case MDC_ECG_V_P_C_RUN_CNT: metric_str = "MDC_ECG_V_P_C_RUN_CNT"; break;
      case MDC_ECG_V_P_C_TRIP: metric_str = "MDC_ECG_V_P_C_TRIP"; break;
      case MDC_ECG_V_P_C_RonT: metric_str = "RTPVC"; break;
      case MDC_ECG_V_P_C_RonT_CNT: metric_str = "MDC_ECG_V_P_C_RonT_CNT"; break;
      case MDC_ECG_V_PACING: metric_str = "MDC_ECG_V_PACING"; break;
      case MDC_ECG_V_QUADRIGEM: metric_str = "MDC_ECG_V_QUADRIGEM"; break;
      case MDC_ECG_V_STAND: metric_str = "MDC_ECG_V_STAND"; break;
      case MDC_ECG_V_TACHY: metric_str = "VTach "; break;
      case MDC_ECG_V_TACHY_NON_SUST: metric_str = "MDC_ECG_V_TACHY_NON_SUST"; break;
      case MDC_ECG_V_TACHY_SUST: metric_str = "MDC_ECG_V_TACHY_SUST"; break;
      case MDC_ECG_V_TACHY_TORSADE: metric_str = "MDC_ECG_V_TACHY_TORSADE"; break;
      case MDC_ECG_V_TRIGEM: metric_str = "MDC_ECG_V_TRIGEM"; break;
      case MDC_ECG_V_P_C_Q_RUN: metric_str = "MDC_ECG_V_P_C_Q_RUN"; break;
      case MDC_ECG_V_P_C_Q_RUN_CNT: metric_str = "MDC_ECG_V_P_C_Q_RUN_CNT"; break;
      case MDC_ECG_SV_P_C_FREQ: metric_str = "FSPVC"; break;// NOte duplicate MDC_ECG_SV_P_C_FREQUENT
      case MDC_ECG_SV_BEATS: metric_str = "MDC_ECG_SV_BEATS"; break;
      case MDC_ECG_PACED_BEATS: metric_str = "MDC_ECG_PACED_BEATS"; break;
      case MDC_ECG_ECT_ABSENT: metric_str = "MDC_ECG_ECT_ABSENT"; break;
      case MDC_ECG_BEAT_UNUSUAL: metric_str = "MDC_ECG_BEAT_UNUSUAL"; break;
      case MDC_ECG_PACING_ARTIFACT: metric_str = "MDC_ECG_PACING_ARTIFACT"; break;
      case MDC_ECG_SV_TACHY_PAROX: metric_str = "PSVT"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_3: metric_str = "MDC_ECG_AV_HEART_BLK_DEG_3"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_3_I: metric_str = "3:1BLK"; break;
      case MDC_ECG_AV_HEART_BLK_DEG_4_I: metric_str = "4:1BLK "; break;
      case MDC_ECG_P_SINIS_ATR: metric_str = "LAE"; break;
      case MDC_ECG_P_DEXT_ATR: metric_str = "RAE"; break;
      case MDC_ECG_ATR_CONDUC_DEFECT: metric_str = "MDC_ECG_ATR_CONDUC_DEFECT"; break;
      case MDC_ECG_INTRA_VENT_CONDUC_DEFECT: metric_str = "IVCD"; break;
      case MDC_ECG_LBB_BLK_COMP: metric_str = "LBBB"; break;
      case MDC_ECG_LBB_BLK_INCOMP: metric_str = "ILBBB"; break;
      case MDC_ECG_RBB_BLK_COMP: metric_str = "RBBB"; break;
      case MDC_ECG_RBB_BLK_INCOMP: metric_str = "IRBBB"; break;
      case MDC_ECG_BLK_TRIFASC: metric_str = "TFBB"; break;
      case MDC_ECG_BLK_ANT_L_HEMI: metric_str = "LAH"; break;
      case MDC_ECG_WPW_A: metric_str = "WPW_A"; break;
      case MDC_ECG_WPW_A_PROB: metric_str = "MDC_ECG_WPW_A_PROB"; break;
      case MDC_ECG_WPW_A_POSSIB: metric_str = "MDC_ECG_WPW_A_POSSIB"; break;
      case MDC_ECG_WPW_B: metric_str = "WPW_B"; break;
      case MDC_ECG_WPW_B_PROB: metric_str = "MDC_ECG_WPW_B_PROB"; break;
      case MDC_ECG_WPW_B_POSSIB: metric_str = "MDC_ECG_WPW_B_POSSIB"; break;
      case MDC_ECG_WPW_UNK: metric_str = "WPW"; break;
      case MDC_ECG_WPW_UNK_PROB: metric_str = "MDC_ECG_WPW_UNK_PROB"; break;
      case MDC_ECG_WPW_UNK_POSSIB: metric_str = "MDC_ECG_WPW_UNK_POSSIB"; break;
      case MDC_ECG_REG: metric_str = "MDC_ECG_REG"; break;
      case MDC_ECG_ATR_PQ_PQ_100: metric_str = "MDC_ECG_ATR_PQ_PQ_100"; break;
      case MDC_ECG_ARRHY: metric_str = "MDC_ECG_ARRHY"; break;
      case MDC_ECG_ARRHY_PQ_100: metric_str = "MDC_ECG_ARRHY_PQ_100"; break;
      case MDC_ECG_SINUS_ARRHY: metric_str = "SAR"; break;
      case MDC_ECG_ARRHY_ABS: metric_str = "MDC_ECG_ARRHY_ABS"; break;
      case MDC_ECG_RESP_ARRHY: metric_str = "SARresp"; break;
      case MDC_ECG_BIGEM_INTERMIT: metric_str = "MDC_ECG_BIGEM_INTERMIT"; break;
      case MDC_ECG_ATR_BIGEM: metric_str = "MDC_ECG_ATR_BIGEM"; break;
      case MDC_ECG_ATR_BIGEM_INTERMIT: metric_str = "MDC_ECG_ATR_BIGEM_INTERMIT"; break;
      case MDC_ECG_TRIGEM: metric_str = "MDC_ECG_TRIGEM"; break;
      case MDC_ECG_TRIGEM_INTERMIT: metric_str = "MDC_ECG_TRIGEM_INTERMIT"; break;
      case MDC_ECG_VENT_EXTRASYST_W_PAUSE: metric_str = "MDC_ECG_VENT_EXTRASYST_W_PAUSE"; break;
      case MDC_ECG_NORMAL: metric_str = "NOR"; break;
      case MDC_ECG_NORMAL_ANNOT: metric_str = "MDC_ECG_NORMAL_ANNOT"; break;
      case MDC_ECG_VENT_HYPERTROPHY_RIGHT: metric_str = "MDC_ECG_VENT_HYPERTROPHY_RIGHT"; break;
      case MDC_ECG_VENT_HYPERTROPHY_LEFT: metric_str = "MDC_ECG_VENT_HYPERTROPHY_LEFT"; break;
      case MDC_ECG_VENT_HYPERTROPHY: metric_str = "MDC_ECG_VENT_HYPERTROPHY"; break;
      case MDC_ECG_INFARCT_ANT: metric_str = "AMI"; break;
      case MDC_ECG_INFARCT_INT: metric_str = "IMI"; break;
      case MDC_ECG_INFARCT_MIX: metric_str = "INFMIX"; break;
      case MDC_ECG_PATHOL: metric_str = "ABNOR"; break;
      case MDC_ECG_REPOLARIZ_DISTURB: metric_str = "MDC_ECG_REPOLARIZ_DISTURB"; break;
      case MDC_ECG_INFARCT_HYPER: metric_str = "INF/HYP"; break;
      case MDC_ECG_HYPER: metric_str = "HYP"; break;
      case MDC_ECG_INFARCT: metric_str = "INF"; break;
      case MDC_ECG_INFARCT_LAT: metric_str = "LMI"; break;
      case MDC_ECG_V_P_C_MULTIFOCAL_CNT: metric_str = "MDC_ECG_V_P_C_MULTIFOCAL_CNT"; break;
      case MDC_ECG_INOP: metric_str = "MDC_ECG_INOP"; break;
      case MDC_ECG_INOP_ANNOT: metric_str = "MDC_ECG_INOP_ANNOT"; break;
      case MDC_ECG_DUAL_PACER_POSN: metric_str = "MDC_ECG_DUAL_PACER_POSN"; break;
      case MDC_ECG_DUAL_PACER_POSN_ANNOT: metric_str = "MDC_ECG_DUAL_PACER_POSN_ANNOT"; break;
      case MDC_ECG_QUESTIONABLE: metric_str = "MDC_ECG_QUESTIONABLE"; break;
      case MDC_ECG_QUESTIONABLE_ANNOT: metric_str = "MDC_ECG_QUESTIONABLE_ANNOT"; break;
      case MDC_ECG_VENT_BEAT: metric_str = "MDC_ECG_VENT_BEAT"; break;
      case MDC_ECG_VENT_BEAT_ANNOT: metric_str = "MDC_ECG_VENT_BEAT_ANNOT"; break;
      case MDC_ECG_LEARN: metric_str = "MDC_ECG_LEARN"; break;
      case MDC_ECG_LEARN_ANNOT: metric_str = "MDC_ECG_LEARN_ANNOT"; break;
      case MDC_ECG_ATR_PACED_BEAT_PCT: metric_str = "MDC_ECG_ATR_PACED_BEAT_PCT"; break;
      case MDC_ECG_BIGEM_PCT: metric_str = "MDC_ECG_BIGEM_PCT"; break;
      case MDC_ECG_CARD_BEAT_RATE_IRREG_PCT: metric_str = "MDC_ECG_CARD_BEAT_RATE_IRREG_PCT"; break;
      case MDC_ECG_DUAL_PACED_BEAT_PCT: metric_str = "MDC_ECG_DUAL_PACED_BEAT_PCT"; break;
      case MDC_ECG_PACED_BEAT_PCT: metric_str = "MDC_ECG_PACED_BEAT_PCT"; break;
      case MDC_ECG_TRIGEM_PCT: metric_str = "MDC_ECG_TRIGEM_PCT"; break;
      case MDC_ECG_V_PACED_BEAT_PCT: metric_str = "MDC_ECG_V_PACED_BEAT_PCT"; break;
      case MDC_PULS: metric_str = "PULS"; break;
      case MDC_PULS_RATE: metric_str = "PR"; break;
      case MDC_BLD_PULS_RATE_INV: metric_str = "PRI"; break;
      case MDC_PULS_OXIM_PULS_RATE: metric_str = "PR"; break;
      case MDC_PLETH_PULS_RATE: metric_str = "PRpI"; break;
      case MDC_PULS_RATE_NON_INV: metric_str = "PRNI"; break;
      case MDC_RES_VASC_SYS_INDEX: metric_str = "SVRI"; break;
      case MDC_WK_LV_STROKE_INDEX: metric_str = "LVSWI"; break;
      case MDC_PVT_WK_RV_STROKE_INDEX: metric_str = "RVSWI"; break;
      case MDC_OUTPUT_CARD_INDEX: metric_str = "CI"; break;
      case MDC_PRESS_BLD: metric_str = "BP"; break;
      case MDC_PRESS_BLD_SYS: metric_str = "BPsyst"; break;
      case MDC_PRESS_BLD_DIA: metric_str = "BPdia"; break;
      case MDC_PRESS_BLD_MEAN: metric_str = "BPmean"; break;
      case MDC_PRESS_BLD_NONINV: metric_str = "NIBP"; break;
      case MDC_PRESS_BLD_NONINV_SYS: metric_str = "MDC_PRESS_BLD_NONINV_SYS"; break;
      case MDC_PRESS_BLD_NONINV_DIA: metric_str = "MDC_PRESS_BLD_NONINV_DIA"; break;
      case MDC_PRESS_BLD_NONINV_MEAN: metric_str = "MDC_PRESS_BLD_NONINV_MEAN"; break;
      case MDC_PRESS_BLD_NONINV_CTS: metric_str = "MDC_PRESS_BLD_NONINV_CTS"; break;
      case MDC_PRESS_BLD_NONINV_SYS_CTS: metric_str = "MDC_PRESS_BLD_NONINV_SYS_CTS"; break;
      case MDC_PRESS_BLD_NONINV_DIA_CTS: metric_str = "MDC_PRESS_BLD_NONINV_DIA_CTS"; break;
      case MDC_PRESS_BLD_NONINV_MEAN_CTS: metric_str = "MDC_PRESS_BLD_NONINV_MEAN_CTS"; break;
      case MDC_PRESS_BLD_AORT: metric_str = "AP"; break;
      case MDC_PRESS_BLD_AORT_SYS: metric_str = "BP"; break;
      case MDC_PRESS_BLD_AORT_DIA: metric_str = "BP"; break;
      case MDC_PRESS_BLD_AORT_MEAN: metric_str = "BP"; break;
      case MDC_PRESS_BLD_ART: metric_str = "ABP"; break;
      case MDC_PRESS_BLD_ART_SYS: metric_str = "ART"; break;
      case MDC_PRESS_BLD_ART_DIA: metric_str = "ARTdia"; break;
      case MDC_PRESS_BLD_ART_MEAN: metric_str = "ARTdia"; break;
      case MDC_PRESS_BLD_ART_ABP: metric_str = "ABP"; break;
      case MDC_PRESS_BLD_ART_ABP_SYS: metric_str = "ABP"; break;
      case MDC_PRESS_BLD_ART_ABP_DIA: metric_str = "ABP"; break;
      case MDC_PRESS_BLD_ART_ABP_MEAN: metric_str = "ABP"; break;
      case MDC_PRESS_BLD_ART_AUG: metric_str = "IABP"; break;
      case MDC_PRESS_BLD_ART_AUG_DIA: metric_str = "IABPdia"; break;
      case MDC_PRESS_BLD_ART_PULM: metric_str = "PAP"; break;
      case MDC_PRESS_BLD_ART_PULM_SYS: metric_str = "MDC_PRESS_BLD_ART_PULM_SYS"; break;
      case MDC_PRESS_BLD_ART_PULM_DIA: metric_str = "PAPdia"; break;
      case MDC_PRESS_BLD_ART_PULM_MEAN: metric_str = "PAPmean"; break;
      case MDC_PRESS_BLD_ART_PULM_WEDGE: metric_str = "PAWP"; break; // Note duplicate MDC_PRESS_BLD_ART_PULM_OCCL
      case MDC_PRESS_BLD_ART_UMB: metric_str = "UP"; break;
      case MDC_PRESS_BLD_ART_UMB_SYS: metric_str = "UAP"; break;
      case MDC_PRESS_BLD_ART_UMB_DIA: metric_str = "UAP"; break;
      case MDC_PRESS_BLD_ART_UMB_MEAN: metric_str = "UAP"; break;
      case MDC_PRESS_BLD_ATR: metric_str = "AtrP"; break;
      case MDC_PRESS_BLD_ATR_LEFT: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_LEFT_SYS: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_LEFT_DIA: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_LEFT_MEAN: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_RIGHT: metric_str = "RAP"; break;
      case MDC_PRESS_BLD_ATR_RIGHT_SYS: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_RIGHT_DIA: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_ATR_RIGHT_MEAN: metric_str = "LAP"; break;
      case MDC_PRESS_BLD_PULM_CAP: metric_str = "PCP"; break;
      case MDC_PRESS_BLD_PULM_CAP_SYS: metric_str = "PAPsyst"; break;
      case MDC_PRESS_BLD_PULM_CAP_DIA: metric_str = "PCP"; break;
      case MDC_PRESS_BLD_PULM_CAP_MEAN: metric_str = "PCP"; break;
      case MDC_PRESS_BLD_VEN: metric_str = "VP"; break;
      case MDC_PRESS_BLD_VEN_CENT: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_CENT_SYS: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_CENT_DIA: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_CENT_MEAN: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_UMB: metric_str = "UVP"; break;
      case MDC_PRESS_BLD_VEN_UMB_SYS: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_UMB_DIA: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VEN_UMB_MEAN: metric_str = "CVP"; break;
      case MDC_PRESS_BLD_VENT: metric_str = "MDC_PRESS_BLD_VENT"; break;
      case MDC_PRESS_BLD_VENT_DIA: metric_str = "MDC_PRESS_BLD_VENT_DIA"; break;
      case MDC_PRESS_BLD_VENT_DIA_END: metric_str = "MDC_PRESS_BLD_VENT_DIA_END"; break;
      case MDC_PRESS_BLD_VENT_LEFT: metric_str = "LVP"; break;
      case MDC_PRESS_BLD_VENT_LEFT_SYS: metric_str = "LVP"; break;
      case MDC_PRESS_BLD_VENT_LEFT_DIA: metric_str = "MDC_PRESS_BLD_VENT_LEFT_DIA"; break;
      case MDC_PRESS_BLD_VENT_LEFT_MEAN: metric_str = "MDC_PRESS_BLD_VENT_LEFT_MEAN"; break;
      case MDC_PRESS_BLD_VENT_RIGHT: metric_str = "RVP"; break;
      case MDC_PRESS_BLD_VENT_RIGHT_SYS: metric_str = "RVP"; break;
      case MDC_PRESS_BLD_VENT_RIGHT_DIA: metric_str = "MDC_PRESS_BLD_VENT_RIGHT_DIA"; break;
      case MDC_PRESS_BLD_VENT_RIGHT_MEAN: metric_str = "MDC_PRESS_BLD_VENT_RIGHT_MEAN"; break;
      case MDC_PRESS_BLD_VENT_AUG: metric_str = "MDC_PRESS_BLD_VENT_AUG"; break;
      case MDC_PRESS_BLD_CORON_ART: metric_str = "MDC_PRESS_BLD_CORON_ART"; break;
      case MDC_PRESS_BLD_CORON_ART_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_L: metric_str = "MDC_PRESS_BLD_CORON_ART_L"; break;
      case MDC_PRESS_BLD_CORON_ART_L_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_L_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_L_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_L_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_L_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_L_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND: metric_str = "MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND"; break;
      case MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_L_ANT_DESCEND_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_L_CIRC: metric_str = "MDC_PRESS_BLD_CORON_ART_L_CIRC"; break;
      case MDC_PRESS_BLD_CORON_ART_L_CIRC_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_L_CIRC_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_L_CIRC_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_L_CIRC_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_L_CIRC_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_L_CIRC_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_R: metric_str = "MDC_PRESS_BLD_CORON_ART_R"; break;
      case MDC_PRESS_BLD_CORON_ART_R_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_R_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_R_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_R_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_R_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_R_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND: metric_str = "MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND"; break;
      case MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_R_POST_DESCEND_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_CONUS: metric_str = "MDC_PRESS_BLD_CORON_ART_CONUS"; break;
      case MDC_PRESS_BLD_CORON_ART_CONUS_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_CONUS_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_CONUS_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_CONUS_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_CONUS_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_CONUS_MEAN"; break;
      case MDC_PRESS_BLD_CORON_ART_R_MARG: metric_str = "MDC_PRESS_BLD_CORON_ART_R_MARG"; break;
      case MDC_PRESS_BLD_CORON_ART_R_MARG_SYS: metric_str = "MDC_PRESS_BLD_CORON_ART_R_MARG_SYS"; break;
      case MDC_PRESS_BLD_CORON_ART_R_MARG_DIA: metric_str = "MDC_PRESS_BLD_CORON_ART_R_MARG_DIA"; break;
      case MDC_PRESS_BLD_CORON_ART_R_MARG_MEAN: metric_str = "MDC_PRESS_BLD_CORON_ART_R_MARG_MEAN"; break;
      case MDC_PRESS_BLD_VENT_LEFT_BEGIN_DIA: metric_str = "MDC_PRESS_BLD_VENT_LEFT_BEGIN_DIA"; break;
      case MDC_PRESS_BLD_VENT_LEFT_SYS_MEAN: metric_str = "MDC_PRESS_BLD_VENT_LEFT_SYS_MEAN"; break;
      case MDC_PRESS_BLD_VENT_LEFT_DIA_MEAN: metric_str = "MDC_PRESS_BLD_VENT_LEFT_DIA_MEAN"; break;
      case MDC_SAT_O2_CONSUMP: metric_str = "VO2"; break;
      case MDC_OUTPUT_CARD: metric_str = "CO"; break;
      case MDC_OUTPUT_CARD_ART_BRANCH: metric_str = "MDC_OUTPUT_CARD_ART_BRANCH"; break;
      case MDC_OUTPUT_CARD_VEN_BRANCH: metric_str = "MDC_OUTPUT_CARD_VEN_BRANCH"; break;
      case MDC_PLETH_VOL_BLD: metric_str = "MDC_PLETH_VOL_BLD"; break;
      case MDC_PRESS_CUFF: metric_str = "BP"; break;
      case MDC_PRESS_CUFF_SYS: metric_str = "BP"; break;
      case MDC_PRESS_CUFF_DIA: metric_str = "BP"; break;
      case MDC_PRESS_CUFF_MEAN: metric_str = "BP"; break;
      case MDC_RES_VASC: metric_str = "TVR"; break;
      case MDC_RES_VASC_PULM: metric_str = "PVR"; break;
      case MDC_RES_VASC_SYS: metric_str = "SVR"; break;
      case MDC_SAT_O2: metric_str = "SatO2"; break;
      case MDC_SAT_O2_QUAL: metric_str = "dSvO2LI"; break;
      case MDC_SAT_O2_ART: metric_str = "SaO2"; break;
      case MDC_SAT_O2_CEREB: metric_str = "MDC_SAT_O2_CEREB"; break;
      case MDC_SAT_O2_VEN: metric_str = "SvO2"; break;
      case MDC_SAT_DIFF_O2_ART_ALV: metric_str = "S(A-s)O2"; break;
      case MDC_SAT_DIFF_O2_ART: metric_str = "S(A-V)O2 "; break;
      case MDC_TEMP: metric_str = "TEMPnos"; break;
      case MDC_TEMP_FOLEY: metric_str = "TEMPfole"; break;
      case MDC_TEMP_ART: metric_str = "TEMPart"; break;
      case MDC_TEMP_AWAY: metric_str = "TEMPairw"; break;
      case MDC_TEMP_BODY: metric_str = "TEMPbody"; break;
      case MDC_TEMP_CORE: metric_str = "TCore"; break;
      case MDC_TEMP_ESOPH: metric_str = "TEMPesop"; break;
      case MDC_TEMP_INJ: metric_str = "TI"; break;
      case MDC_TEMP_NASOPH: metric_str = "TEMPnaso"; break;
      case MDC_TEMP_SKIN: metric_str = "TEMPskin"; break;
      case MDC_TEMP_TYMP: metric_str = "TEMPtymp"; break;
      case MDC_TEMP_VEN: metric_str = "TEMPven"; break;
      case MDC_VOL_BLD_STROKE: metric_str = "SV"; break;
      case MDC_VOL_BLD_VENT_LEFT_STROKE: metric_str = "LVSV"; break;
      case MDC_WK_CARD: metric_str = "CW"; break;
      case MDC_WK_CARD_LEFT: metric_str = "LCW"; break;
      case MDC_WK_CARD_RIGHT: metric_str = "RCW"; break;
      case MDC_WK_LV_STROKE: metric_str = "LVSW"; break;
      case MDC_WK_RV: metric_str = "RVW"; break;
      case MDC_WK_RV_STROKE: metric_str = "RVSW"; break;
      case MDC_WK_LV: metric_str = "VSW"; break;
      case MDC_SAT_O2_ART_PULM: metric_str = "SaO2"; break;
      case MDC_PULS_OXIM_PERF_REL: metric_str = "MDC_PULS_OXIM_PERF_REL"; break;
      case MDC_PULS_OXIM_PLETH: metric_str = "MDC_PULS_OXIM_PLETH"; break; // Note duplicate MDC_PLETH
      case MDC_PULS_OXIM_SAT_O2: metric_str = "SpO2"; break;
      case MDC_PULS_OXIM_SAT_O2_CTS: metric_str = "SpO2"; break;
      case MDC_PULS_OXIM_SAT_O2_NONCTS: metric_str = "SpO2"; break;
      case MDC_PULS_OXIM_SAT_O2_DIFF: metric_str = "dSpO2"; break;
      case MDC_PULS_OXIM_SAT_O2_ART_LEFT: metric_str = "SpO2L"; break;
      case MDC_PULS_OXIM_SAT_O2_ART_RIGHT: metric_str = "SpO2R"; break;
      case MDC_NBP_SAT_O2_ART: metric_str = "SpO2nbp"; break;
      case MDC_DESAT: metric_str = "MDC_DESAT"; break;
      case MDC_BLD_PERF_INDEX: metric_str = "CI"; break;
      case MDC_OUTPUT_CARD_CTS: metric_str = "C.O."; break;
      case MDC_OUTPUT_CARD_NONCTS: metric_str = "C.O."; break;
      case MDC_PRESS_BLD_VENT_LEFT_END_DIA: metric_str = "LVP"; break;
      case MDC_INDEX_PRESS_VENT_L_DERIV_POS: metric_str = "LV_Max-Positive_dP/dt"; break;
      case MDC_INDEX_PRESS_VENT_L_DERIV_POS_MAX_DIV_P: metric_str = "LV_peak_VCE"; break;
      case MDC_INDEX_PRESS_VENT_L_DERIV_NEG_MAX: metric_str = "LV_Max-Negative_dP/dt"; break;
      case MDC_INDEX_PRESS_VENT_L_RELAX: metric_str = "LV_Relaxation_Constant"; break; // TODO ended here
      case MDC_TIME_PD_VENT_L_AORT_VALV: metric_str = "SEP"; break;
      case MDC_TIME_PD_VENT_L_AORT_VALV_DIA_FILL: metric_str = "DFP"; break;
      case MDC_VOL_VENT_L_END_DIA: metric_str = "MDC_VOL_VENT_L_END_DIA"; break;
      case MDC_VOL_VENT_L_END_SYS: metric_str = "MDC_VOL_VENT_L_END_SYS"; break;
      case MDC_GRAD_PRESS_BLD_MITRAL: metric_str = "MVPGr"; break;
      case MDC_GRAD_PRESS_BLD_MITRAL_MEAN: metric_str = "MVPGr-Mean"; break;
      case MDC_GRAD_PRESS_BLD_MITRAL_POS_MAX: metric_str = "MVPGr-Max"; break;
      case MDC_GRAD_PRESS_BLD_TRICUSP: metric_str = "TVPGr"; break;
      case MDC_GRAD_PRESS_BLD_TRICUSP_MEAN: metric_str = "TVPGr-Mean"; break;
      case MDC_GRAD_PRESS_BLD_TRICUSP_POS_MAX: metric_str = "TVPGr-Max"; break;
      case MDC_GRAD_PRESS_BLD_PULM: metric_str = "PVPGr"; break;
      case MDC_GRAD_PRESS_BLD_PULM_MEAN: metric_str = "PVPGr-Mean"; break;
      case MDC_GRAD_PRESS_BLD_PULM_POS_MAX: metric_str = "PVPGr-Max"; break;
      case MDC_GRAD_PRESS_BLD_AORT: metric_str = "AVPGr"; break;
      case MDC_GRAD_PRESS_BLD_AORT_MEAN: metric_str = "AVPGr-Mean"; break;
      case MDC_GRAD_PRESS_BLD_AORT_POS_MAX: metric_str = "AVPGr-Max"; break;
      case MDC_TRANSMISSION: metric_str = "MDC_TRANSMISSION"; break;
      case MDC_TRANSMISSION_RED: metric_str = "MDC_TRANSMISSION_RED"; break;
      case MDC_TRANSMISSION_INFRARED: metric_str = "MDC_TRANSMISSION_INFRARED"; break;
      case MDC_RESP: metric_str = "MDC_RESP"; break;
      case MDC_RESP_BREATH: metric_str = "MDC_RESP_BREATH"; break;
      case MDC_RESP_RATE: metric_str = "RR"; break;
      case MDC_AWAY_RESP_RATE: metric_str = "RR"; break;
      case MDC_TTHOR_RESP_RATE: metric_str = "RR"; break;
      case MDC_VENT_RESP_RATE: metric_str = "MDC_VENT_RESP_RATE"; break;
      case MDC_CO2_RESP_RATE: metric_str = "RR"; break;
      case MDC_PRESS_RESP_RATE: metric_str = "RR"; break;
      case MDC_VENT_CO2_RESP_RATE: metric_str = "MDC_VENT_CO2_RESP_RATE"; break;
      case MDC_VENT_PRESS_RESP_RATE: metric_str = "MDC_VENT_PRESS_RESP_RATE"; break;
      case MDC_VENT_FLOW_RESP_RATE: metric_str = "MDC_VENT_FLOW_RESP_RATE"; break;
      case MDC_VENT_SIGH_RATE: metric_str = "MDC_VENT_SIGH_RATE"; break;
      case MDC_VENT_SIGH_MULT_RATE: metric_str = "MDC_VENT_SIGH_MULT_RATE"; break;
      case MDC_CAPAC_VITAL: metric_str = "VC"; break;
      case MDC_COMPL_LUNG: metric_str = "C TH+L"; break;
      case MDC_COMPL_LUNG_DYN: metric_str = "C TH"; break;
      case MDC_COMPL_LUNG_STATIC: metric_str = "C L"; break;
      case MDC_CONC_AWAY_CO2: metric_str = "%CO2 "; break;
      case MDC_CONC_AWAY_CO2_ET: metric_str = "%CO2 ET "; break;
      case MDC_CONC_AWAY_CO2_EXP: metric_str = "%CO2 exp"; break;
      case MDC_CONC_AWAY_CO2_EXP_MIN: metric_str = "IMCO2"; break;
      case MDC_CONC_AWAY_CO2_INSP: metric_str = "%CO2 ins"; break;
      case MDC_CONC_AWAY_CO2_INSP_MIN: metric_str = "IMCO2"; break;
      case MDC_VENT_CONC_AWAY_O2: metric_str = "FIO2"; break;
      case MDC_AWAY_CO2: metric_str = "PCO2"; break;
      case MDC_AWAY_CO2_ET: metric_str = "PET CO2"; break;
      case MDC_AWAY_CO2_EXP: metric_str = "PECO2"; break;
      case MDC_AWAY_CO2_INSP: metric_str = "PICO2"; break;
      case MDC_AWAY_CO2_INSP_MIN: metric_str = "PIMCO2"; break;
      case MDC_AWAY_O2: metric_str = "PO2"; break;
      case MDC_AWAY_O2_DELTA: metric_str = "PI-EO2"; break;
      case MDC_AWAY_O2_EXP: metric_str = "PEO2"; break;
      case MDC_AWAY_O2_INSP: metric_str = "MDC_AWAY_O2_INSP"; break;
      case MDC_CO2_TCUT: metric_str = "CPCO2"; break;
      case MDC_O2_TCUT: metric_str = "CPO2"; break;
      case MDC_FLOW_AWAY: metric_str = "MDC_FLOW_AWAY"; break; // TODO how to type V with (dot) over it?
      case MDC_FLOW_AWAY_EXP: metric_str = "E"; break; // TODO how to type V with (dot) over it?
      case MDC_FLOW_AWAY_EXP_MAX: metric_str = "E max"; break; // TODO how to type V with (dot) over it?
      case MDC_FLOW_AWAY_INSP: metric_str = "I"; break; // TODO how to type V with (dot) over it?
      case MDC_FLOW_AWAY_INSP_MAX: metric_str = "I max"; break; // TODO how to type V with (dot) over it?
      case MDC_FLOW_CO2_PROD_RESP: metric_str = "CO2"; break; // TODO how to type V with (dot) over it?
      case MDC_IMPED_TTHOR: metric_str = "Z0"; break;
      case MDC_PRESS_RESP_PLAT: metric_str = "MDC_PRESS_RESP_PLAT"; break;
      case MDC_PRESS_RESP_PAUSE: metric_str = "MDC_PRESS_RESP_PAUSE"; break;
      case MDC_PRESS_AWAY: metric_str = "PAW"; break;
      case MDC_PRESS_AWAY_MAX: metric_str = "PAWmax"; break;
      case MDC_PRESS_AWAY_MIN: metric_str = "PAWmax"; break;
      case MDC_PRESS_AWAY_CTS_POS: metric_str = "CPAP"; break;
      case MDC_PRESS_AWAY_NEG_MAX: metric_str = "PAWmin"; break;
      case MDC_PRESS_AWAY_END_EXP_POS: metric_str = "PEEP"; break;
      case MDC_PRESS_AWAY_END_EXP_POS_INTRINSIC: metric_str = "PEEP"; break;
      case MDC_PRESS_AWAY_EXP: metric_str = "PE"; break;
      case MDC_PRESS_AWAY_EXP_MAX: metric_str = "PE max"; break;
      case MDC_PRESS_AWAY_EXP_MIN: metric_str = "PE min"; break;
      case MDC_PRESS_AWAY_INSP: metric_str = "PI"; break;
      case MDC_PRESS_AWAY_INSP_MAX: metric_str = "PIP"; break; // Note duplicate MDC_PRESS_AWAY_INSP_PEAK
      case MDC_PRESS_AWAY_INSP_MIN: metric_str = "PI min"; break;
      case MDC_PRESS_AWAY_INSP_MEAN: metric_str = "PI mean"; break;
      case MDC_PRESS_ESOPH: metric_str = "POES"; break;
      case MDC_PRESS_INTERPL: metric_str = "PPL"; break;
      case MDC_QUO_RESP: metric_str = "RQ"; break;
      case MDC_RATIO_IE: metric_str = "TI/TE"; break;
      case MDC_RATIO_AWAY_DEADSP_TIDAL: metric_str = "VD/VT"; break;
      case MDC_RES_AWAY: metric_str = "RAW"; break;
      case MDC_RES_AWAY_EXP: metric_str = "REAW"; break;
      case MDC_RES_AWAY_INSP: metric_str = "RIAW"; break;
      case MDC_TIME_PD_APNEA_OBSTRUC: metric_str = "OA"; break;
      case MDC_TIME_PD_APNEA: metric_str = "A"; break;
      case MDC_TIME_PD_APNEA_CENT: metric_str = "CA"; break;
      case MDC_TIME_PD_APNEA_MIX: metric_str = "MA"; break;
      case MDC_VOL_AWAY_TIDAL: metric_str = "VT"; break;
      case MDC_VOL_AWAY_DEADSP: metric_str = "VD"; break;
      case MDC_VOL_GAS_INSP_SINCE_START: metric_str = "V"; break;
      case MDC_VOL_MINUTE_AWAY: metric_str = "MDC_VOL_MINUTE_AWAY"; break; // TODO how to type V with (dot) over it?
      case MDC_VOL_MINUTE_AWAY_EXP: metric_str = "E"; break; // TODO how to type V with (dot) over it?
      case MDC_VOL_MINUTE_AWAY_INSP: metric_str = "I"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_CONC_AWAY_CO2: metric_str = "MDC_VENT_CONC_AWAY_CO2"; break;
      case MDC_VENT_CONC_AWAY_CO2_ET: metric_str = "MDC_VENT_CONC_AWAY_CO2_ET"; break;
      case MDC_VENT_CONC_AWAY_CO2_EXP: metric_str = "MDC_VENT_CONC_AWAY_CO2_EXP"; break;
      case MDC_VENT_CONC_AWAY_CO2_INSP: metric_str = "MDC_VENT_CONC_AWAY_CO2_INSP"; break;
      case MDC_CONC_AWAY_O2: metric_str = "%O2"; break;
      case MDC_VENT_CONC_AWAY_O2_DELTA: metric_str = "FI-EO2"; break;
      case MDC_VENT_CONC_AWAY_O2_EXP: metric_str = "FEO2"; break;
      case MDC_VENT_CONC_AWAY_O2_INSP: metric_str = "FIO2"; break;
      case MDC_VENT_AWAY_CO2: metric_str = "PCO2"; break;
      case MDC_VENT_AWAY_CO2_ET: metric_str = "PET CO2"; break;
      case MDC_VENT_AWAY_CO2_EXP: metric_str = "PECO2"; break;
      case MDC_VENT_AWAY_CO2_INSP: metric_str = "PICO2"; break;
      case MDC_VENT_FLOW: metric_str = "MDC_VENT_FLOW"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_FLOW_EXP: metric_str = "E"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_FLOW_EXP_MAX: metric_str = "E max"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_FLOW_INSP: metric_str = "I"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_FLOW_INSP_MAX: metric_str = "I max"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_FLOW_RATIO_PERF_ALV_INDEX: metric_str = "MDC_VENT_FLOW_RATIO_PERF_ALV_INDEX"; break; // TODO how to type V and Q with (dot) over it?
      case MDC_VENT_PRESS: metric_str = "MDC_VENT_PRESS"; break;
      case MDC_VENT_PRESS_MAX: metric_str = "PAW max"; break;
      case MDC_VENT_PRESS_MIN: metric_str = "PAW min"; break;
      case MDC_VENT_PRESS_PLAT: metric_str = "MDC_VENT_PRESS_PLAT"; break;
      case MDC_VENT_PRESS_OCCL: metric_str = "MDC_VENT_PRESS_OCCL"; break;
      case MDC_VENT_PRESS_AWAY: metric_str = "PAW"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS: metric_str = "PEEP"; break;
      case MDC_VENT_VOL_TIDAL: metric_str = "VT"; break;
      case MDC_VENT_VOL_AWAY_DEADSP: metric_str = "VD"; break;
      case MDC_VENT_VOL_AWAY_DEADSP_REL: metric_str = "VD/VT"; break;
      case MDC_VENT_VOL_LUNG_TRAPD: metric_str = "CV"; break;
      case MDC_VENT_VOL_MINUTE: metric_str = "VI"; break;
      case MDC_VENT_VOL_MINUTE_EXP: metric_str = "VE"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_VOL_MINUTE_INSP: metric_str = "VI"; break;
      case MDC_VENT_VOL_MINUTE_AWAY: metric_str = "MMV"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_VOL_MINUTE_AWAY_MAND: metric_str = "MMV"; break;
      case MDC_VENT_VOL_MINUTE_AWAY_INSP: metric_str = "I"; break; // TODO how to type V with (dot) over it?
      case MDC_COEF_GAS_TRAN: metric_str = "D"; break;
      case MDC_CONC_AWAY_DESFL: metric_str = "%Desflurane"; break;
      case MDC_CONC_AWAY_ENFL: metric_str = "%Enflurane"; break;
      case MDC_CONC_AWAY_HALOTH: metric_str = "%Halothane"; break;
      case MDC_CONC_AWAY_SEVOFL: metric_str = "%Sevoflurane"; break;
      case MDC_CONC_AWAY_ISOFL: metric_str = "%Isoflurane"; break;
      case MDC_CONC_AWAY_NO2: metric_str = "%NitrogenDioxide"; break;
      case MDC_CONC_AWAY_N2O: metric_str = "%NitrousOxide"; break;
      case MDC_VENT_CONC_DESFL: metric_str = "MDC_VENT_CONC_DESFL"; break;
      case MDC_VENT_CONC_ENFL: metric_str = "MDC_VENT_CONC_ENFL"; break;
      case MDC_VENT_CONC_HALOTH: metric_str = "MDC_VENT_CONC_HALOTH"; break;
      case MDC_VENT_CONC_SEVOFL: metric_str = "MDC_VENT_CONC_SEVOFL"; break;
      case MDC_VENT_CONC_ISOFL: metric_str = "MDC_VENT_CONC_ISOFL"; break;
      case MDC_VENT_CONC_NO2: metric_str = "MDC_VENT_CONC_NO2"; break;
      case MDC_VENT_CONC_N2O: metric_str = "MDC_VENT_CONC_N2O"; break;
      case MDC_VENT_CONC_SUBST_DELTA: metric_str = "MDC_VENT_CONC_SUBST_DELTA"; break;
      case MDC_CONC_AWAY_DESFL_ET: metric_str = "MDC_CONC_AWAY_DESFL_ET"; break;
      case MDC_CONC_AWAY_ENFL_ET: metric_str = "MDC_CONC_AWAY_ENFL_ET"; break;
      case MDC_CONC_AWAY_HALOTH_ET: metric_str = "MDC_CONC_AWAY_HALOTH_ET"; break;
      case MDC_CONC_AWAY_SEVOFL_ET: metric_str = "MDC_CONC_AWAY_SEVOFL_ET"; break;
      case MDC_CONC_AWAY_ISOFL_ET: metric_str = "MDC_CONC_AWAY_ISOFL_ET"; break;
      case MDC_CONC_AWAY_NO2_ET: metric_str = "MDC_CONC_AWAY_NO2_ET"; break;
      case MDC_CONC_AWAY_N2O_ET: metric_str = "MDC_CONC_AWAY_N2O_ET"; break;
      case MDC_CONC_AWAY_DESFL_EXP: metric_str = "MDC_CONC_AWAY_DESFL_EXP"; break;
      case MDC_CONC_AWAY_ENFL_EXP: metric_str = "MDC_CONC_AWAY_ENFL_EXP"; break;
      case MDC_CONC_AWAY_HALOTH_EXP: metric_str = "MDC_CONC_AWAY_HALOTH_EXP"; break;
      case MDC_CONC_AWAY_SEVOFL_EXP: metric_str = "MDC_CONC_AWAY_SEVOFL_EXP"; break;
      case MDC_CONC_AWAY_ISOFL_EXP: metric_str = "MDC_CONC_AWAY_ISOFL_EXP"; break;
      case MDC_CONC_AWAY_NO2_EXP: metric_str = "MDC_CONC_AWAY_NO2_EXP"; break;
      case MDC_CONC_AWAY_N2O_EXP: metric_str = "MDC_CONC_AWAY_N2O_EXP"; break;
      case MDC_VENT_CONC_DESFL_EXP: metric_str = "MDC_VENT_CONC_DESFL_EXP"; break;
      case MDC_VENT_CONC_ENFL_EXP: metric_str = "MDC_VENT_CONC_ENFL_EXP"; break;
      case MDC_VENT_CONC_HALOTH_EXP: metric_str = "MDC_VENT_CONC_HALOTH_EXP"; break;
      case MDC_VENT_CONC_SEVOFL_EXP: metric_str = "MDC_VENT_CONC_SEVOFL_EXP"; break;
      case MDC_VENT_CONC_ISOFL_EXP: metric_str = "MDC_VENT_CONC_ISOFL_EXP"; break;
      case MDC_VENT_CONC_NO2_EXP: metric_str = "MDC_VENT_CONC_NO2_EXP"; break;
      case MDC_VENT_CONC_N2O_EXP: metric_str = "MDC_VENT_CONC_N2O_EXP"; break;
      case MDC_CONC_AWAY_DESFL_INSP: metric_str = "MDC_CONC_AWAY_DESFL_INSP"; break;
      case MDC_CONC_AWAY_ENFL_INSP: metric_str = "MDC_CONC_AWAY_ENFL_INSP"; break;
      case MDC_CONC_AWAY_HALOTH_INSP: metric_str = "MDC_CONC_AWAY_HALOTH_INSP"; break;
      case MDC_CONC_AWAY_SEVOFL_INSP: metric_str = "MDC_CONC_AWAY_SEVOFL_INSP"; break;
      case MDC_CONC_AWAY_ISOFL_INSP: metric_str = "MDC_CONC_AWAY_ISOFL_INSP"; break;
      case MDC_CONC_AWAY_NO2_INSP: metric_str = "MDC_CONC_AWAY_NO2_INSP"; break;
      case MDC_CONC_AWAY_N2O_INSP: metric_str = "MDC_CONC_AWAY_N2O_INSP"; break;
      case MDC_CONC_AWAY_O2_INSP: metric_str = "MDC_CONC_AWAY_O2_INSP"; break;
      case MDC_VENT_CONC_DESFL_INSP: metric_str = "MDC_VENT_CONC_DESFL_INSP"; break;
      case MDC_VENT_CONC_ENFL_INSP: metric_str = "MDC_VENT_CONC_ENFL_INSP"; break;
      case MDC_VENT_CONC_HALOTH_INSP: metric_str = "MDC_VENT_CONC_HALOTH_INSP"; break;
      case MDC_VENT_CONC_SEVOFL_INSP: metric_str = "MDC_VENT_CONC_SEVOFL_INSP"; break;
      case MDC_VENT_CONC_ISOFL_INSP: metric_str = "MDC_VENT_CONC_ISOFL_INSP"; break;
      case MDC_VENT_CONC_NO2_INSP: metric_str = "MDC_VENT_CONC_NO2_INSP"; break;
      case MDC_VENT_CONC_N2O_INSP: metric_str = "MDC_VENT_CONC_N2O_INSP"; break;
      case MDC_AWAY_DESFL: metric_str = "MDC_AWAY_DESFL"; break;
      case MDC_AWAY_ENFL: metric_str = "MDC_AWAY_ENFL"; break;
      case MDC_AWAY_HALOTH: metric_str = "MDC_AWAY_HALOTH"; break;
      case MDC_AWAY_SEVOFL: metric_str = "MDC_AWAY_SEVOFL"; break;
      case MDC_AWAY_ISOFL: metric_str = "MDC_AWAY_ISOFL"; break;
      case MDC_AWAY_NO2: metric_str = "MDC_AWAY_NO2"; break;
      case MDC_AWAY_N2O: metric_str = "MDC_AWAY_N2O"; break;
      case MDC_VENT_AWAY_DESFL: metric_str = "MDC_VENT_AWAY_DESFL"; break;
      case MDC_VENT_ENFL: metric_str = "MDC_VENT_ENFL"; break;
      case MDC_VENT_HALOTH: metric_str = "MDC_VENT_HALOTH"; break;
      case MDC_VENT_SEVOFL: metric_str = "MDC_VENT_SEVOFL"; break;
      case MDC_VENT_ISOFL: metric_str = "MDC_VENT_ISOFL"; break;
      case MDC_VENT_NO2: metric_str = "MDC_VENT_NO2"; break;
      case MDC_VENT_N2O: metric_str = "MDC_VENT_N2O"; break;
      case MDC_VENT_AWAY_O2: metric_str = "PO2"; break;
      case MDC_AWAY_DESFL_EXP: metric_str = "MDC_AWAY_DESFL_EXP"; break;
      case MDC_AWAY_ENFL_EXP: metric_str = "MDC_AWAY_ENFL_EXP"; break;
      case MDC_AWAY_HALOTH_EXP: metric_str = "MDC_AWAY_HALOTH_EXP"; break;
      case MDC_AWAY_SEVOFL_EXP: metric_str = "MDC_AWAY_SEVOFL_EXP"; break;
      case MDC_AWAY_ISOFL_EXP: metric_str = "MDC_AWAY_ISOFL_EXP"; break;
      case MDC_AWAY_NO2_EXP: metric_str = "MDC_AWAY_NO2_EXP"; break;
      case MDC_AWAY_N2O_EXP: metric_str = "MDC_AWAY_N2O_EXP"; break;
      case MDC_VENT_DESFL_EXP: metric_str = "MDC_VENT_DESFL_EXP"; break;
      case MDC_VENT_ENFL_EXP: metric_str = "MDC_VENT_ENFL_EXP"; break;
      case MDC_VENT_HALOTH_EXP: metric_str = "MDC_VENT_HALOTH_EXP"; break;
      case MDC_VENT_SEVOFL_EXP: metric_str = "MDC_VENT_SEVOFL_EXP"; break;
      case MDC_VENT_ISOFL_EXP: metric_str = "MDC_VENT_ISOFL_EXP"; break;
      case MDC_VENT_NO2_EXP: metric_str = "MDC_VENT_NO2_EXP"; break;
      case MDC_VENT_N2O_EXP: metric_str = "MDC_VENT_N2O_EXP"; break;
      case MDC_VENT_AWAY_O2_EXP: metric_str = "MDC_VENT_AWAY_O2_EXP"; break;
      case MDC_AWAY_DESFL_INSP: metric_str = "MDC_AWAY_DESFL_INSP"; break;
      case MDC_AWAY_ENFL_INSP: metric_str = "MDC_AWAY_ENFL_INSP"; break;
      case MDC_AWAY_HALOTH_INSP: metric_str = "MDC_AWAY_HALOTH_INSP"; break;
      case MDC_AWAY_SEVOFL_INSP: metric_str = "MDC_AWAY_SEVOFL_INSP"; break;
      case MDC_AWAY_ISOFL_INSP: metric_str = "MDC_AWAY_ISOFL_INSP"; break;
      case MDC_AWAY_NO2_INSP: metric_str = "MDC_AWAY_NO2_INSP"; break;
      case MDC_AWAY_N2O_INSP: metric_str = "MDC_AWAY_N2O_INSP"; break;
      case MDC_VENT_DESFL_INSP: metric_str = "MDC_VENT_DESFL_INSP"; break;
      case MDC_VENT_ENFL_INSP: metric_str = "MDC_VENT_ENFL_INSP"; break;
      case MDC_VENT_HALOTH_INSP: metric_str = "MDC_VENT_HALOTH_INSP"; break;
      case MDC_VENT_SEVOFL_INSP: metric_str = "MDC_VENT_SEVOFL_INSP"; break;
      case MDC_VENT_ISOFL_INSP: metric_str = "MDC_VENT_ISOFL_INSP"; break;
      case MDC_VENT_NO2_INSP: metric_str = "MDC_VENT_NO2_INSP"; break;
      case MDC_VENT_N2O_INSP: metric_str = "MDC_VENT_N2O_INSP"; break;
      case MDC_VENT_AWAY_O2_INSP: metric_str = "PIO2"; break;
      case MDC_VENT_TIME_PD_PPV: metric_str = "MDC_VENT_TIME_PD_PPV"; break;
      case MDC_FLOW_O2_CONSUMP: metric_str = "O2"; break; // TODO how to type V with (dot) over it?
      case MDC_VENT_PRESS_RESP_PLAT: metric_str = "MDC_VENT_PRESS_RESP_PLAT"; break;
      case MDC_VENT_PRESS_TRIG_SENS: metric_str = "MDC_VENT_PRESS_TRIG_SENS"; break;
      case MDC_VENT_VOL_LEAK: metric_str = "MDC_VENT_VOL_LEAK"; break;
      case MDC_VENT_VOL_LUNG_ALV: metric_str = "AV"; break;
      case MDC_AWAY_O2_ET: metric_str = "%O2 ET"; break; // TODO Different name in table
      case MDC_AWAY_N2: metric_str = "%N2"; break; // TODO Different name in table
      case MDC_AWAY_N2_ET: metric_str = "%N2 ET"; break; // TODO Different name in table
      case MDC_AWAY_N2_INSP: metric_str = "MDC_AWAY_N2_INSP"; break;
      case MDC_AWAY_AGENT: metric_str = "%Agent"; break; // TODO Different name in table
      case MDC_AWAY_AGENT_ET: metric_str = "MDC_AWAY_AGENT_ET"; break;
      case MDC_AWAY_AGENT_INSP: metric_str = "MDC_AWAY_AGENT_INSP"; break;
      case MDC_PRESS_CEREB_PERF: metric_str = "CPP"; break;
      case MDC_PRESS_INTRA_CRAN: metric_str = "ICP"; break;
      case MDC_PRESS_INTRA_CRAN_SYS: metric_str = "ICPS"; break;
      case MDC_PRESS_INTRA_CRAN_DIA: metric_str = "ICPD"; break;
      case MDC_PRESS_INTRA_CRAN_MEAN: metric_str = "ICPM"; break;
      case MDC_PRESS_INTRA_CRAN_EPIDURAL: metric_str = "ICPE"; break;
      case MDC_PRESS_INTRA_CRAN_EPIDURAL_SYS: metric_str = "ICPES"; break;
      case MDC_PRESS_INTRA_CRAN_EPIDURAL_DIA: metric_str = "ICPED"; break;
      case MDC_PRESS_INTRA_CRAN_EPIDURAL_MEAN: metric_str = "ICPEM"; break;
      case MDC_PRESS_INTRA_CRAN_SUBDURAL: metric_str = "ICPS"; break;
      case MDC_PRESS_INTRA_CRAN_SUBDURAL_SYS: metric_str = "ICPSS"; break;
      case MDC_PRESS_INTRA_CRAN_SUBDURAL_DIA: metric_str = "ICPSD"; break;
      case MDC_PRESS_INTRA_CRAN_SUBDURAL_MEAN: metric_str = "ICPSM"; break;
      case MDC_PRESS_INTRA_CRAN_TISS: metric_str = "ICPT"; break;
      case MDC_PRESS_INTRA_CRAN_TISS_SYS: metric_str = "ICPTS"; break;
      case MDC_PRESS_INTRA_CRAN_TISS_DIA: metric_str = "ICPTD"; break;
      case MDC_PRESS_INTRA_CRAN_TISS_MEAN: metric_str = "ICPTM"; break;
      case MDC_PRESS_INTRA_CRAN_VENT: metric_str = "ICPV"; break;
      case MDC_PRESS_INTRA_CRAN_VENT_SYS: metric_str = "ICPVS"; break;
      case MDC_PRESS_INTRA_CRAN_VENT_DIA: metric_str = "ICPVD"; break;
      case MDC_PRESS_INTRA_CRAN_VENT_MEAN: metric_str = "ICPVM"; break;
      case MDC_SCORE_GLAS_COMA: metric_str = "GCS"; break;
      case MDC_SCORE_SUBSC_SUM_GLAS_COMA: metric_str = "GCSS"; break;
      case MDC_SCORE_EYE_SUBSC_GLAS_COMA: metric_str = "GCSE"; break;
      case MDC_SCORE_MOTOR_SUBSC_GLAS_COMA: metric_str = "GCSM"; break;
      case MDC_SCORE_SUBSC_VERBAL_GLAS_COMA: metric_str = "GCSV"; break;
      case MDC_EEG_SCORE_SLEEPSTG: metric_str = "MDC_EEG_SCORE_SLEEPSTG"; break;
      case MDC_CIRCUM_HEAD: metric_str = "MDC_CIRCUM_HEAD"; break;
      case MDC_COMPL_INTRA_CRAN: metric_str = "MDC_COMPL_INTRA_CRAN"; break;
      case MDC_DIAM_PUPIL: metric_str = "MDC_DIAM_PUPIL"; break;
      case MDC_DIAM_PUPIL_LEFT: metric_str = "MDC_DIAM_PUPIL_LEFT"; break;
      case MDC_DIAM_PUPIL_RIGHT: metric_str = "MDC_DIAM_PUPIL_RIGHT"; break;
      case MDC_TIME_PD_BERA_INTERPK_WV_1_TO_3: metric_str = "MDC_TIME_PD_BERA_INTERPK_WV_1_TO_3"; break;
      case MDC_TIME_PD_BERA_INTERPK_WV_1_TO_5: metric_str = "MDC_TIME_PD_BERA_INTERPK_WV_1_TO_5"; break;
      case MDC_TIME_PD_BERA_INTERPK_WV_3_TO_5: metric_str = "MDC_TIME_PD_BERA_INTERPK_WV_3_TO_5"; break;
      case MDC_TIME_PD_PUPIL_REACT: metric_str = "MDC_TIME_PD_PUPIL_REACT"; break;
      case MDC_TIME_PD_PUPIL_REACT_LEFT: metric_str = "MDC_TIME_PD_PUPIL_REACT_LEFT"; break;
      case MDC_TIME_PD_PUPIL_REACT_RIGHT: metric_str = "MDC_TIME_PD_PUPIL_REACT_RIGHT"; break;
      case MDC_EEG_ELEC_POTL_CRTX: metric_str = "EEG"; break;
      case MDC_EOG_ELEC_POTL_EYE: metric_str = "EOG"; break;
      case MDC_ENG_ELEC_POTL_EYE_NYSTAG: metric_str = "MDC_ENG_ELEC_POTL_EYE_NYSTAG"; break;
      case MDC_ERG_ELEC_POTL_RETINA: metric_str = "ERG"; break;
      case MDC_EMG_ELEC_POTL_MUSC: metric_str = "EMG"; break;
      case MDC_ELEC_EVOK_POTL_BERA_AMPL_WV_1: metric_str = "MDC_ELEC_EVOK_POTL_BERA_AMPL_WV_1"; break;
      case MDC_ELEC_EVOK_POTL_BERA_AMPL_WV_2: metric_str = "MDC_ELEC_EVOK_POTL_BERA_AMPL_WV_2"; break;
      case MDC_ELEC_POTL_BERA_AMPL_WV_3: metric_str = "MDC_ELEC_POTL_BERA_AMPL_WV_3"; break;
      case MDC_ELEC_POTL_BERA_AMPL_WV_4: metric_str = "MDC_ELEC_POTL_BERA_AMPL_WV_4"; break;
      case MDC_ELEC_POTL_BERA_AMPL_WV_5: metric_str = "MDC_ELEC_POTL_BERA_AMPL_WV_5"; break;
      case MDC_ELEC_EVOK_POTL_CRTX: metric_str = "EVP"; break;
      case MDC_ELEC_EVOK_POTL_BSTEM_ACOUSTIC: metric_str = "BERA"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_ACOUSTIC: metric_str = "AEP"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_MAG: metric_str = "MDC_ELEC_EVOK_POTL_CRTX_MAG"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_MOTOR: metric_str = "MEP"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_SOMATOSENS: metric_str = "SEP"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_VIS: metric_str = "VEP"; break;
      case MDC_ELEC_POTL_CRTX_INSKULL: metric_str = "ECoG"; break;
      case MDC_ELEC_POTL_CRTX_AMPL_P100: metric_str = "MDC_ELEC_POTL_CRTX_AMPL_P100"; break;
      case MDC_FLOW_BLD_CEREB: metric_str = "MDC_FLOW_BLD_CEREB"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_PEAK: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_PEAK"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE"; break;
      case MDC_LATENCY_BSTEM_EVOK_POTL_WV_1: metric_str = "MDC_LATENCY_BSTEM_EVOK_POTL_WV_1"; break;
      case MDC_LATENCY_BSTEM_EVOK_POTL_WV_2: metric_str = "MDC_LATENCY_BSTEM_EVOK_POTL_WV_2"; break;
      case MDC_LATENCY_BSTEM_EVOK_POTL_WV_3: metric_str = "MDC_LATENCY_BSTEM_EVOK_POTL_WV_3"; break;
      case MDC_LATENCY_BSTEM_EVOK_POTL_WV_4: metric_str = "MDC_LATENCY_BSTEM_EVOK_POTL_WV_4"; break;
      case MDC_LATENCY_BSTEM_EVOK_POTL_WV_5: metric_str = "MDC_LATENCY_BSTEM_EVOK_POTL_WV_5"; break;
      case MDC_LATENCY_VEP_WV_P100: metric_str = "MDC_LATENCY_VEP_WV_P100"; break;
      case MDC_MEG_MAGFLD: metric_str = "MEG"; break;
      case MDC_EEG_NUM_AROUS: metric_str = "MDC_EEG_NUM_AROUS"; break;
      case MDC_EEG_NUM_SPK: metric_str = "MDC_EEG_NUM_SPK"; break;
      case MDC_EEG_NUM_SEIZ: metric_str = "MDC_EEG_NUM_SEIZ"; break;
      case MDC_EEG_PWR_SPEC_CSA: metric_str = "CSA"; break;
      case MDC_EEG_PWR_SPEC_TOT: metric_str = "MDC_EEG_PWR_SPEC_TOT"; break;
      case MDC_EEG_PWR_SPEC_ALPHA_ABS: metric_str = "MDC_EEG_PWR_SPEC_ALPHA_ABS"; break;
      case MDC_EEG_PWR_SPEC_BETA_ABS: metric_str = "MDC_EEG_PWR_SPEC_BETA_ABS"; break;
      case MDC_EEG_PWR_SPEC_DELTA_ABS: metric_str = "MDC_EEG_PWR_SPEC_DELTA_ABS"; break;
      case MDC_EEG_PWR_SPEC_THETA_ABS: metric_str = "MDC_EEG_PWR_SPEC_THETA_ABS"; break;
      case MDC_EEG_PWR_SPEC_SIGMA_ABS: metric_str = "MDC_EEG_PWR_SPEC_SIGMA_ABS"; break;
      case MDC_EEG_PWR_SPEC_GAMMA_ABS: metric_str = "MDC_EEG_PWR_SPEC_GAMMA_ABS"; break;
      case MDC_EEG_PWR_SPEC_ALPHA_REL: metric_str = "MDC_EEG_PWR_SPEC_ALPHA_REL"; break;
      case MDC_EEG_PWR_SPEC_BETA_REL: metric_str = "MDC_EEG_PWR_SPEC_BETA_REL"; break;
      case MDC_EEG_PWR_SPEC_DELTA_REL: metric_str = "MDC_EEG_PWR_SPEC_DELTA_REL"; break;
      case MDC_EEG_PWR_SPEC_THETA_REL: metric_str = "MDC_EEG_PWR_SPEC_THETA_REL"; break;
      case MDC_EEG_PWR_SPEC_SIGMA_REL: metric_str = "MDC_EEG_PWR_SPEC_SIGMA_REL"; break;
      case MDC_EEG_PWR_SPEC_GAMMA_REL: metric_str = "MDC_EEG_PWR_SPEC_GAMMA_REL"; break;
      case MDC_EEG_BKGD_CRTX: metric_str = "MDC_EEG_BKGD_CRTX"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_BETA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_BETA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_SIGMA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_SIGMA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_GAMMA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_GAMMA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_ALPHA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_ALPHA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_MU: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_MU"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_THETA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_THETA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_THETA_BISYNC: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_THETA_BISYNC"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_DELTA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_DELTA"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_DELTA_BISYNC: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_DELTA_BISYNC"; break;
      case MDC_EEG_BKGD_CRTX_ACTIV_ARRHY_DELTA: metric_str = "MDC_EEG_BKGD_CRTX_ACTIV_ARRHY_DELTA"; break;
      case MDC_EEG_BKGD_CRTX_TRANS_FUSED_SLOW: metric_str = "MDC_EEG_BKGD_CRTX_TRANS_FUSED_SLOW"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG"; break;
      case MDC_EEG_CLS_CRTX_UNSTGABLE: metric_str = "MDC_EEG_CLS_CRTX_UNSTGABLE"; break;
      case MDC_EEG_CLS_CRTX_WAKE_STG: metric_str = "MDC_EEG_CLS_CRTX_WAKE_STG"; break;
      case MDC_EEG_CLS_CRTX_SLP_REM: metric_str = "MDC_EEG_CLS_CRTX_SLP_REM"; break;
      case MDC_EEG_CLS_CRTX_SLP_REM_SPINDLE: metric_str = "MDC_EEG_CLS_CRTX_SLP_REM_SPINDLE"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_I: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_I"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_II: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_II"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_III: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_III"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_IV: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_IV"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_ALPHA_DELTA: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_ALPHA_DELTA"; break;
      case MDC_EEG_CLS_CRTX_SLP_ACTIV: metric_str = "MDC_EEG_CLS_CRTX_SLP_ACTIV"; break;
      case MDC_EEG_CLS_CRTX_SLP_SPINDLE: metric_str = "MDC_EEG_CLS_CRTX_SLP_SPINDLE"; break;
      case MDC_EEG_CLS_CRTX_WV_V: metric_str = "MDC_EEG_CLS_CRTX_WV_V"; break;
      case MDC_EEG_CLS_CRTX_WV_F: metric_str = "MDC_EEG_CLS_CRTX_WV_F"; break;
      case MDC_EEG_CLS_CRTX_CMPLX_K: metric_str = "MDC_EEG_CLS_CRTX_CMPLX_K"; break;
      case MDC_EEG_CLS_CRTX_POSTOCCIP_TRANS_SHARP: metric_str = "MDC_EEG_CLS_CRTX_POSTOCCIP_TRANS_SHARP"; break;
      case MDC_EEG_CLS_CRTX_WV_SAW: metric_str = "MDC_EEG_CLS_CRTX_WV_SAW"; break;
      case MDC_EEG_CLS_CRTX_SLP_STG_SHIFT: metric_str = "MDC_EEG_CLS_CRTX_SLP_STG_SHIFT"; break;
      case MDC_EEG_CLS_CRTX_AROUSAL: metric_str = "MDC_EEG_CLS_CRTX_AROUSAL"; break;
      case MDC_EEG_CLS_CRTX_AWAKENING: metric_str = "MDC_EEG_CLS_CRTX_AWAKENING"; break;
      case MDC_EEG_PAROX_CRTX_DISCHG_EPILEP: metric_str = "MDC_EEG_PAROX_CRTX_DISCHG_EPILEP"; break;
      case MDC_EEG_PAROX_CRTX_TRANS_SHARP: metric_str = "MDC_EEG_PAROX_CRTX_TRANS_SHARP"; break;
      case MDC_EEG_PAROX_CRTX_WICKET: metric_str = "MDC_EEG_PAROX_CRTX_WICKET"; break;
      case MDC_EEG_PAROX_CRTX_SPK_SHARP_SMALL: metric_str = "MDC_EEG_PAROX_CRTX_SPK_SHARP_SMALL"; break;
      case MDC_EEG_PAROX_CRTX_WV_ZETA: metric_str = "MDC_EEG_PAROX_CRTX_WV_ZETA"; break;
      case MDC_EEG_PAROX_CRTX_WV_TRIPHAS: metric_str = "MDC_EEG_PAROX_CRTX_WV_TRIPHAS"; break;
      case MDC_EEG_PAROX_CRTX_SPK_AND_WV_PHANTOM: metric_str = "MDC_EEG_PAROX_CRTX_SPK_AND_WV_PHANTOM"; break;
      case MDC_EEG_PAROX_CRTX_BURST_POS_14_AND_6HZ: metric_str = "MDC_EEG_PAROX_CRTX_BURST_POS_14_AND_6HZ"; break;
      case MDC_EEG_PAROX_CRTX_WV_LAMBDA: metric_str = "MDC_EEG_PAROX_CRTX_WV_LAMBDA"; break;
      case MDC_EEG_PAROX_CRTX_DISCHG: metric_str = "MDC_EEG_PAROX_CRTX_DISCHG"; break;
      case MDC_EEG_PAROX_CRTX_WV_SHARP: metric_str = "MDC_EEG_PAROX_CRTX_WV_SHARP"; break;
      case MDC_EEG_PAROX_CRTX_SPK: metric_str = "MDC_EEG_PAROX_CRTX_SPK"; break;
      case MDC_EEG_PAROX_CRTX_SPK_MULT: metric_str = "MDC_EEG_PAROX_CRTX_SPK_MULT"; break;
      case MDC_EEG_PAROX_CRTX_SPK_AND_WV_CMPLX: metric_str = "MDC_EEG_PAROX_CRTX_SPK_AND_WV_CMPLX"; break;
      case MDC_EEG_PAROX_CRTX_SPK_AND_WV_CMPLX_ATYP: metric_str = "MDC_EEG_PAROX_CRTX_SPK_AND_WV_CMPLX_ATYP"; break;
      case MDC_EEG_PAROX_CRTX_WV_CMPLX_SHARP_SLOW: metric_str = "MDC_EEG_PAROX_CRTX_WV_CMPLX_SHARP_SLOW"; break;
      case MDC_EEG_PAROX_CRTX_WV_RHYTHMIC_MULT_SHARP: metric_str = "MDC_EEG_PAROX_CRTX_WV_RHYTHMIC_MULT_SHARP"; break;
      case MDC_EEG_PAROX_CRTX_BURST_SUPPRN: metric_str = "MDC_EEG_PAROX_CRTX_BURST_SUPPRN"; break;
      case MDC_EEG_PAROX_CRTX_SPK_MULT_AND_ASYNC_SLOW: metric_str = "MDC_EEG_PAROX_CRTX_SPK_MULT_AND_ASYNC_SLOW"; break;
      case MDC_EEG_PAROX_CRTX_CEREB_ACTIV_PERI: metric_str = "MDC_EEG_PAROX_CRTX_CEREB_ACTIV_PERI"; break;
      case MDC_EEG_PAROX_CRTX_WV_TRIPHAS_MULT_QUASIPERI: metric_str = "MDC_EEG_PAROX_CRTX_WV_TRIPHAS_MULT_QUASIPERI"; break;
      case MDC_EEG_PAROX_CRTX_WV_TRIPHAS_MULT_PERI: metric_str = "MDC_EEG_PAROX_CRTX_WV_TRIPHAS_MULT_PERI"; break;
      case MDC_EEG_PAROX_CRTX_DISCHG_EPILEP_MULT_PERI: metric_str = "MDC_EEG_PAROX_CRTX_DISCHG_EPILEP_MULT_PERI"; break;
      case MDC_EEG_PAROX_CRTX_CMPLX_MULT_PERI: metric_str = "MDC_EEG_PAROX_CRTX_CMPLX_MULT_PERI"; break;
      case MDC_EEG_PAROX_CRTX_WV_MULT_SHARP_QUASIPERI: metric_str = "MDC_EEG_PAROX_CRTX_WV_MULT_SHARP_QUASIPERI"; break;
      case MDC_EEG_PAROX_CRTX_WV_MULT_SHARP_PERI: metric_str = "MDC_EEG_PAROX_CRTX_WV_MULT_SHARP_PERI"; break;
      case MDC_EEG_PAROX_CRTX_SUPPRN_MULT_PERI: metric_str = "MDC_EEG_PAROX_CRTX_SUPPRN_MULT_PERI"; break;
      case MDC_EEG_PAROX_CRTX_BURST_W_SUPPRN_MULT_PERI: metric_str = "MDC_EEG_PAROX_CRTX_BURST_W_SUPPRN_MULT_PERI"; break;
      case MDC_EEG_EXT_CRTX_EYE_MVMT_MULT: metric_str = "MDC_EEG_EXT_CRTX_EYE_MVMT_MULT"; break;
      case MDC_EEG_EXT_CRTX_EYE_BLINK: metric_str = "MDC_EEG_EXT_CRTX_EYE_BLINK"; break;
      case MDC_EEG_EXT_CRTX_EYE_MVMT_NYSTAG_MULT: metric_str = "MDC_EEG_EXT_CRTX_EYE_MVMT_NYSTAG_MULT"; break;
      case MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_SLOW: metric_str = "MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_SLOW"; break;
      case MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_FAST_IRREG: metric_str = "MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_FAST_IRREG"; break;
      case MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_RAPID: metric_str = "MDC_EEG_EXT_CRTX_EYE_MVMT_MULT_RAPID"; break;
      case MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTIC_DRV: metric_str = "MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTIC_DRV"; break;
      case MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTOMYOGENIC: metric_str = "MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTOMYOGENIC"; break;
      case MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTOPARADOX: metric_str = "MDC_EEG_EXT_CRTX_EYE_ACTIV_PHOTOPARADOX"; break;
      case MDC_EEG_EXT_CRTX_EYE_ERG: metric_str = "MDC_EEG_EXT_CRTX_EYE_ERG"; break;
      case MDC_EEG_EXT_ACTIV_MYOGENIC: metric_str = "MDC_EEG_EXT_ACTIV_MYOGENIC"; break;
      case MDC_EEG_EXT_PALATAL_MYOCLONUS: metric_str = "MDC_EEG_EXT_PALATAL_MYOCLONUS"; break;
      case MDC_EEG_EXT_MYOKYMIA: metric_str = "MDC_EEG_EXT_MYOKYMIA"; break;
      case MDC_EEG_EXT_FACIA_SYNKINESIS: metric_str = "MDC_EEG_EXT_FACIA_SYNKINESIS"; break;
      case MDC_EEG_EXT_HEMIFACIAL_SPASM: metric_str = "MDC_EEG_EXT_HEMIFACIAL_SPASM"; break;
      case MDC_EEG_EXT_EXTRA_OCUL_MUSCL_ACTIV: metric_str = "MDC_EEG_EXT_EXTRA_OCUL_MUSCL_ACTIV"; break;
      case MDC_EEG_EXT_ACTIV_TREMOR: metric_str = "MDC_EEG_EXT_ACTIV_TREMOR"; break;
      case MDC_EEG_EXT_ACTIV_MYOCLONIC: metric_str = "MDC_EEG_EXT_ACTIV_MYOCLONIC"; break;
      case MDC_EEG_EXT_SLP_MVMT_MULT_PERI: metric_str = "MDC_EEG_EXT_SLP_MVMT_MULT_PERI"; break;
      case MDC_EEG_EXT_SLP_MVMT_W_AROUS_MULT_PERI: metric_str = "MDC_EEG_EXT_SLP_MVMT_W_AROUS_MULT_PERI"; break;
      case MDC_EEG_ARTIF: metric_str = "MDC_EEG_ARTIF"; break;
      case MDC_EEG_ARTIF_ELECTRODE_INSTRUM: metric_str = "MDC_EEG_ARTIF_ELECTRODE_INSTRUM"; break;
      case MDC_EEG_ARTIF_MVMT: metric_str = "MDC_EEG_ARTIF_MVMT"; break;
      case MDC_EEG_ARTIF_SWEAT_OR_GALV: metric_str = "MDC_EEG_ARTIF_SWEAT_OR_GALV"; break;
      case MDC_EEG_ARTIF_PULSE: metric_str = "MDC_EEG_ARTIF_PULSE"; break;
      case MDC_EEG_ARTIF_EKG: metric_str = "MDC_EEG_ARTIF_EKG"; break;
      case MDC_EEG_ARTIF_RESP: metric_str = "MDC_EEG_ARTIF_RESP"; break;
      case MDC_EEG_ARTIF_GLOSSOKINETIC: metric_str = "MDC_EEG_ARTIF_GLOSSOKINETIC"; break;
      case MDC_EEG_ARTIF_SWALLOW_ETC: metric_str = "MDC_EEG_ARTIF_SWALLOW_ETC"; break;
      case MDC_EEG_ARTIF_EXT_INTERF: metric_str = "MDC_EEG_ARTIF_EXT_INTERF"; break;
      case MDC_EOG_EYE_MVMT_BLINK: metric_str = "BL"; break;
      case MDC_EOG_EYE_MVMT_SACCADIC: metric_str = "SAC"; break;
      case MDC_EOG_EYE_MVMT_RAPID: metric_str = "REM"; break;
      case MDC_EOG_EYE_MVMT_SLOW: metric_str = "SEM"; break;
      case MDC_EOG_EYE_MVMT_OTHER: metric_str = "OEM"; break;
      case MDC_EOG_EYE_MVMT_CLOSING: metric_str = "EC"; break;
      case MDC_EOG_EYE_MVMT_OPENING: metric_str = "EO"; break;
      case MDC_EMG_PAROX_MUSCL: metric_str = "MDC_EMG_PAROX_MUSCL"; break;
      case MDC_EMG_PAROX_MUSCL_VOL_CTL: metric_str = "MDC_EMG_PAROX_MUSCL_VOL_CTL"; break;
      case MDC_EMG_PAROX_MUSCL_MOTOR_UNIT_POTL: metric_str = "MDC_EMG_PAROX_MUSCL_MOTOR_UNIT_POTL"; break;
      case MDC_EMG_PAROX_MUSCL_DOUBLET: metric_str = "MDC_EMG_PAROX_MUSCL_DOUBLET"; break;
      case MDC_EMG_PAROX_MUSCL_TRIPLET: metric_str = "MDC_EMG_PAROX_MUSCL_TRIPLET"; break;
      case MDC_EMG_PAROX_MUSCL_MULTIPLET: metric_str = "MDC_EMG_PAROX_MUSCL_MULTIPLET"; break;
      case MDC_EMG_PAROX_MUSCL_ACTIV_INSERTIONAL: metric_str = "MDC_EMG_PAROX_MUSCL_ACTIV_INSERTIONAL"; break;
      case MDC_EMG_PAROX_MUSCL_NOISE_ENDPLATE: metric_str = "MDC_EMG_PAROX_MUSCL_NOISE_ENDPLATE"; break;
      case MDC_EMG_PAROX_MUSCL_SPK_ENDPLATE: metric_str = "MDC_EMG_PAROX_MUSCL_SPK_ENDPLATE"; break;
      case MDC_EMG_PAROX_MUSCL_DISCHG_ITER: metric_str = "MDC_EMG_PAROX_MUSCL_DISCHG_ITER"; break;
      case MDC_EMG_PAROX_MUSCL_FIBRIL_POTL: metric_str = "MDC_EMG_PAROX_MUSCL_FIBRIL_POTL"; break;
      case MDC_EMG_PAROX_MUSCL_WV_SHARP_POS: metric_str = "MDC_EMG_PAROX_MUSCL_WV_SHARP_POS"; break;
      case MDC_EMG_PAROX_MUSCL_FASCIC_POTL: metric_str = "MDC_EMG_PAROX_MUSCL_FASCIC_POTL"; break;
      case MDC_EMG_PAROX_MUSCL_DISCHG_MYOTONIC: metric_str = "MDC_EMG_PAROX_MUSCL_DISCHG_MYOTONIC"; break;
      case MDC_EMG_PAROX_MUSCL_DISCHG_MULT_CMPLX_REPET: metric_str = "MDC_EMG_PAROX_MUSCL_DISCHG_MULT_CMPLX_REPET"; break;
      case MDC_EMG_PAROX_MUSCL_DISCHG_MYOKEMIC_MULT: metric_str = "MDC_EMG_PAROX_MUSCL_DISCHG_MYOKEMIC_MULT"; break;
      case MDC_EMG_PAROX_MUSCL_DISCHG_CRAMP_MULT: metric_str = "MDC_EMG_PAROX_MUSCL_DISCHG_CRAMP_MULT"; break;
      case MDC_EMG_PAROX_MUSCL_AFTER_DISCHG_MULT: metric_str = "MDC_EMG_PAROX_MUSCL_AFTER_DISCHG_MULT"; break;
      case MDC_EMG_PAROX_NERV_MOTOR: metric_str = "MDC_EMG_PAROX_NERV_MOTOR"; break;
      case MDC_EMG_PAROX_NERV_MOTOR_WV_F: metric_str = "MDC_EMG_PAROX_NERV_MOTOR_WV_F"; break;
      case MDC_EMG_PAROX_NERV_MOTOR_REFLEX_H: metric_str = "MDC_EMG_PAROX_NERV_MOTOR_REFLEX_H"; break;
      case MDC_EMG_PAROX_NERV_MOTOR_REFLEX_C: metric_str = "MDC_EMG_PAROX_NERV_MOTOR_REFLEX_C"; break;
      case MDC_EMG_PAROX_NERV_MOTOR_SILENT_PERIOD: metric_str = "MDC_EMG_PAROX_NERV_MOTOR_SILENT_PERIOD"; break;
      case MDC_EMG_PAROX_NERV_MOTOR_AXON_REFLEX: metric_str = "MDC_EMG_PAROX_NERV_MOTOR_AXON_REFLEX"; break;
      case MDC_EMG_PAROX_NERV_SENS: metric_str = "MDC_EMG_PAROX_NERV_SENS"; break;
      case MDC_EMG_PAROX_NERV_SENS_SNAP: metric_str = "MDC_EMG_PAROX_NERV_SENS_SNAP"; break;
      case MDC_EMG_PAROX_NERV_SENS_R1: metric_str = "MDC_EMG_PAROX_NERV_SENS_R1"; break;
      case MDC_EMG_PAROX_NERV_SENS_R2: metric_str = "MDC_EMG_PAROX_NERV_SENS_R2"; break;
      case MDC_EMG_PAROX_NERV_SENS_R2_CONTRALAT: metric_str = "MDC_EMG_PAROX_NERV_SENS_R2_CONTRALAT"; break;
      case MDC_EVOK_POTL_CRTX_BAEP: metric_str = "MDC_EVOK_POTL_CRTX_BAEP"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_I_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_I_PK"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_II_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_II_PK"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_III_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_III_PK"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_IV_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_IV_PK"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_V_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_V_PK"; break;
      case MDC_EVOK_POTL_CRTX_BAEP_VI_PK: metric_str = "MDC_EVOK_POTL_CRTX_BAEP_VI_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_N0_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_N0_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_P0_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_P0_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_NA_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_NA_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_PA_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_PA_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_NB_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_NB_PK"; break;
      case MDC_EVOK_POTL_CRTX_MLAEP_PB_PK: metric_str = "MDC_EVOK_POTL_CRTX_MLAEP_PB_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_NB_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_NB_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_P1_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_P1_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_N1_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_N1_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_P2_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_P2_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_N2_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_N2_PK"; break;
      case MDC_EVOK_POTL_CRTX_LLAEP_P300_PK: metric_str = "MDC_EVOK_POTL_CRTX_LLAEP_P300_PK"; break;
      case MDC_EVOK_POTL_EAR_COCHL: metric_str = "MDC_EVOK_POTL_EAR_COCHL"; break;
      case MDC_EVOK_POTL_EAR_COCHL_MICROPHONIC: metric_str = "MDC_EVOK_POTL_EAR_COCHL_MICROPHONIC"; break;
      case MDC_EVOK_POTL_EAR_COCHL_SUM_POTL: metric_str = "MDC_EVOK_POTL_EAR_COCHL_SUM_POTL"; break;
      case MDC_EVOK_POTL_EAR_COCHL_NAP: metric_str = "MDC_EVOK_POTL_EAR_COCHL_NAP"; break;
      case MDC_EVOK_POTL_EAR_COCHL_MICRO_SUM_POTL: metric_str = "MDC_EVOK_POTL_EAR_COCHL_MICRO_SUM_POTL"; break;
      case MDC_EVOK_POTL_EAR_COCHL_SUM_POTL_NAP: metric_str = "MDC_EVOK_POTL_EAR_COCHL_SUM_POTL_NAP"; break;
      case MDC_EVOK_POTL_EAR_COCHL_MICRO_NAP: metric_str = "MDC_EVOK_POTL_EAR_COCHL_MICRO_NAP"; break;
      case MDC_EVOK_POTL_EYE_RETINA: metric_str = "MDC_EVOK_POTL_EYE_RETINA"; break;
      case MDC_EVOK_POTL_EYE_RETINA_RECEP_POTL_EARLY: metric_str = "MDC_EVOK_POTL_EYE_RETINA_RECEP_POTL_EARLY"; break;
      case MDC_EVOK_POTL_EYE_RETINA_WV_A: metric_str = "MDC_EVOK_POTL_EYE_RETINA_WV_A"; break;
      case MDC_EVOK_POTL_EYE_RETINA_WV_B: metric_str = "MDC_EVOK_POTL_EYE_RETINA_WV_B"; break;
      case MDC_EVOK_POTL_EYE_RETINA_WV_C: metric_str = "MDC_EVOK_POTL_EYE_RETINA_WV_C"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_P50_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_P50_PK"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_N75_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_N75_PK"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_P100_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_P100_PK"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_P145_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_P145_PK"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_P175_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_P175_PK"; break;
      case MDC_EVOK_POTL_CRTX_PATT_VEP_P300_PK: metric_str = "MDC_EVOK_POTL_CRTX_PATT_VEP_P300_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N1_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N1_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P1_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P1_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N2_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N2_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P2_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P2_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N3_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_N3_PK"; break;
      case MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P3_PK: metric_str = "MDC_EVOK_POTL_CRTX_DIFFUSE_LT_VEP_P3_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N9_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N9_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N11_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N11_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N13_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N13_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N20_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_N20_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_P30_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_P30_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_P300_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_MED_ULN_SEP_P300_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_LUMBAR_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_LUMBAR_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_LO_THOR_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_LO_THOR_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_HI_THOR_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_HI_THOR_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_P27_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_P27_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_N35_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_N35_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_PER_SEP_P300_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_PER_SEP_P300_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_POPLIT_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_POPLIT_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_LUMBAR_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_LUMBAR_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_THOR_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_THOR_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_P37_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_P37_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_N45_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_N45_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_P300_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_TIB_SEP_P300_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_I_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_I_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_II_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_II_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_III_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_III_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_IV_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_IV_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_V_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_V_PK"; break;
      case MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_P300_PK: metric_str = "MDC_EVOK_POTL_NERV_CRTX_OTH_SEP_P300_PK"; break;
      case MDC_EEG_PATT_CRTX_THETA_BKGD: metric_str = "MDC_EEG_PATT_CRTX_THETA_BKGD"; break;
      case MDC_POSN_SYRING_PIST: metric_str = "MDC_POSN_SYRING_PIST"; break;
      case MDC_FLOW_FLUID_DRAIN_INSTANT: metric_str = "MDC_FLOW_FLUID_DRAIN_INSTANT"; break;
      case MDC_FLOW_URINE_INSTANT: metric_str = "MDC_FLOW_URINE_INSTANT"; break;
      case MDC_FLOW_FLUID_DRAIN_PREV_HR: metric_str = "MDC_FLOW_FLUID_DRAIN_PREV_HR"; break;
      case MDC_FLOW_URINE_PREV_HR: metric_str = "MDC_FLOW_URINE_PREV_HR"; break;
      case MDC_FLOW_FLUID_PREV_HR: metric_str = "MDC_FLOW_FLUID_PREV_HR"; break;
      case MDC_VOL_FLUID_BAL_PD: metric_str = "MDC_VOL_FLUID_BAL_PD"; break;
      case MDC_VOL_FLUID_DRAIN: metric_str = "MDC_VOL_FLUID_DRAIN"; break;
      case MDC_VOL_URINE_BAL_PD: metric_str = "MDC_VOL_URINE_BAL_PD"; break;
      case MDC_VOL_FLUID_COL: metric_str = "MDC_VOL_FLUID_COL"; break;
      case MDC_VOL_FLUID_DRAIN_COL: metric_str = "MDC_VOL_FLUID_DRAIN_COL"; break;
      case MDC_VOL_URINE_COL: metric_str = "MDC_VOL_URINE_COL"; break;
      case MDC_VOL_DIFF_BLD_BAL_PD: metric_str = "MDC_VOL_DIFF_BLD_BAL_PD"; break;
      case MDC_VOL_DIFF_BLD_BAL_PD_CRYST: metric_str = "MDC_VOL_DIFF_BLD_BAL_PD_CRYST"; break;
      case MDC_VOL_DIFF_FLUID_BAL_PD_TOT: metric_str = "MDC_VOL_DIFF_FLUID_BAL_PD_TOT"; break;
      case MDC_CONC_DRUG: metric_str = "MDC_CONC_DRUG"; break;
      case MDC_TIME_PD_FLUID_STANDBY_REMAIN: metric_str = "MDC_TIME_PD_FLUID_STANDBY_REMAIN"; break;
      case MDC_TIME_PD_FLUID_BOLUS_LOCKOUT: metric_str = "MDC_TIME_PD_FLUID_BOLUS_LOCKOUT"; break;
      case MDC_TIME_PD_FLUID_DELIV_SINCE_START: metric_str = "total infusion time"; break;
      case MDC_TIME_PD_FLUID_STANDBY: metric_str = "MDC_TIME_PD_FLUID_STANDBY"; break;
      case MDC_FLOW_FLUID_BOLUS: metric_str = "MDC_FLOW_FLUID_BOLUS"; break;
      case MDC_FLOW_FLUID_PUMP: metric_str = "infusion flow rate"; break; // Note duplicate MDC_RATE_INFUS
      case MDC_FLOW_FLUID_MAX: metric_str = "maximum flow rate"; break;
      case MDC_FLOW_FLUID_DELIV_MIN: metric_str = "MDC_FLOW_FLUID_DELIV_MIN"; break;
      case MDC_FLOW_FLUID_PUMP_PROP: metric_str = "MDC_FLOW_FLUID_PUMP_PROP"; break;
      case MDC_FLOW_BOLUS_DRUG_DELIV: metric_str = "MDC_FLOW_BOLUS_DRUG_DELIV"; break;
      case MDC_FLOW_DRUG_DELIV: metric_str = "MDC_FLOW_DRUG_DELIV"; break;
      case MDC_FLOW_FLUID_RANGE: metric_str = "MDC_FLOW_FLUID_RANGE"; break;
      case MDC_FLOW_FLUID_RES: metric_str = "MDC_FLOW_FLUID_RES"; break;
      case MDC_DOSE_DRUG_BOLUS: metric_str = "MDC_DOSE_DRUG_BOLUS"; break;
      case MDC_MASS_DRUG_DELIV: metric_str = "MDC_MASS_DRUG_DELIV"; break;
      case MDC_MASS_DOSE_LOADING: metric_str = "MDC_MASS_DOSE_LOADING"; break;
      case MDC_RATE_PCA_GOOD_DMD: metric_str = "MDC_RATE_PCA_GOOD_DMD"; break;
      case MDC_RATE_PCA_REQ: metric_str = "MDC_RATE_PCA_REQ"; break;
      case MDC_PRESS_FLUID_MEAS: metric_str = "pressure value"; break;
      case MDC_PRESS_FLUID_CALC: metric_str = "pressure calculation"; break;
      case MDC_VOL_FLUID_BOLUS: metric_str = "MDC_VOL_FLUID_BOLUS"; break;
      case MDC_VOL_FLUID_DELIV: metric_str = "total infused volume"; break;
      case MDC_VOL_FLUID_DILUENT: metric_str = "MDC_VOL_FLUID_DILUENT"; break;
      case MDC_VOL_FLUID_TBI_REMAIN: metric_str = "volume to be infused"; break;
      case MDC_VOL_FLUID_RES: metric_str = "MDC_VOL_FLUID_RES"; break;
      case MDC_VOL_SYRINGE: metric_str = "MDC_VOL_SYRINGE"; break;
      case MDC_VOL_FLUID_TBI: metric_str = "MDC_VOL_FLUID_TBI"; break;
      case MDC_VOL_FLUID_DELIV_TOTAL_SET: metric_str = "MDC_VOL_FLUID_DELIV_TOTAL_SET"; break;
      case MDC_FLOW_FLUID_INSTANT: metric_str = "MDC_FLOW_FLUID_INSTANT"; break;
      case MDC_PRESS_FLUID_ACT: metric_str = "MDC_PRESS_FLUID_ACT"; break;
      case MDC_TIME_PD_BOLUS_DELIV: metric_str = "MDC_TIME_PD_BOLUS_DELIV"; break;
      case MDC_TIME_PD_DELAY: metric_str = "MDC_TIME_PD_DELAY"; break;
      case MDC_TIME_PD_DELAY_REMAIN: metric_str = "remaining time during pause"; break;
      case MDC_TIME_PD_DELAY_INTERDOSES: metric_str = "MDC_TIME_PD_DELAY_INTERDOSES"; break;
      case MDC_TIME_PD_REMAIN: metric_str = "remaining infusion time"; break;
      case MDC_FLOW_KVO: metric_str = "MDC_FLOW_KVO"; break;
      case MDC_RATE_DOSE: metric_str = "MDC_RATE_DOSE"; break;
      case MDC_RATE_DOSE_BSA: metric_str = "MDC_RATE_DOSE_BSA"; break;
      case MDC_NUM_DOSE_CURR: metric_str = "MDC_NUM_DOSE_CURR"; break;
      case MDC_NUM_DOSE_REMAIN: metric_str = "MDC_NUM_DOSE_REMAIN"; break;
      case MDC_RATE_DOSE_GRANT_PER_HR: metric_str = "MDC_RATE_DOSE_GRANT_PER_HR"; break;
      case MDC_RATE_DOSE_REQ_PER_HR: metric_str = "MDC_RATE_DOSE_REQ_PER_HR"; break;
      case MDC_VOL_INFUS_ACTUAL_TOTAL: metric_str = "MDC_VOL_INFUS_ACTUAL_TOTAL"; break;
      case MDC_RATE_INFUS_PRI: metric_str = "MDC_RATE_INFUS_PRI"; break;
      case MDC_VOL_FLUID_DELIV_PRI: metric_str = "primary infused volume"; break;
      case MDC_VOL_FLUID_TBI_REMAIN_PRI: metric_str = "MDC_VOL_FLUID_TBI_REMAIN_PRI"; break;
      case MDC_VOL_FLUID_TBI_PRI: metric_str = "MDC_VOL_FLUID_TBI_PRI"; break;
      case MDC_PVT_RATE_INFUS_SEC: metric_str = "MDC_PVT_RATE_INFUS_SEC"; break;
      case MDC_VOL_FLUID_DELIV_SEC: metric_str = "secondary infused volume"; break;
      case MDC_VOL_FLUID_TBI_REMAIN_SEC: metric_str = "MDC_VOL_FLUID_TBI_REMAIN_SEC"; break;
      case MDC_VOL_FLUID_TBI_SEC: metric_str = "MDC_VOL_FLUID_TBI_SEC"; break;
      case MDC_CONC_PH_ART: metric_str = "MDC_CONC_PH_ART"; break;
      case MDC_CONC_H_ION_ART: metric_str = "MDC_CONC_H_ION_ART"; break;
      case MDC_CONC_PCO2_ART: metric_str = "MDC_CONC_PCO2_ART"; break;
      case MDC_CONC_PO2_ART: metric_str = "MDC_CONC_PO2_ART"; break;
      case MDC_CONC_HCO3_ART: metric_str = "MDC_CONC_HCO3_ART"; break;
      case MDC_CONC_HB_ART: metric_str = "MDC_CONC_HB_ART"; break;
      case MDC_CONC_HB_O2_ART: metric_str = "MDC_CONC_HB_O2_ART"; break;
      case MDC_CONC_HB_MET_ART: metric_str = "MDC_CONC_HB_MET_ART"; break;
      case MDC_CONC_HB_CO_ART: metric_str = "MDC_CONC_HB_CO_ART"; break;
      case MDC_CONC_NA_ART: metric_str = "MDC_CONC_NA_ART"; break;
      case MDC_CONC_K_ART: metric_str = "MDC_CONC_K_ART"; break;
      case MDC_CONC_GLU_ART: metric_str = "MDC_CONC_GLU_ART"; break;
      case MDC_CONC_CA_ART: metric_str = "MDC_CONC_CA_ART"; break;
      case MDC_CONC_PH_VEN: metric_str = "MDC_CONC_PH_VEN"; break;
      case MDC_CONC_H_ION_VEN: metric_str = "MDC_CONC_H_ION_VEN"; break;
      case MDC_CONC_PCO2_VEN: metric_str = "MDC_CONC_PCO2_VEN"; break;
      case MDC_CONC_PO2_VEN: metric_str = "MDC_CONC_PO2_VEN"; break;
      case MDC_CONC_HCO3_VEN: metric_str = "MDC_CONC_HCO3_VEN"; break;
      case MDC_CONC_HB_VEN: metric_str = "MDC_CONC_HB_VEN"; break;
      case MDC_CONC_HB_O2_VEN: metric_str = "MDC_CONC_HB_O2_VEN"; break;
      case MDC_CONC_HB_MET_VEN: metric_str = "MDC_CONC_HB_MET_VEN"; break;
      case MDC_CONC_HB_CO_VEN: metric_str = "MDC_CONC_HB_CO_VEN"; break;
      case MDC_CONC_NA_VEN: metric_str = "MDC_CONC_NA_VEN"; break;
      case MDC_CONC_K_VEN: metric_str = "MDC_CONC_K_VEN"; break;
      case MDC_CONC_GLU_VEN: metric_str = "MDC_CONC_GLU_VEN"; break;
      case MDC_CONC_CA_VEN: metric_str = "MDC_CONC_CA_VEN"; break;
      case MDC_CONC_PH_URINE: metric_str = "MDC_CONC_PH_URINE"; break;
      case MDC_CONC_H_ION_URINE: metric_str = "MDC_CONC_H_ION_URINE"; break;
      case MDC_CONC_HCO3_URINE: metric_str = "MDC_CONC_HCO3_URINE"; break;
      case MDC_CONC_NA_URINE: metric_str = "MDC_CONC_NA_URINE"; break;
      case MDC_CONC_K_URINE: metric_str = "MDC_CONC_K_URINE"; break;
      case MDC_CONC_GLU_URINE: metric_str = "MDC_CONC_GLU_URINE"; break;
      case MDC_CONC_CA_URINE: metric_str = "MDC_CONC_CA_URINE"; break;
      case MDC_CONC_UREA_URINE: metric_str = "MDC_CONC_UREA_URINE"; break;
      case MDC_CONC_PH_ASPIR: metric_str = "MDC_CONC_PH_ASPIR"; break;
      case MDC_CONC_H_ION_ASPIR: metric_str = "MDC_CONC_H_ION_ASPIR"; break;
      case MDC_CONC_HCO3_ASPIR: metric_str = "MDC_CONC_HCO3_ASPIR"; break;
      case MDC_CONC_NA_ASPIR: metric_str = "MDC_CONC_NA_ASPIR"; break;
      case MDC_CONC_K_ASPIR: metric_str = "MDC_CONC_K_ASPIR"; break;
      case MDC_CONC_GLU_ASPIR: metric_str = "MDC_CONC_GLU_ASPIR"; break;
      case MDC_CONC_CA_ASPIR: metric_str = "MDC_CONC_CA_ASPIR"; break;
      case MDC_CONC_PH_DRAIN: metric_str = "MDC_CONC_PH_DRAIN"; break;
      case MDC_CONC_H_ION_DRAIN: metric_str = "MDC_CONC_H_ION_DRAIN"; break;
      case MDC_CONC_HCO3_DRAIN: metric_str = "MDC_CONC_HCO3_DRAIN"; break;
      case MDC_CONC_NA_DRAIN: metric_str = "MDC_CONC_NA_DRAIN"; break;
      case MDC_CONC_K_DRAIN: metric_str = "MDC_CONC_K_DRAIN"; break;
      case MDC_CONC_GLU_DRAIN: metric_str = "MDC_CONC_GLU_DRAIN"; break;
      case MDC_CONC_CA_DRAIN: metric_str = "MDC_CONC_CA_DRAIN"; break;
      case MDC_CONC_PH_PLASMA: metric_str = "MDC_CONC_PH_PLASMA"; break;
      case MDC_CONC_H_ION_PLASMA: metric_str = "MDC_CONC_H_ION_PLASMA"; break;
      case MDC_CONC_PCO2_PLASMA: metric_str = "MDC_CONC_PCO2_PLASMA"; break;
      case MDC_CONC_HCO3_PLASMA: metric_str = "MDC_CONC_HCO3_PLASMA"; break;
      case MDC_CONC_NA_PLASMA: metric_str = "MDC_CONC_NA_PLASMA"; break;
      case MDC_CONC_K_PLASMA: metric_str = "MDC_CONC_K_PLASMA"; break;
      case MDC_CONC_GLU_PLASMA: metric_str = "MDC_CONC_GLU_PLASMA"; break;
      case MDC_CONC_CA_PLASMA: metric_str = "MDC_CONC_CA_PLASMA"; break;
      case MDC_CONC_PH_SERUM: metric_str = "MDC_CONC_PH_SERUM"; break;
      case MDC_CONC_H_ION_SERUM: metric_str = "MDC_CONC_H_ION_SERUM"; break;
      case MDC_CONC_PCO2_SERUM: metric_str = "MDC_CONC_PCO2_SERUM"; break;
      case MDC_CONC_HCO3_SERUM: metric_str = "MDC_CONC_HCO3_SERUM"; break;
      case MDC_CONC_NA_SERUM: metric_str = "MDC_CONC_NA_SERUM"; break;
      case MDC_CONC_K_SERUM: metric_str = "MDC_CONC_K_SERUM"; break;
      case MDC_CONC_GLU_SERUM: metric_str = "MDC_CONC_GLU_SERUM"; break;
      case MDC_CONC_CA_SERUM: metric_str = "MDC_CONC_CA_SERUM"; break;
      case MDC_CONC_PH_CSF: metric_str = "MDC_CONC_PH_CSF"; break;
      case MDC_CONC_H_ION_CSF: metric_str = "MDC_CONC_H_ION_CSF"; break;
      case MDC_CONC_PCO2_CSF: metric_str = "MDC_CONC_PCO2_CSF"; break;
      case MDC_CONC_HCO3_CSF: metric_str = "MDC_CONC_HCO3_CSF"; break;
      case MDC_CONC_NA_CSF: metric_str = "MDC_CONC_NA_CSF"; break;
      case MDC_CONC_K_CSF: metric_str = "MDC_CONC_K_CSF"; break;
      case MDC_CONC_GLU_CSF: metric_str = "MDC_CONC_GLU_CSF"; break;
      case MDC_CONC_CA_CSF: metric_str = "MDC_CONC_CA_CSF"; break;
      case MDC_CONC_PH_GEN: metric_str = "MDC_CONC_PH_GEN"; break;
      case MDC_CONC_H_ION_GEN: metric_str = "MDC_CONC_H_ION_GEN"; break;
      case MDC_CONC_HCO3_GEN: metric_str = "MDC_CONC_HCO3_GEN"; break;
      case MDC_CONC_NA_GEN: metric_str = "MDC_CONC_NA_GEN"; break;
      case MDC_CONC_K_GEN: metric_str = "MDC_CONC_K_GEN"; break;
      case MDC_CONC_GLU_GEN: metric_str = "MDC_CONC_GLU_GEN"; break;
      case MDC_CONC_CA_GEN: metric_str = "MDC_CONC_CA_GEN"; break;
      case MDC_CONC_PH_GASTRIC: metric_str = "MDC_CONC_PH_GASTRIC"; break;
      case MDC_CONC_H_ION_GASTRIC: metric_str = "MDC_CONC_H_ION_GASTRIC"; break;
      case MDC_CONC_PH_ESOPH: metric_str = "MDC_CONC_PH_ESOPH"; break;
      case MDC_CONC_H_ION_ESOPH: metric_str = "MDC_CONC_H_ION_ESOPH"; break;
      case MDC_OSMOL_SERUM: metric_str = "MDC_OSMOL_SERUM"; break;
      case MDC_OSMOL_URINE: metric_str = "MDC_OSMOL_URINE"; break;
      case MDC_SPEC_GRAV_URINE: metric_str = "MDC_SPEC_GRAV_URINE"; break;
      case MDC_RATIO_PLASMA_COAG: metric_str = "MDC_RATIO_PLASMA_COAG"; break;
      case MDC_RATIO_SERUM_COAG: metric_str = "MDC_RATIO_SERUM_COAG"; break;
      case MDC_TIME_PD_PLASMA_COAG: metric_str = "MDC_TIME_PD_PLASMA_COAG"; break;
      case MDC_TIME_PD_SERUM_COAG: metric_str = "MDC_TIME_PD_SERUM_COAG"; break;
      case MDC_CONC_PCO2_GEN: metric_str = "MDC_CONC_PCO2_GEN"; break;
      case MDC_CONC_HCT_ART: metric_str = "MDC_CONC_HCT_ART"; break;
      case MDC_CONC_CHLOR_ART: metric_str = "MDC_CONC_CHLOR_ART"; break;
      case MDC_CONC_HB_O2_GEN: metric_str = "MDC_CONC_HB_O2_GEN"; break;
      case MDC_CONC_UREA_ART: metric_str = "MDC_CONC_UREA_ART"; break;
      case MDC_CONC_HCT_VEN: metric_str = "MDC_CONC_HCT_VEN"; break;
      case MDC_CONC_CHLOR_VEN: metric_str = "MDC_CONC_CHLOR_VEN"; break;
      case MDC_CONC_UREA_VEN: metric_str = "MDC_CONC_UREA_VEN"; break;
      case MDC_CONC_CHLOR_PLASMA: metric_str = "MDC_CONC_CHLOR_PLASMA"; break;
      case MDC_CONC_UREA_PLASMA: metric_str = "MDC_CONC_UREA_PLASMA"; break;
      case MDC_CONC_CHLOR_GEN: metric_str = "MDC_CONC_CHLOR_GEN"; break;
      case MDC_BASE_EXCESS_ART_INDEX: metric_str = "MDC_BASE_EXCESS_ART_INDEX"; break;
      case MDC_BASE_EXCESS_VEN_INDEX: metric_str = "MDC_BASE_EXCESS_VEN_INDEX"; break;
      case MDC_CONC_PO2_GEN: metric_str = "MDC_CONC_PO2_GEN"; break;
      case MDC_CONC_HB_GEN: metric_str = "MDC_CONC_HB_GEN"; break;
      case MDC_CONC_HB_MET_GEN: metric_str = "MDC_CONC_HB_MET_GEN"; break;
      case MDC_CONC_HB_CO_GEN: metric_str = "MDC_CONC_HB_CO_GEN"; break;
      case MDC_CONC_HCT_GEN: metric_str = "MDC_CONC_HCT_GEN"; break;
      case MDC_CONC_UREA_GEN: metric_str = "MDC_CONC_UREA_GEN"; break;
      case MDC_ANNOT_WAVE: metric_str = "MDC_ANNOT_WAVE"; break;
      case MDC_TRIG: metric_str = "MDC_TRIG"; break;
      case MDC_TRIG_BEAT: metric_str = "MDC_TRIG_BEAT"; break;
      case MDC_ID_TRIG: metric_str = "MDC_ID_TRIG"; break;
      case MDC_ID_TRIG_BREATH: metric_str = "MDC_ID_TRIG_BREATH"; break;
      case MDC_ECG_STAT_ECT: metric_str = "MDC_ECG_STAT_ECT"; break;
      case MDC_ECG_STAT_RHY: metric_str = "MDC_ECG_STAT_RHY"; break;
      case MDC_ID_TRIG_DEFIB: metric_str = "MDC_ID_TRIG_DEFIB"; break;
      case MDC_DRUG_NAME_TABLE: metric_str = "MDC_DRUG_NAME_TABLE"; break;
      case MDC_DRUG_NAME_TYPE: metric_str = "MDC_DRUG_NAME_TYPE"; break;
      case MDC_DEV_STAT: metric_str = "MDC_DEV_STAT"; break;
      case MDC_VENT_MODE: metric_str = "MDC_VENT_MODE"; break;
      case MDC_VENT_MODE_RESP_SPONT: metric_str = "MDC_VENT_MODE_RESP_SPONT"; break;
      case MDC_VENT_MODE_PAP_CTS_SPONT: metric_str = "MDC_VENT_MODE_PAP_CTS_SPONT"; break;
      case MDC_VENT_MODE_PAP_BIPHAS_SPONT: metric_str = "MDC_VENT_MODE_PAP_BIPHAS_SPONT"; break;
      case MDC_VENT_MODE_PPV_INTERMIT_PAP: metric_str = "MDC_VENT_MODE_PPV_INTERMIT_PAP"; break;
      case MDC_VENT_MODE_PEEP: metric_str = "MDC_VENT_MODE_PEEP"; break;
      case MDC_VENT_MODE_MAND_CTS: metric_str = "MDC_VENT_MODE_MAND_CTS"; break;
      case MDC_VENT_MODE_PEEP_MAND_CTS: metric_str = "MDC_VENT_MODE_PEEP_MAND_CTS"; break;
      case MDC_VENT_MODE_VENT_INV_RATIO: metric_str = "MDC_VENT_MODE_VENT_INV_RATIO"; break;
      case MDC_VENT_MODE_PEEP_INV_RATIO: metric_str = "MDC_VENT_MODE_PEEP_INV_RATIO"; break;
      case MDC_VENT_MODE_MAND_INTERMIT: metric_str = "MDC_VENT_MODE_MAND_INTERMIT"; break;
      case MDC_VENT_MODE_PEEP_MAND_INTERMIT: metric_str = "MDC_VENT_MODE_PEEP_MAND_INTERMIT"; break;
      case MDC_VENT_MODE_SYNCH_MAND_INTERMIT: metric_str = "MDC_VENT_MODE_SYNCH_MAND_INTERMIT"; break;
      case MDC_VENT_MODE_SYNCH_MAND_INTERMIT_PEEP: metric_str = "MDC_VENT_MODE_SYNCH_MAND_INTERMIT_PEEP"; break;
      case MDC_VENT_MODE_INSPIR_ASSIST: metric_str = "MDC_VENT_MODE_INSPIR_ASSIST"; break;
      case MDC_VENT_MODE_PEEP_INSPIR_ASSIST: metric_str = "MDC_VENT_MODE_PEEP_INSPIR_ASSIST"; break;
      case MDC_VENT_MODE_APR: metric_str = "MDC_VENT_MODE_APR"; break;
      case MDC_VENT_MODE_APR_PEEP: metric_str = "MDC_VENT_MODE_APR_PEEP"; break;
      case MDC_VENT_MODE_PSV: metric_str = "MDC_VENT_MODE_PSV"; break;
      case MDC_VENT_MODE_PSV_PEEP: metric_str = "MDC_VENT_MODE_PSV_PEEP"; break;
      case MDC_VENT_MODE_MMV: metric_str = "MDC_VENT_MODE_MMV"; break;
      case MDC_VENT_MODE_MMV_PEEP: metric_str = "MDC_VENT_MODE_MMV_PEEP"; break;
      case MDC_VENT_MODE_PAV: metric_str = "MDC_VENT_MODE_PAV"; break;
      case MDC_VENT_MODE_PAV_PEEP: metric_str = "MDC_VENT_MODE_PAV_PEEP"; break;
      case MDC_VENT_MODE_HI_FREQ: metric_str = "MDC_VENT_MODE_HI_FREQ"; break;
      case MDC_VENT_MODE_HI_FREQ_JET: metric_str = "MDC_VENT_MODE_HI_FREQ_JET"; break;
      case MDC_VENT_MODE_HI_FREQ_OSCIL: metric_str = "MDC_VENT_MODE_HI_FREQ_OSCIL"; break;
      case MDC_VENT_MODE_ENP: metric_str = "MDC_VENT_MODE_ENP"; break;
      case MDC_DRUG_NAME_POINTER: metric_str = "drug name"; break;
      case MDC_DRUG_NAME_PRI_POINTER: metric_str = "MDC_DRUG_NAME_PRI_POINTER"; break;
      case MDC_DRUG_NAME_SEC_POINTER: metric_str = "MDC_DRUG_NAME_SEC_POINTER"; break;
      case MDC_DRUG_NAME_TYPE_PROP: metric_str = "MDC_DRUG_NAME_TYPE_PROP"; break;
      case MDC_SYRINGE_TYPE: metric_str = "MDC_SYRINGE_TYPE"; break;
      case MDC_TUBE_TYPE: metric_str = "MDC_TUBE_TYPE"; break;
      case MDC_SUBST_DILUENT: metric_str = "MDC_SUBST_DILUENT"; break;
      case MDC_PUMP_MODE: metric_str = "operational mode"; break;
      case MDC_PUMP_STAT: metric_str = "MDC_PUMP_STAT"; break;
      case MDC_PUMP_STAT_PRI: metric_str = "MDC_PUMP_STAT_PRI"; break;
      case MDC_PUMP_STAT_SEC: metric_str = "MDC_PUMP_STAT_SEC"; break;
      case MDC_STIM_CLICK: metric_str = "MDC_STIM_CLICK"; break;
      case MDC_STIM_CLICK_FILTER: metric_str = "MDC_STIM_CLICK_FILTER";
      case MDC_STIM_PIP: metric_str = "MDC_STIM_PIP"; break;
      case MDC_STIM_SINUSOID_GATE: metric_str = "MDC_STIM_SINUSOID_GATE"; break;
      case MDC_STIM_EAR_LEFT: metric_str = "MDC_STIM_EAR_LEFT"; break;
      case MDC_STIM_EAR_RIGHT: metric_str = "MDC_STIM_EAR_RIGHT"; break;
      case MDC_STIM_EAR_BOTH: metric_str = "MDC_STIM_EAR_BOTH"; break;
      case MDC_STIM_EAR_MASK_AEP_LEFT: metric_str = "MDC_STIM_EAR_MASK_AEP_LEFT"; break;
      case MDC_STIM_EAR_MASK_AEP_RIGHT: metric_str = "MDC_STIM_EAR_MASK_AEP_RIGHT"; break;
      case MDC_STIM_EAR_MASK_AEP_BOTH: metric_str = "MDC_STIM_EAR_MASK_AEP_BOTH"; break;
      case MDC_STIM_RAREFAC: metric_str = "MDC_STIM_RAREFAC"; break;
      case MDC_STIM_CONDENS: metric_str = "MDC_STIM_CONDENS"; break;
      case MDC_STIM_ALTERN: metric_str = "MDC_STIM_ALTERN"; break;
      case MDC_STIM_VIS_FLD: metric_str = "MDC_STIM_VIS_FLD"; break;
      case MDC_STIM_VIS_FLD_FULL: metric_str = "MDC_STIM_VIS_FLD_FULL"; break;
      case MDC_STIM_VIS_FLD_HALF_L: metric_str = "MDC_STIM_VIS_FLD_HALF_L"; break;
      case MDC_STIM_VIS_FLD_HALF_R: metric_str = "MDC_STIM_VIS_FLD_HALF_R"; break;
      case MDC_STIM_VIS_FLD_HALF_TOP: metric_str = "MDC_STIM_VIS_FLD_HALF_TOP"; break;
      case MDC_STIM_VIS_FLD_HALF_BOT: metric_str = "MDC_STIM_VIS_FLD_HALF_BOT"; break;
      case MDC_STIM_VIS_FLD_TOP_QUAD_L: metric_str = "MDC_STIM_VIS_FLD_TOP_QUAD_L"; break;
      case MDC_STIM_VIS_FLD_TOP_QUAD_R: metric_str = "MDC_STIM_VIS_FLD_TOP_QUAD_R"; break;
      case MDC_STIM_VIS_FLD_BOT_QUAD_L: metric_str = "MDC_STIM_VIS_FLD_BOT_QUAD_L"; break;
      case MDC_STIM_VIS_FLD_BOT_QUAD_R: metric_str = "MDC_STIM_VIS_FLD_BOT_QUAD_R"; break;
      case MDC_STIM_PATT_VEP: metric_str = "MDC_STIM_PATT_VEP"; break;
      case MDC_STIM_PATT_CHKRBRD: metric_str = "MDC_STIM_PATT_CHKRBRD"; break;
      case MDC_STIM_PATT_BAR_HORIZ: metric_str = "MDC_STIM_PATT_BAR_HORIZ"; break;
      case MDC_STIM_PATT_BAR_VERT: metric_str = "MDC_STIM_PATT_BAR_VERT"; break;
      case MDC_STIM_PATT_SINUSOID_HORIZ: metric_str = "MDC_STIM_PATT_SINUSOID_HORIZ"; break;
      case MDC_STIM_PATT_SINUSOID_VERT: metric_str = "MDC_STIM_PATT_SINUSOID_VERT"; break;
      case MDC_STIM_PATT_WINDMILL: metric_str = "MDC_STIM_PATT_WINDMILL"; break;
      case MDC_STIM_PATT_DARTBRD: metric_str = "MDC_STIM_PATT_DARTBRD"; break;
      case MDC_STIM_PATT_CMPLX: metric_str = "MDC_STIM_PATT_CMPLX"; break;
      case MDC_STIM_VEP: metric_str = "MDC_STIM_VEP"; break;
      case MDC_STIM_PATT_REVERSAL: metric_str = "MDC_STIM_PATT_REVERSAL"; break;
      case MDC_STIM_SINUSOID: metric_str = "MDC_STIM_SINUSOID"; break;
      case MDC_STIM_FLASH: metric_str = "MDC_STIM_FLASH"; break;
      case MDC_STIM_EYE_LEFT: metric_str = "MDC_STIM_EYE_LEFT"; break;
      case MDC_STIM_EYE_RIGHT: metric_str = "MDC_STIM_EYE_RIGHT"; break;
      case MDC_STIM_EYE_BOTH: metric_str = "MDC_STIM_EYE_BOTH"; break;
      case MDC_STIM_SEP_ELEC: metric_str = "MDC_STIM_SEP_ELEC"; break;
      case MDC_STIM_SEP_CURR_LIMITED: metric_str = "MDC_STIM_SEP_CURR_LIMITED"; break;
      case MDC_STIM_SEP_ELEC_VOLTAGE_DEF: metric_str = "MDC_STIM_SEP_ELEC_VOLTAGE_DEF"; break;
      case MDC_STIM_SEP_NON_ELEC: metric_str = "MDC_STIM_SEP_NON_ELEC"; break;
      case MDC_STIM_SEP_VIB: metric_str = "MDC_STIM_SEP_VIB"; break;
      case MDC_STIM_SEP_TEMP: metric_str = "MDC_STIM_SEP_TEMP"; break;
      case MDC_STIM_UNILAT_L: metric_str = "MDC_STIM_UNILAT_L"; break;
      case MDC_STIM_UNILAT_R: metric_str = "MDC_STIM_UNILAT_R"; break;
      case MDC_STIM_BILAT: metric_str = "MDC_STIM_BILAT"; break;
      case MDC_STIM_MEP_MAG: metric_str = "MDC_STIM_MEP_MAG"; break;
      case MDC_STIM_MEP_HI_VOLT: metric_str = "MDC_STIM_MEP_HI_VOLT"; break;
      case MDC_TEMP_RECT: metric_str = "KKT"; break;
      case MDC_TEMP_ORAL: metric_str = "T"; break;
      case MDC_TEMP_EAR: metric_str = "T"; break;
      case MDC_TEMP_FINGER: metric_str = "T"; break;
      case MDC_TEMP_BLD: metric_str = "T"; break;
      case MDC_TEMP_DIFF: metric_str = "Tdiff"; break;
      case MDC_TEMP_SURF_MEAN: metric_str = "MDC_TEMP_SURF_MEAN"; break;
      case MDC_TEMP_TOE: metric_str = "MDC_TEMP_TOE"; break;
      case MDC_CONC_GASTRIC_ACID: metric_str = "PH"; break;
      case MDC_CONC_ESOPH_ACID: metric_str = "PH"; break;
      case MDC_PRESS_GI: metric_str = "Pgast"; break;
      case MDC_BCG_SIG_BODY: metric_str = "BCG"; break;
      case MDC_BCG_BREATHING: metric_str = "BCG-R"; break;
      case MDC_BCG_CARD_CYC: metric_str = "BCG-C"; break;
      case MDC_BCG_MVMT: metric_str = "BCG-M"; break;
      case MDC_EGG_ELEC_POTL_GI: metric_str = "EGG"; break;
      case MDC_MCG_MAGFLD: metric_str = "MCG"; break;
      case MDC_FLOW_BLD_DOPPLER: metric_str = "MDC_FLOW_BLD_DOPPLER"; break;
      case MDC_ETG_OBST: metric_str = "MDC_ETG_OBST"; break;
      case MDC_MASS_BODY_ACTUAL: metric_str = "MDC_MASS_BODY_ACTUAL"; break;
      case MDC_LEN_BODY_ACTUAL: metric_str = "MDC_LEN_BODY_ACTUAL"; break;
      case MDC_AREA_BODY_SURF_ACTUAL: metric_str = "MDC_AREA_BODY_SURF_ACTUAL"; break;
      case MDC_METRIC_NOS: metric_str = "MDC_METRIC_NOS"; break;

      case MDC_ECG_AMPL_ST_INDEX: metric_str = "MDC_ECG_AMPL_ST_INDEX"; break;
      case MDC_ECG_TIME_PD_QTc_DELTA: metric_str = "MDC_ECG_TIME_PD_QTc_DELTA"; break;
      case MDC_ECG_TIME_PD_QT_HEART_RATE: metric_str = "MDC_ECG_TIME_PD_QT_HEART_RATE"; break;
      case MDC_ECG_TIME_PD_QT_BASELINE: metric_str = "MDC_ECG_TIME_PD_QT_BASELINE"; break;
      case MDC_ECG_TIME_PD_QT_BASELINE_HEART_RATE: metric_str = "MDC_ECG_TIME_PD_QT_BASELINE_HEART_RATE"; break;
      case MDC_PULS_OXIM_SAT_O2_PRE_DUCTAL: metric_str = "MDC_PULS_OXIM_SAT_O2_PRE_DUCTAL"; break;
      case MDC_PULS_OXIM_SAT_O2_POST_DUCTAL: metric_str = "MDC_PULS_OXIM_SAT_O2_POST_DUCTAL"; break;
      case MDC_PULS_OXIM_SAT_O2_TELE: metric_str = "MDC_PULS_OXIM_SAT_O2_TELE"; break;
      case MDC_PULS_OXIM_PULS_RATE_TELE: metric_str = "MDC_PULS_OXIM_PULS_RATE_TELE"; break;
      case MDC_PULS_OXIM_PERF_REL_PRE_DUCTAL: metric_str = "MDC_PULS_OXIM_PERF_REL_PRE_DUCTAL"; break;
      case MDC_PULS_OXIM_PERF_REL_POST_DUCTAL: metric_str = "MDC_PULS_OXIM_PERF_REL_POST_DUCTAL"; break;
      case MDC_PULS_OXIM_PERF_REL_TELE: metric_str = "MDC_PULS_OXIM_PERF_REL_TELE"; break;
      case MDC_PULS_OXIM_PERF_REL_RIGHT: metric_str = "MDC_PULS_OXIM_PERF_REL_RIGHT"; break;
      case MDC_PULS_OXIM_PERF_REL_LEFT: metric_str = "MDC_PULS_OXIM_PERF_REL_LEFT"; break;
      case MDC_PRESS_BLD_NONINV_PULS_RATE: metric_str = "MDC_PRESS_BLD_NONINV_PULS_RATE"; break;
      case MDC_PRESS_BLD_ART_FEMORAL_SYS: metric_str = "MDC_PRESS_BLD_ART_FEMORAL_SYS"; break;
      case MDC_PRESS_BLD_ART_FEMORAL_DIA: metric_str = "MDC_PRESS_BLD_ART_FEMORAL_DIA"; break;
      case MDC_PRESS_BLD_ART_FEMORAL_MEAN: metric_str = "MDC_PRESS_BLD_ART_FEMORAL_MEAN"; break;
      case MDC_PRESS_BLD_ART_BRACHIAL_SYS: metric_str = "MDC_PRESS_BLD_ART_BRACHIAL_SYS"; break;
      case MDC_PRESS_BLD_ART_BRACHIAL_DIA: metric_str = "MDC_PRESS_BLD_ART_BRACHIAL_DIA"; break;
      case MDC_PRESS_BLD_ART_BRACHIAL_MEAN: metric_str = "MDC_PRESS_BLD_ART_BRACHIAL_MEAN"; break;
      case MDC_PRESS_INTRA_CRAN_1_DIA: metric_str = "MDC_PRESS_INTRA_CRAN_1_DIA"; break;
      case MDC_PRESS_INTRA_CRAN_1_SYS: metric_str = "MDC_PRESS_INTRA_CRAN_1_SYS"; break;
      case MDC_PRESS_INTRA_CRAN_1_MEAN: metric_str = "MDC_PRESS_INTRA_CRAN_1_MEAN"; break;
      case MDC_PRESS_INTRA_CRAN_2_SYS: metric_str = "MDC_PRESS_INTRA_CRAN_2_SYS"; break;
      case MDC_PRESS_INTRA_CRAN_2_DIA: metric_str = "MDC_PRESS_INTRA_CRAN_2_DIA"; break;
      case MDC_PRESS_INTRA_CRAN_2_MEAN: metric_str = "MDC_PRESS_INTRA_CRAN_2_MEAN"; break;
      case MDC_PRESS_GEN_1: metric_str = "MDC_PRESS_GEN_1"; break;
      case MDC_PRESS_GEN_1_SYS: metric_str = "MDC_PRESS_GEN_1_SYS"; break;
      case MDC_PRESS_GEN_1_DIA: metric_str = "MDC_PRESS_GEN_1_DIA"; break;
      case MDC_PRESS_GEN_1_MEAN: metric_str = "MDC_PRESS_GEN_1_MEAN"; break;
      case MDC_PRESS_GEN_2: metric_str = "MDC_PRESS_GEN_2"; break;
      case MDC_PRESS_GEN_2_SYS: metric_str = "MDC_PRESS_GEN_2_SYS"; break;
      case MDC_PRESS_GEN_2_DIA: metric_str = "MDC_PRESS_GEN_2_DIA"; break;
      case MDC_PRESS_GEN_2_MEAN: metric_str = "MDC_PRESS_GEN_2_MEAN"; break;
      case MDC_PRESS_GEN_3: metric_str = "MDC_PRESS_GEN_3"; break;
      case MDC_PRESS_GEN_3_SYS: metric_str = "MDC_PRESS_GEN_3_SYS"; break;
      case MDC_PRESS_GEN_3_MEAN: metric_str = "MDC_PRESS_GEN_3_MEAN"; break;
      case MDC_PRESS_GEN_4: metric_str = "MDC_PRESS_GEN_4"; break;
      case MDC_PRESS_GEN_4_SYS: metric_str = "MDC_PRESS_GEN_4_SYS"; break;
      case MDC_PRESS_GEN_4_DIA: metric_str = "MDC_PRESS_GEN_4_DIA"; break;
      case MDC_PRESS_GEN_4_MEAN: metric_str = "MDC_PRESS_GEN_4_MEAN"; break;
      case MDC_PULS_PRESS_VAR: metric_str = "MDC_PULS_PRESS_VAR"; break;
      case MDC_OUTPUT_CARD_INDEX_CTS: metric_str = "MDC_OUTPUT_CARD_INDEX_CTS"; break;
      case MDC_VOL_BLD_STROKE_INDEX: metric_str = "MDC_VOL_BLD_STROKE_INDEX"; break;
      case MDC_VOL_BLD_STROKE_VAR: metric_str = "MDC_VOL_BLD_STROKE_VAR"; break;
      case MDC_VOL_BLD_INTRA_THOR: metric_str = "MDC_VOL_BLD_INTRA_THOR"; break;
      case MDC_VOL_BLD_INTRA_THOR_INDEX: metric_str = "MDC_VOL_BLD_INTRA_THOR_INDEX"; break;
      case MDC_VOL_LUNG_WATER_EXTRA_VASC: metric_str = "MDC_VOL_LUNG_WATER_EXTRA_VASC"; break;
      case MDC_VOL_LUNG_WATER_EXTRA_VASC_INDEX: metric_str = "MDC_VOL_LUNG_WATER_EXTRA_VASC_INDEX"; break;
      case MDC_VOL_GLOBAL_END_DIA: metric_str = "MDC_VOL_GLOBAL_END_DIA"; break;
      case MDC_VOL_GLOBAL_END_DIA_INDEX: metric_str = "MDC_VOL_GLOBAL_END_DIA_INDEX"; break;
      case MDC_CARD_FUNC_INDEX: metric_str = "MDC_CARD_FUNC_INDEX"; break;
      case MDC_PERM_VASC_PULM_INDEX: metric_str = "MDC_PERM_VASC_PULM_INDEX"; break;
      case MDC_FRACT_EJECT: metric_str = "MDC_FRACT_EJECT"; break;
      case MDC_SNR: metric_str = "MDC_SNR"; break;
      case MDC_SHUNT_RIGHT_LEFT: metric_str = "MDC_SHUNT_RIGHT_LEFT"; break;
      case MDC_SAT_O2_VEN_CENT: metric_str = "MDC_SAT_O2_VEN_CENT"; break;
      case MDC_SAT_O2_GEN_1: metric_str = "MDC_SAT_O2_GEN_1"; break;
      case MDC_SAT_O2_GEN_2: metric_str = "MDC_SAT_O2_GEN_2"; break;
      case MDC_SAT_O2_GEN_3: metric_str = "MDC_SAT_O2_GEN_3"; break;
      case MDC_SAT_O2_GEN_4: metric_str = "MDC_SAT_O2_GEN_4"; break;
      case MDC_INTENS_LIGHT: metric_str = "MDC_INTENS_LIGHT"; break;
      case MDC_SAT_O2_DELIVER: metric_str = "MDC_SAT_O2_DELIVER"; break;
      case MDC_SAT_O2_DELIVER_INDEX: metric_str = "MDC_SAT_O2_DELIVER_INDEX"; break;
      case MDC_RATIO_SAT_O2_CONSUMP_DELIVER: metric_str = "MDC_RATIO_SAT_O2_CONSUMP_DELIVER"; break;
      case MDC_RATIO_ART_VEN_SHUNT: metric_str = "MDC_RATIO_ART_VEN_SHUNT"; break;
      case MDC_SAT_DIFF_O2_ART_VEN: metric_str = "MDC_SAT_DIFF_O2_ART_VEN"; break;
      case MDC_GAS_TCUT: metric_str = "MDC_GAS_TCUT"; break;
      case MDC_TIME_TCUT_SENSOR: metric_str = "MDC_TIME_TCUT_SENSOR"; break;
      case MDC_TEMP_TCUT_SENSOR: metric_str = "MDC_TEMP_TCUT_SENSOR"; break;
      case MDC_HEATING_PWR_TCUT_SENSOR: metric_str = "MDC_HEATING_PWR_TCUT_SENSOR"; break;
      case MDC_AWAY_RESP_RATE_SPIRO: metric_str = "MDC_AWAY_RESP_RATE_SPIRO"; break;
      case MDC_FLOW_CO2_PROD_RESP_TIDAL: metric_str = "MDC_FLOW_CO2_PROD_RESP_TIDAL"; break;
      case MDC_VOL_AWAY_EXP_TIDAL: metric_str = "MDC_VOL_AWAY_EXP_TIDAL"; break;
      case MDC_VOL_AWAY_INSP_TIDAL: metric_str = "MDC_VOL_AWAY_INSP_TIDAL"; break;
      case MDC_TIME_PD_RESP_PLAT: metric_str = "MDC_TIME_PD_RESP_PLAT"; break;
      case MDC_VENT_VOL_MINUTE_AWAY_SPONT: metric_str = "MDC_VENT_VOL_MINUTE_AWAY_SPONT"; break;
      case MDC_EEG_BISPECTRAL_INDEX: metric_str = "MDC_EEG_BISPECTRAL_INDEX"; break;
      case MDC_EEG_BIS_SIG_QUAL_INDEX: metric_str = "MDC_EEG_BIS_SIG_QUAL_INDEX"; break;
      case MDC_EEG_RATIO_SUPPRN: metric_str = "MDC_EEG_RATIO_SUPPRN"; break;
      case MDC_ELEC_EVOK_POTL_CRTX_ACOUSTIC_AAI: metric_str = "MDC_ELEC_EVOK_POTL_CRTX_ACOUSTIC_AAI"; break;
      case MDC_EEG_BURST_SUPPRN_INDEX: metric_str = "MDC_EEG_BURST_SUPPRN_INDEX"; break;
      case MDC_TEMP_VESICAL: metric_str = "MDC_TEMP_VESICAL"; break;
      case MDC_TEMP_CEREBRAL: metric_str = "MDC_TEMP_CEREBRAL"; break;
      case MDC_TEMP_AMBIENT: metric_str = "MDC_TEMP_AMBIENT"; break;
      case MDC_TEMP_CORE_GEN_1: metric_str = "MDC_TEMP_CORE_GEN_1"; break;
      case MDC_TEMP_CORE_GEN_2: metric_str = "MDC_TEMP_CORE_GEN_2"; break;
      case MDC_TEMP_RECT_PRED: metric_str = "MDC_TEMP_RECT_PRED"; break;
      case MDC_TEMP_ORAL_PRED: metric_str = "MDC_TEMP_ORAL_PRED"; break;
      case MDC_TEMP_AXIL_PRED: metric_str = "MDC_TEMP_AXIL_PRED"; break;
      case MDC_TEMP_GEN_1: metric_str = "MDC_TEMP_GEN_1"; break;
      case MDC_TEMP_GEN_2: metric_str = "MDC_TEMP_GEN_2"; break;
      case MDC_TEMP_GEN_3: metric_str = "MDC_TEMP_GEN_3"; break;
      case MDC_TEMP_GEN_4: metric_str = "MDC_TEMP_GEN_4"; break;
      case MDC_CONC_AWAY_MAC: metric_str = "MDC_CONC_AWAY_MAC"; break;
      case MDC_CONC_AWAY_SUM_MAC_ET: metric_str = "MDC_CONC_AWAY_SUM_MAC_ET"; break;
      case MDC_CONC_AWAY_SUM_MAC_INSP: metric_str = "MDC_CONC_AWAY_SUM_MAC_INSP"; break;
      case MDC_RES_VASC_PULM_INDEX: metric_str = "MDC_RES_VASC_PULM_INDEX"; break;
      case MDC_WK_CARD_LEFT_INDEX: metric_str = "MDC_WK_CARD_LEFT_INDEX"; break;
      case MDC_WK_CARD_RIGHT_INDEX: metric_str = "MDC_WK_CARD_RIGHT_INDEX"; break;
      case MDC_SAT_O2_CONSUMP_INDEX: metric_str = "MDC_SAT_O2_CONSUMP_INDEX"; break;
      case MDC_PRESS_AIR_AMBIENT: metric_str = "MDC_PRESS_AIR_AMBIENT"; break;
      case MDC_VOL_INJ: metric_str = "MDC_VOL_INJ"; break;
      case MDC_VOL_THERMO_EXTRA_VASC_INDEX: metric_str = "MDC_VOL_THERMO_EXTRA_VASC_INDEX"; break;
      case MDC_CONC_BLD_UREA_NITROGEN: metric_str = "MDC_CONC_BLD_UREA_NITROGEN"; break;
      case MDC_CONC_BASE_EXCESS_ECF: metric_str = "MDC_CONC_BASE_EXCESS_ECF"; break;
      case MDC_CONC_DIFF_HB_O2_ATR_VEN: metric_str = "MDC_CONC_DIFF_HB_O2_ATR_VEN"; break;
      case MDC_NUM_CATHETER_CONST: metric_str = "MDC_NUM_CATHETER_CONST"; break;
      case MDC_AREA_BODY_SURFACE: metric_str = "MDC_AREA_BODY_SURFACE"; break;
      case MDC_PAT_WEIGHT: metric_str = "MDC_PAT_WEIGHT"; break;
      case MDC_PAT_HEIGHT: metric_str = "MDC_PAT_HEIGHT"; break;
      case MDC_PRESS_GEN_5: metric_str = "MDC_PRESS_GEN_5"; break;
      case MDC_PRESS_GEN_5_SYS: metric_str = "MDC_PRESS_GEN_5_SYS"; break;
      case MDC_PRESS_GEN_5_DIA: metric_str = "MDC_PRESS_GEN_5_DIA"; break;
      case MDC_PRESS_GEN_5_MEAN: metric_str = "MDC_PRESS_GEN_5_MEAN"; break;
      case MDC_PRESS_GEN_6: metric_str = "MDC_PRESS_GEN_6"; break;
      case MDC_PRESS_GEN_6_SYS: metric_str = "MDC_PRESS_GEN_6_SYS"; break;
      case MDC_PRESS_GEN_6_DIA: metric_str = "MDC_PRESS_GEN_6_DIA"; break;
      case MDC_PRESS_GEN_6_MEAN: metric_str = "MDC_PRESS_GEN_6_MEAN"; break;
      case MDC_PRESS_GEN_7: metric_str = "MDC_PRESS_GEN_7"; break;
      case MDC_PRESS_GEN_7_SYS: metric_str = "MDC_PRESS_GEN_7_SYS"; break;
      case MDC_PRESS_GEN_7_MEAN: metric_str = "MDC_PRESS_GEN_7_MEAN"; break;
      case MDC_PRESS_GEN_8: metric_str = "MDC_PRESS_GEN_8"; break;
      case MDC_PRESS_GEN_8_SYS: metric_str = "MDC_PRESS_GEN_8_SYS"; break;
      case MDC_PRESS_GEN_8_DIA: metric_str = "MDC_PRESS_GEN_8_DIA"; break;
      case MDC_PRESS_GEN_8_MEAN: metric_str = "MDC_PRESS_GEN_8_MEAN"; break;
      case MDC_RATIO_BUN_CREA: metric_str = "MDC_RATIO_BUN_CREA"; break;
      case MDC_VOL_FLUID_THORAC: metric_str = "MDC_VOL_FLUID_THORAC"; break;
      case MDC_VOL_FLUID_THORAC_INDEX: metric_str = "MDC_VOL_FLUID_THORAC_INDEX"; break;
      case MDC_OUTPUT_CARD_INDEX_ACCEL: metric_str = "MDC_OUTPUT_CARD_INDEX_ACCEL"; break;
      case MDC_CARD_CONTRACT_HEATHER_INDEX: metric_str = "MDC_CARD_CONTRACT_HEATHER_INDEX"; break;
      case MDC_FREE_WATER_CLR: metric_str = "MDC_FREE_WATER_CLR"; break;
      case MDC_CREA_OSM: metric_str = "MDC_CREA_OSM"; break;
      case MDC_CONC_CREA_CLR: metric_str = "MDC_CONC_CREA_CLR"; break;
      case MDC_FRACT_EXCR_NA: metric_str = "MDC_FRACT_EXCR_NA"; break;
      case MDC_PLASMA_OSM: metric_str = "MDC_PLASMA_OSM"; break;
      case MDC_CONC_CREA_SER: metric_str = "MDC_CONC_CREA_SER"; break;
      case MDC_RATIO_URINE_SER_OSM: metric_str = "MDC_RATIO_URINE_SER_OSM"; break;
      case MDC_RATIO_CONC_URINE_CREA_SER: metric_str = "MDC_RATIO_CONC_URINE_CREA_SER"; break;
      case MDC_CONC_CREA_URINE: metric_str = "MDC_CONC_CREA_URINE"; break;
      case MDC_CONC_K_URINE_EXCR: metric_str = "MDC_CONC_K_URINE_EXCR"; break;
      case MDC_RATIO_CONC_URINE_NA_K: metric_str = "MDC_RATIO_CONC_URINE_NA_K"; break;
      case MDC_CONC_NA_EXCR: metric_str = "MDC_CONC_NA_EXCR"; break;
      case MDC_CONC_OSM_URINE: metric_str = "MDC_CONC_OSM_URINE"; break;
      case MDC_NSLOSS: metric_str = "MDC_NSLOSS"; break;
      case MDC_BIRTH_LENGTH: metric_str = "MDC_BIRTH_LENGTH"; break;
      case MDC_AGE_GEST: metric_str = "MDC_AGE_GEST"; break;
      case MDC_VENT_PRESS_AWAY_PV: metric_str = "MDC_VENT_PRESS_AWAY_PV"; break;
      case MDC_RES_AWAY_DYN: metric_str = "MDC_RES_AWAY_DYN"; break;
      case MDC_FLOW_AWAY_MAX_SPONT: metric_str = "MDC_FLOW_AWAY_MAX_SPONT"; break;
      case MDC_AWAY_RESP_RATE_SPONT: metric_str = "MDC_AWAY_RESP_RATE_SPONT"; break;
      case MDC_PULS_OXIM_PLETH_GAIN: metric_str = "MDC_PULS_OXIM_PLETH_GAIN"; break;
      case MDC_EXTRACT_O2_INDEX: metric_str = "MDC_EXTRACT_O2_INDEX"; break;
      case MDC_RIGHT_HEART_FRACT_EJECT: metric_str = "MDC_RIGHT_HEART_FRACT_EJECT"; break;
      case MDC_VOL_VENT_L_END_SYS_INDEX: metric_str = "MDC_VOL_VENT_L_END_SYS_INDEX"; break;
      case MDC_VENT_TIME_PD_RAMP: metric_str = "MDC_VENT_TIME_PD_RAMP"; break;
      case MDC_VENT_AMPL_HFV: metric_str = "MDC_VENT_AMPL_HFV"; break;
      case MDC_CONC_CO2_TOT: metric_str = "MDC_CONC_CO2_TOT"; break;
      case MDC_CONC_BILI_TOT: metric_str = "MDC_CONC_BILI_TOT"; break;
      case MDC_CONC_GLU_SER: metric_str = "MDC_CONC_GLU_SER"; break;
      case MDC_CONC_BILI_DIRECT: metric_str = "MDC_CONC_BILI_DIRECT"; break;
      case MDC_CONC_CA_SER: metric_str = "MDC_CONC_CA_SER"; break;
      case MDC_CONC_tCA_SER: metric_str = "MDC_CONC_tCA_SER"; break;
      case MDC_CONC_MG_SER: metric_str = "MDC_CONC_MG_SER"; break;
      case MDC_CONC_P_SER: metric_str = "MDC_CONC_P_SER"; break;
      case MDC_CONC_K_SER: metric_str = "MDC_CONC_K_SER"; break;
      case MDC_CONC_CHLOR_SER: metric_str = "MDC_CONC_CHLOR_SER"; break;
      case MDC_CONC_ALB_SER: metric_str = "MDC_CONC_ALB_SER"; break;
      case MDC_CONC_CHLOR_URINE: metric_str = "MDC_CONC_CHLOR_URINE"; break;
      case MDC_CONC_GLO_SER: metric_str = "MDC_CONC_GLO_SER"; break;
      case MDC_CONC_PROT_SER: metric_str = "MDC_CONC_PROT_SER"; break;
      case MDC_UREA_SER: metric_str = "MDC_UREA_SER"; break;
      case MDC_WB_CNT: metric_str = "MDC_WB_CNT"; break;
      case MDC_RB_CNT: metric_str = "MDC_RB_CNT"; break;
      case MDC_PLTS_CNT: metric_str = "MDC_PLTS_CNT"; break;
      case MDC_VOL_CORP_MEAN: metric_str = "MDC_VOL_CORP_MEAN"; break;
      case MDC_HB_CORP_MEAN: metric_str = "MDC_HB_CORP_MEAN"; break;
      case MDC_CONC_HB_CORP_MEAN: metric_str = "MDC_CONC_HB_CORP_MEAN"; break;
      case MDC_TIME_PD_PTT: metric_str = "MDC_TIME_PD_PTT"; break;
      case MDC_TIME_PD_PT: metric_str = "MDC_TIME_PD_PT"; break;
      case MDC_TIME_PD_THROMBIN: metric_str = "MDC_TIME_PD_THROMBIN"; break;
      case MDC_CONC_AP: metric_str = "MDC_CONC_AP"; break;
      case MDC_CONC_ALPHA_AMYLASE: metric_str = "MDC_CONC_ALPHA_AMYLASE"; break;
      case MDC_CONC_CHE: metric_str = "MDC_CONC_CHE"; break;
      case MDC_CONC_CREA_KIN_SER: metric_str = "MDC_CONC_CREA_KIN_SER"; break;
      case MDC_CONC_CREA_KIN_MB: metric_str = "MDC_CONC_CREA_KIN_MB"; break;
      case MDC_CONC_CREA_KIN_MM: metric_str = "MDC_CONC_CREA_KIN_MM"; break;
      case MDC_CONC_GGT: metric_str = "MDC_CONC_GGT"; break;
      case MDC_CONC_GOT: metric_str = "MDC_CONC_GOT"; break;
      case MDC_CONC_GPT: metric_str = "MDC_CONC_GPT"; break;
      case MDC_CONC_FE_GEN: metric_str = "MDC_CONC_FE_GEN"; break;
      case MDC_CONC_CHOLESTEROL: metric_str = "MDC_CONC_CHOLESTEROL"; break;
      case MDC_CONC_TGL: metric_str = "MDC_CONC_TGL"; break;
      case MDC_CONC_PRO_URINE: metric_str = "MDC_CONC_PRO_URINE"; break;
      case MDC_CONC_HB_FETAL: metric_str = "MDC_CONC_HB_FETAL"; break;
      case MDC_CONC_PROT_TOT: metric_str = "MDC_CONC_PROT_TOT"; break;
      case MDC_CONC_LDH: metric_str = "MDC_CONC_LDH"; break;
      case MDC_CONC_AST: metric_str = "MDC_CONC_AST"; break;
      case MDC_CONC_ALP: metric_str = "MDC_CONC_ALP"; break;
      case MDC_RET_CNT: metric_str = "MDC_RET_CNT"; break;
      case MDC_TIME_PD_COAGULATION: metric_str = "MDC_TIME_PD_COAGULATION"; break;
      case MDC_ES_RATE: metric_str = "MDC_ES_RATE"; break;
      case MDC_TIME_PD_KAOLIN_CEPHALINE: metric_str = "MDC_TIME_PD_KAOLIN_CEPHALINE"; break;
      case MDC_TIME_PD_EXP: metric_str = "MDC_TIME_PD_EXP"; break;
      case MDC_FLOW_AWAY_EXP_ET: metric_str = "MDC_FLOW_AWAY_EXP_ET"; break;
      case MDC_VENT_CONC_AWAY_N2O_DELTA: metric_str = "MDC_VENT_CONC_AWAY_N2O_DELTA"; break;
      case MDC_VENT_CONC_AWAY_HALOTH_DELTA: metric_str = "MDC_VENT_CONC_AWAY_HALOTH_DELTA"; break;
      case MDC_VENT_CONC_AWAY_ENFL_DELTA: metric_str = "MDC_VENT_CONC_AWAY_ENFL_DELTA"; break;
      case MDC_VENT_CONC_AWAY_ISOFL_DELTA: metric_str = "MDC_VENT_CONC_AWAY_ISOFL_DELTA"; break;
      case MDC_VENT_CONC_AWAY_SEVOFL_DELTA: metric_str = "MDC_VENT_CONC_AWAY_SEVOFL_DELTA"; break;
      case MDC_VENT_CONC_AWAY_DESFL_DELTA: metric_str = "MDC_VENT_CONC_AWAY_DESFL_DELTA"; break;
      case MDC_VENT_CONC_AWAY_AGENT_DELTA: metric_str = "MDC_VENT_CONC_AWAY_AGENT_DELTA"; break;
      case MDC_VENT_CONC_AWAY_O2_CIRCUIT: metric_str = "MDC_VENT_CONC_AWAY_O2_CIRCUIT"; break;
      case MDC_VOL_MINUTE_AWAY_INSP_HFV: metric_str = "MDC_VOL_MINUTE_AWAY_INSP_HFV"; break;
      case MDC_VOL_AWAY_EXP_TIDAL_SPONT: metric_str = "MDC_VOL_AWAY_EXP_TIDAL_SPONT"; break;
      case MDC_VENT_VOL_TIDAL_SPONT: metric_str = "MDC_VENT_VOL_TIDAL_SPONT"; break;
      case MDC_VENT_VOL_TIDAL_MAND: metric_str = "MDC_VENT_VOL_TIDAL_MAND"; break;
      case MDC_VENT_VOL_AWAY_INSP_TIDAL_HFV: metric_str = "MDC_VENT_VOL_AWAY_INSP_TIDAL_HFV"; break;
      case MDC_VENT_VOL_TIDAL_HFV: metric_str = "MDC_VENT_VOL_TIDAL_HFV"; break;
      case MDC_ECG_AMPL_ST_BASELINE_I: metric_str = "MDC_ECG_AMPL_ST_BASELINE_I"; break;
      case MDC_ECG_AMPL_ST_BASELINE_II: metric_str = "MDC_ECG_AMPL_ST_BASELINE_II"; break;
      case MDC_ECG_AMPL_ST_BASELINE_III: metric_str = "MDC_ECG_AMPL_ST_BASELINE_III"; break;
      case MDC_ECG_AMPL_ST_BASELINE_AVR: metric_str = "MDC_ECG_AMPL_ST_BASELINE_AVR"; break;
      case MDC_ECG_AMPL_ST_BASELINE_AVL: metric_str = "MDC_ECG_AMPL_ST_BASELINE_AVL"; break;
      case MDC_ECG_AMPL_ST_BASELINE_AVF: metric_str = "MDC_ECG_AMPL_ST_BASELINE_AVF"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V1: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V1"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V2: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V2"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V3: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V3"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V4: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V4"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V5: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V5"; break;
      case MDC_ECG_AMPL_ST_BASELINE_V6: metric_str = "MDC_ECG_AMPL_ST_BASELINE_V6"; break;
      case MDC_EEG_PWR_SPEC_ALPHA_ABS_LEFT: metric_str = "MDC_EEG_PWR_SPEC_ALPHA_ABS_LEFT"; break;
      case MDC_EEG_PWR_SPEC_BETA_ABS_LEFT: metric_str = "MDC_EEG_PWR_SPEC_BETA_ABS_LEFT"; break;
      case MDC_EEG_PWR_SPEC_DELTA_ABS_LEFT: metric_str = "MDC_EEG_PWR_SPEC_DELTA_ABS_LEFT"; break;
      case MDC_EEG_PWR_SPEC_THETA_ABS_LEFT: metric_str = "MDC_EEG_PWR_SPEC_THETA_ABS_LEFT"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN_LEFT: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN_LEFT"; break;
      case MDC_EEG_ELEC_POTL_CRTX_GAIN_LEFT: metric_str = "MDC_EEG_ELEC_POTL_CRTX_GAIN_LEFT"; break;
      case MDC_EEG_PWR_SPEC_ALPHA_ABS_RIGHT: metric_str = "MDC_EEG_PWR_SPEC_ALPHA_ABS_RIGHT"; break;
      case MDC_EEG_PWR_SPEC_BETA_ABS_RIGHT: metric_str = "MDC_EEG_PWR_SPEC_BETA_ABS_RIGHT"; break;
      case MDC_EEG_PWR_SPEC_DELTA_ABS_RIGHT: metric_str = "MDC_EEG_PWR_SPEC_DELTA_ABS_RIGHT"; break;
      case MDC_EEG_PWR_SPEC_THETA_ABS_RIGHT: metric_str = "MDC_EEG_PWR_SPEC_THETA_ABS_RIGHT"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN_RIGHT: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_MEDIAN_RIGHT"; break;
      case MDC_EEG_ELEC_POTL_CRTX_GAIN_RIGHT: metric_str = "MDC_EEG_ELEC_POTL_CRTX_GAIN_RIGHT"; break;
      case MDC_RESP_BREATH_ASSIST_CNT: metric_str = "MDC_RESP_BREATH_ASSIST_CNT"; break;
      case MDC_FLOW_AWAY_AIR: metric_str = "MDC_FLOW_AWAY_AIR"; break;
      case MDC_FLOW_AWAY_TOT: metric_str = "MDC_FLOW_AWAY_TOT"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_AGENT: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_AGENT"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_ISOFL: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_ISOFL"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_ENFL: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_ENFL"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_HALOTH: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_HALOTH"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_DESFL: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_DESFL"; break;
      case MDC_VOL_LVL_LIQUID_BOTTLE_SEVOFL: metric_str = "MDC_VOL_LVL_LIQUID_BOTTLE_SEVOFL"; break;
      case MDC_VOL_URINE_SHIFT: metric_str = "MDC_VOL_URINE_SHIFT"; break;
      case MDC_CONC_PH_CAP: metric_str = "MDC_CONC_PH_CAP"; break;
      case MDC_CONC_PH_GEN_ADJ: metric_str = "MDC_CONC_PH_GEN_ADJ"; break;
      case MDC_CONC_PH_CAP_ADJ: metric_str = "MDC_CONC_PH_CAP_ADJ"; break;
      case MDC_CONC_PO2_CAP: metric_str = "MDC_CONC_PO2_CAP"; break;
      case MDC_CONC_PO2_ART_ADJ: metric_str = "MDC_CONC_PO2_ART_ADJ"; break;
      case MDC_CONC_PO2_CAP_ADJ: metric_str = "MDC_CONC_PO2_CAP_ADJ"; break;
      case MDC_CONC_PCO2_CAP: metric_str = "MDC_CONC_PCO2_CAP"; break;
      case MDC_CONC_PCO2_ART_ADJ: metric_str = "MDC_CONC_PCO2_ART_ADJ"; break;
      case MDC_CONC_PCO2_CAP_ADJ: metric_str = "MDC_CONC_PCO2_CAP_ADJ"; break;
      case MDC_CONC_CO2_TOT_CALC: metric_str = "MDC_CONC_CO2_TOT_CALC"; break;
      case MDC_SAT_O2_ART_CALC: metric_str = "MDC_SAT_O2_ART_CALC"; break;
      case MDC_SAT_O2_CAP_CALC: metric_str = "MDC_SAT_O2_CAP_CALC"; break;
      case MDC_CONC_AN_GAP_CALC: metric_str = "MDC_CONC_AN_GAP_CALC"; break;
      case MDC_CONC_MG_ION: metric_str = "MDC_CONC_MG_ION"; break;
      case MDC_CONC_CREA: metric_str = "MDC_CONC_CREA"; break;
      case MDC_RATIO_CONC_BLD_UREA_NITROGEN_CREA_CALC: metric_str = "MDC_RATIO_CONC_BLD_UREA_NITROGEN_CREA_CALC"; break;
      case MDC_RATIO_CONC_URINE_CREA_CALC: metric_str = "MDC_RATIO_CONC_URINE_CREA_CALC"; break;
      case MDC_CONC_LACT: metric_str = "MDC_CONC_LACT"; break;
      case MDC_TIME_PD_FROM_LAST_MSMT: metric_str = "MDC_TIME_PD_FROM_LAST_MSMT"; break;
      case MDC_TEMP_AIR_INCUB: metric_str = "MDC_TEMP_AIR_INCUB"; break;
      case MDC_HUMID: metric_str = "MDC_HUMID"; break;
      case MDC_HEATING_PWR_INCUBATOR: metric_str = "MDC_HEATING_PWR_INCUBATOR"; break;
      case MDC_WEIGHT_URINE_COL: metric_str = "MDC_WEIGHT_URINE_COL"; break;
      case MDC_VOL_URINE_BAL_PD_INSTANT: metric_str = "MDC_VOL_URINE_BAL_PD_INSTANT"; break;
      case MDC_FLUID_DENS_URINE: metric_str = "MDC_FLUID_DENS_URINE"; break;
      case MDC_AGE: metric_str = "MDC_AGE"; break;
      case MDC_FLOW_URINE_PREV_24HR: metric_str = "MDC_FLOW_URINE_PREV_24HR"; break;
      case MDC_VENT_ACTIVE: metric_str = "MDC_VENT_ACTIVE"; break;
      case MDC_RATIO_PaO2_FIO2: metric_str = "MDC_RATIO_PaO2_FIO2"; break;
      case MDC_RESP_RATE_SPONT: metric_str = "MDC_RESP_RATE_SPONT"; break;
      case MDC_VENT_RESP_RATE_MAND: metric_str = "MDC_VENT_RESP_RATE_MAND"; break;
      case MDC_TRAIN_OF_FOUR_CNT: metric_str = "MDC_TRAIN_OF_FOUR_CNT"; break;
      case MDC_RATIO_TRAIN_OF_FOUR: metric_str = "MDC_RATIO_TRAIN_OF_FOUR"; break;
      case MDC_TWITCH_AMPL: metric_str = "MDC_TWITCH_AMPL"; break;
      case MDC_PTC_CNT: metric_str = "MDC_PTC_CNT"; break;
      case MDC_TIME_PD_EVOK_REMAIN: metric_str = "MDC_TIME_PD_EVOK_REMAIN"; break;
      case MDC_TRAIN_OF_FOUR_1: metric_str = "MDC_TRAIN_OF_FOUR_1"; break;
      case MDC_TRAIN_OF_FOUR_2: metric_str = "MDC_TRAIN_OF_FOUR_2"; break;
      case MDC_TRAIN_OF_FOUR_3: metric_str = "MDC_TRAIN_OF_FOUR_3"; break;
      case MDC_TRAIN_OF_FOUR_4: metric_str = "MDC_TRAIN_OF_FOUR_4"; break;
      case MDC_SETT_TIME_PD_TRAIN_OF_FOUR: metric_str = "MDC_SETT_TIME_PD_TRAIN_OF_FOUR"; break;
      case MDC_TIME_PD_ACT: metric_str = "MDC_TIME_PD_ACT"; break;
      case MDC_TIME_PD_aPTT_WB: metric_str = "MDC_TIME_PD_aPTT_WB"; break;
      case MDC_TIME_PD_aPTT_PE: metric_str = "MDC_TIME_PD_aPTT_PE"; break;
      case MDC_RATIO_TIME_PD_PTT: metric_str = "MDC_RATIO_TIME_PD_PTT"; break;
      case MDC_TIME_PD_PT_WB: metric_str = "MDC_TIME_PD_PT_WB"; break;
      case MDC_TIME_PD_PT_PE: metric_str = "MDC_TIME_PD_PT_PE"; break;
      case MDC_RATIO_TIME_PD_PT: metric_str = "MDC_RATIO_TIME_PD_PT"; break;
      case MDC_PT_INTL_NORM_RATIO: metric_str = "MDC_PT_INTL_NORM_RATIO"; break;
      case MDC_CARDIAC_TROPONIN_I: metric_str = "MDC_CARDIAC_TROPONIN_I"; break;
      case MDC_CARDIO_PULMONARY_BYPASS_MODE: metric_str = "MDC_CARDIO_PULMONARY_BYPASS_MODE"; break;
      case MDC_BNP: metric_str = "MDC_BNP"; break;
      case MDC_TIME_PD_INSP: metric_str = "MDC_TIME_PD_INSP"; break;
      case MDC_C20_PER_C_INDEX: metric_str = "MDC_C20_PER_C_INDEX"; break;
      case MDC_AWAY_TC: metric_str = "MDC_AWAY_TC"; break;
      case MDC_AWAY_CORR_COEF: metric_str = "MDC_AWAY_CORR_COEF"; break;
      case MDC_RATIO_AWAY_RATE_VOL_AWAY: metric_str = "MDC_RATIO_AWAY_RATE_VOL_AWAY"; break;
      case MDC_CONC_CA_GEN_NORM: metric_str = "MDC_CONC_CA_GEN_NORM"; break;
      case MDC_VOL_AWAY_TIDAL_PSV: metric_str = "MDC_VOL_AWAY_TIDAL_PSV"; break;
      case MDC_BREATH_RAPID_SHALLOW_INDEX: metric_str = "MDC_BREATH_RAPID_SHALLOW_INDEX"; break;
      case MDC_SETT_VENT_SIGH_RATE: metric_str = "MDC_SETT_VENT_SIGH_RATE"; break;
      case MDC_SETT_VENT_VOL_TIDAL_SIGH: metric_str = "MDC_SETT_VENT_VOL_TIDAL_SIGH"; break;
      case MDC_SETT_VENT_SIGH_MULT_RATE: metric_str = "MDC_SETT_VENT_SIGH_MULT_RATE"; break;
      case MDC_SETT_VOL_AWAY_TIDAL_APNEA: metric_str = "MDC_SETT_VOL_AWAY_TIDAL_APNEA"; break;
      case MDC_SETT_AWAY_RESP_RATE_APNEA: metric_str = "MDC_SETT_AWAY_RESP_RATE_APNEA"; break;
      case MDC_SETT_FLOW_AWAY_INSP_APNEA: metric_str = "MDC_SETT_FLOW_AWAY_INSP_APNEA"; break;
      case MDC_SETT_VENT_CONC_AWAY_O2_INSP_APNEA: metric_str = "MDC_SETT_VENT_CONC_AWAY_O2_INSP_APNEA"; break;
      case MDC_SETT_VENT_MODE_SIGH: metric_str = "MDC_SETT_VENT_MODE_SIGH"; break;
      case MDC_SETT_VENT_O2_SUCTION_MODE: metric_str = "MDC_SETT_VENT_O2_SUCTION_MODE"; break;
      case MDC_SETT_VENT_AWAY_FLOW_BASE: metric_str = "MDC_SETT_VENT_AWAY_FLOW_BASE"; break;
      case MDC_SETT_VENT_AWAY_FLOW_SENSE: metric_str = "MDC_SETT_VENT_AWAY_FLOW_SENSE"; break;
      case MDC_SETT_VENT_TIME_PD_INSP_PV: metric_str = "MDC_SETT_VENT_TIME_PD_INSP_PV"; break;
      case MDC_SETT_VENT_PRESS_AWAY_PV_APNEA: metric_str = "MDC_SETT_VENT_PRESS_AWAY_PV_APNEA"; break;
      case MDC_SETT_VENT_RESP_RATE_PV_APNEA: metric_str = "MDC_SETT_VENT_RESP_RATE_PV_APNEA"; break;
      case MDC_SETT_VENT_TIME_PD_INSP_PV_APNEA: metric_str = "MDC_SETT_VENT_TIME_PD_INSP_PV_APNEA"; break;
      case MDC_SETT_VENT_CONC_AWAY_O2_INSP_PV_APNEA: metric_str = "MDC_SETT_VENT_CONC_AWAY_O2_INSP_PV_APNEA"; break;
      case MDC_SETT_VENT_PRESS_AWAY_MAX_PV_APNEA: metric_str = "MDC_SETT_VENT_PRESS_AWAY_MAX_PV_APNEA"; break;
      case MDC_SETT_RATIO_IE_INSP_PV: metric_str = "MDC_SETT_RATIO_IE_INSP_PV"; break;
      case MDC_SETT_RATIO_IE_EXP_PV: metric_str = "MDC_SETT_RATIO_IE_EXP_PV"; break;
      case MDC_SETT_RATIO_IE_INSP_PV_APNEA: metric_str = "MDC_SETT_RATIO_IE_INSP_PV_APNEA"; break;
      case MDC_SETT_RATIO_IE_EXP_PV_APNEA: metric_str = "MDC_SETT_RATIO_IE_EXP_PV_APNEA"; break;
      case MDC_SETT_TIME_PD_MSMT: metric_str = "MDC_SETT_TIME_PD_MSMT"; break;
      case MDC_SETT_VENT_RESP_RATE_MODE_PPV_INTERMIT_PAP: metric_str = "MDC_SETT_VENT_RESP_RATE_MODE_PPV_INTERMIT_PAP"; break;
      case MDC_SETT_VENT_PRESS_AWAY_END_EXP_POS_INTERMIT: metric_str = "MDC_SETT_VENT_PRESS_AWAY_END_EXP_POS_INTERMIT"; break;
      case MDC_SETT_VENT_ANALY_CONC_GAS_O2_MODE: metric_str = "MDC_SETT_VENT_ANALY_CONC_GAS_O2_MODE"; break;
      case MDC_SETT_VENT_O2_CAL_MODE: metric_str = "MDC_SETT_VENT_O2_CAL_MODE"; break;
      case MDC_SETT_VENT_TIME_PD_INSP: metric_str = "MDC_SETT_VENT_TIME_PD_INSP"; break;
      case MDC_SETT_VENT_TIME_PD_EXP: metric_str = "MDC_SETT_VENT_TIME_PD_EXP"; break;
      case MDC_SETT_VENT_TIME_PD_RAMP_AL: metric_str = "MDC_SETT_VENT_TIME_PD_RAMP_AL"; break;
      case MDC_SETT_VENT_FLOW: metric_str = "MDC_SETT_VENT_FLOW"; break;
      case MDC_SETT_FLOW_AWAY_HFV: metric_str = "MDC_SETT_FLOW_AWAY_HFV"; break;
      case MDC_SETT_AWAY_RESP_RATE_HFV: metric_str = "MDC_SETT_AWAY_RESP_RATE_HFV"; break;
      case MDC_SETT_VENT_MODE_MAND_CTS_ONOFF: metric_str = "MDC_SETT_VENT_MODE_MAND_CTS_ONOFF"; break;
      case MDC_SETT_VENT_MODE_SYNC_MAND_INTERMIT: metric_str = "MDC_SETT_VENT_MODE_SYNC_MAND_INTERMIT"; break;
      case MDC_SETT_FLOW_AWAY_INSP: metric_str = "MDC_SETT_FLOW_AWAY_INSP"; break;
      case MDC_SETT_FLOW_AWAY_EXP: metric_str = "MDC_SETT_FLOW_AWAY_EXP"; break;
      case MDC_SETT_APNEA_ALARM_DELAY: metric_str = "MDC_SETT_APNEA_ALARM_DELAY"; break;
      case MDC_SETT_HFV_AMPL: metric_str = "MDC_SETT_HFV_AMPL"; break;
      case MDC_SETT_VOL_MINUTE_ALARM_DELAY: metric_str = "MDC_SETT_VOL_MINUTE_ALARM_DELAY"; break;
      case MDC_SETT_VENT_FLOW_INSP_TRIG: metric_str = "MDC_SETT_VENT_FLOW_INSP_TRIG"; break;
      case MDC_SETT_VENT_AWAY_PRESS_RATE_INCREASE: metric_str = "MDC_SETT_VENT_AWAY_PRESS_RATE_INCREASE"; break;
      case MDC_SETT_VENT_VOL_LIMIT_AL_HI_ONOFF: metric_str = "MDC_SETT_VENT_VOL_LIMIT_AL_HI_ONOFF"; break;
      case MDC_SETT_PRESS_AWAY_INSP_MAX_LIMIT_LO: metric_str = "MDC_SETT_PRESS_AWAY_INSP_MAX_LIMIT_LO"; break;
      case MDC_SETT_VOL_AWAY_TIDAL_APPLIED: metric_str = "MDC_SETT_VOL_AWAY_TIDAL_APPLIED"; break;
      case MDC_SETT_SENS_LEVEL: metric_str = "MDC_SETT_SENS_LEVEL"; break;
      case MDC_SETT_VENT_AWAY_FLOW_BACKGROUND: metric_str = "MDC_SETT_VENT_AWAY_FLOW_BACKGROUND"; break;
      case MDC_SETT_VENT_GAS_PROBE_POSN: metric_str = "MDC_SETT_VENT_GAS_PROBE_POSN"; break;
      case MDC_SETT_VENT_O2_PROBE_POSN: metric_str = "MDC_SETT_VENT_O2_PROBE_POSN"; break;
      case MDC_SETT_URINE_BAL_PD: metric_str = "MDC_SETT_URINE_BAL_PD"; break;
      case MDC_SETT_VENT_TIME_PD_EXP_APRV: metric_str = "MDC_SETT_VENT_TIME_PD_EXP_APRV"; break;
      case MDC_SETT_VENT_TIME_PD_INSP_APRV: metric_str = "MDC_SETT_VENT_TIME_PD_INSP_APRV"; break;
      case MDC_SETT_VENT_PRESS_AWAY_EXP_APRV: metric_str = "MDC_SETT_VENT_PRESS_AWAY_EXP_APRV"; break;
      case MDC_SETT_VENT_PRESS_AWAY_INSP_APRV: metric_str = "MDC_SETT_VENT_PRESS_AWAY_INSP_APRV"; break;
      case MDC_SETT_VENT_VOL_AWAY_ASSIST: metric_str = "MDC_SETT_VENT_VOL_AWAY_ASSIST"; break;
      case MDC_SETT_VENT_FLOW_AWAY_ASSIST: metric_str = "MDC_SETT_VENT_FLOW_AWAY_ASSIST"; break;
      case MDC_SETT_EVOK_CURR: metric_str = "MDC_SETT_EVOK_CURR"; break;
      case MDC_SETT_EVOK_CHARGE: metric_str = "MDC_SETT_EVOK_CHARGE"; break;
      case MDC_SETT_TIME_PD_EVOK: metric_str = "MDC_SETT_TIME_PD_EVOK"; break;
      case MDC_SETT_VENT_RESP_RATE_LIMIT_HI_PANT: metric_str = "MDC_SETT_VENT_RESP_RATE_LIMIT_HI_PANT"; break;
      case MDC_SETT_VENT_PRESS_AWAY_LIMIT_HI: metric_str = "MDC_SETT_VENT_PRESS_AWAY_LIMIT_HI"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_LIMIT_LO: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_LIMIT_LO"; break;
      case MDC_SETT_VENT_PRESS_AWAY_SUST_LIMIT_HI: metric_str = "MDC_SETT_VENT_PRESS_AWAY_SUST_LIMIT_HI"; break;
      case MDC_SETT_VENT_VOL_MINUTE_AWAY_LIMIT_LO: metric_str = "MDC_SETT_VENT_VOL_MINUTE_AWAY_LIMIT_LO"; break;
      case MDC_SETT_VENT_CONC_AWAY_O2_LIMIT_LO: metric_str = "MDC_SETT_VENT_CONC_AWAY_O2_LIMIT_LO"; break;
      case MDC_SETT_VENT_CONC_AWAY_O2_LIMIT_HI: metric_str = "MDC_SETT_VENT_CONC_AWAY_O2_LIMIT_HI"; break;
      case MDC_SETT_VENT_VOL_MINUTE_AWAY_LIMIT_HI: metric_str = "MDC_SETT_VENT_VOL_MINUTE_AWAY_LIMIT_HI"; break;
      case MDC_SETT_VENT_VOL_TIDAL_LIMIT_LO: metric_str = "MDC_SETT_VENT_VOL_TIDAL_LIMIT_LO"; break;
      case MDC_SETT_VENT_VOL_TIDAL_LIMIT_HI: metric_str = "MDC_SETT_VENT_VOL_TIDAL_LIMIT_HI"; break;
      case MDC_CONC_PCT: metric_str = "MDC_CONC_PCT"; break;
      case MDC_TIME_PD_THROMBOPLAS: metric_str = "MDC_TIME_PD_THROMBOPLAS"; break;
      case MDC_CONC_HDL: metric_str = "MDC_CONC_HDL"; break;
      case MDC_CONC_LDL: metric_str = "MDC_CONC_LDL"; break;
      case MDC_CONC_CRP: metric_str = "MDC_CONC_CRP"; break;
      case MDC_CONC_HB_URINE: metric_str = "MDC_CONC_HB_URINE"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_MAIN: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_MAIN"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_SLAVE: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_SLAVE"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_SUCTION: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_SUCTION"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_AUX: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_AUX"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN"; break;
      case MDC_FLOW_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE: metric_str = "MDC_FLOW_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE"; break;
      case MDC_PRESS_BLD_DIFF: metric_str = "MDC_PRESS_BLD_DIFF"; break;
      case MDC_PRESS_BLD_DIFF_GEN_1: metric_str = "MDC_PRESS_BLD_DIFF_GEN_1"; break;
      case MDC_PRESS_BLD_DIFF_GEN_2: metric_str = "MDC_PRESS_BLD_DIFF_GEN_2"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_AUX_SINCE_START: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_AUX_SINCE_START"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_AUX_SINCE_STOP: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_AUX_SINCE_STOP"; break;
      case MDC_VOL_DELIV_PUMP_HEART_LUNG_AUX: metric_str = "MDC_VOL_DELIV_PUMP_HEART_LUNG_AUX"; break;
      case MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_AUX: metric_str = "MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_AUX"; break;
      case MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_AUX: metric_str = "MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_AUX"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN_SINCE_START: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN_SINCE_START"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN_SINCE_STOP: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN_SINCE_STOP"; break;
      case MDC_VOL_DELIV_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN: metric_str = "MDC_VOL_DELIV_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN"; break;
      case MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN: metric_str = "MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN"; break;
      case MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN: metric_str = "MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_CARDIOPLEGIA_MAIN"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE_SINCE_START: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE_SINCE_START"; break;
      case MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE_SINCE_STOP: metric_str = "MDC_TIME_PD_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE_SINCE_STOP"; break;
      case MDC_VOL_DELIV_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE: metric_str = "MDC_VOL_DELIV_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE"; break;
      case MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE: metric_str = "MDC_VOL_DELIV_TOTAL_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE"; break;
      case MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE: metric_str = "MDC_TIME_PD_PLEGIA_PUMP_HEART_LUNG_CARDIOPLEGIA_SLAVE"; break;
      case MDC_SAT_O2_TISSUE: metric_str = "MDC_SAT_O2_TISSUE"; break;
      case MDC_CEREB_STATE_INDEX: metric_str = "MDC_CEREB_STATE_INDEX"; break;
      case MDC_RATIO_INSP_TOTAL_BREATH_SPONT: metric_str = "MDC_RATIO_INSP_TOTAL_BREATH_SPONT"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_TOTAL: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_TOTAL"; break;
      case MDC_COMPL_LUNG_PAV: metric_str = "MDC_COMPL_LUNG_PAV"; break;
      case MDC_ELAS_LUNG_PAV: metric_str = "MDC_ELAS_LUNG_PAV"; break;
      case MDC_RES_AWAY_PAV: metric_str = "MDC_RES_AWAY_PAV"; break;
      case MDC_RES_AWAY_EXP_TOTAL: metric_str = "MDC_RES_AWAY_EXP_TOTAL"; break;
      case MDC_BREATH_RAPID_SHALLOW_INDEX_NORM: metric_str = "MDC_BREATH_RAPID_SHALLOW_INDEX_NORM"; break;
      case MDC_TEMP_INFRARED: metric_str = "MDC_TEMP_INFRARED"; break;
      case MDC_TEMP_CORE_INFRARED: metric_str = "MDC_TEMP_CORE_INFRARED"; break;
      case MDC_TEMP_RECT_INFRARED: metric_str = "MDC_TEMP_RECT_INFRARED"; break;
      case MDC_TEMP_ORAL_INFRARED: metric_str = "MDC_TEMP_ORAL_INFRARED"; break;
      case MDC_TEMP_TYMP_INFRARED: metric_str = "MDC_TEMP_TYMP_INFRARED"; break;
      case MDC_TEMP_AXIL_INFRARED: metric_str = "MDC_TEMP_AXIL_INFRARED"; break;
      case MDC_ELECTRODE_IMPED: metric_str = "MDC_ELECTRODE_IMPED"; break;
      case MDC_CONC_AWAY_SUM_MAC: metric_str = "MDC_CONC_AWAY_SUM_MAC"; break;
      case MDC_RATE_DIFF_CARD_BEAT_PULSE: metric_str = "MDC_RATE_DIFF_CARD_BEAT_PULSE"; break;
      case MDC_PRESS_BLD_NONINV_TELE: metric_str = "MDC_PRESS_BLD_NONINV_TELE"; break;
      case MDC_PRESS_BLD_NONINV_TELE_SYS: metric_str = "MDC_PRESS_BLD_NONINV_TELE_SYS"; break;
      case MDC_PRESS_BLD_NONINV_TELE_DIA: metric_str = "MDC_PRESS_BLD_NONINV_TELE_DIA"; break;
      case MDC_PRESS_BLD_NONINV_TELE_MEAN: metric_str = "MDC_PRESS_BLD_NONINV_TELE_MEAN"; break;
      case MDC_PRESS_GEN_3_DIA: metric_str = "MDC_PRESS_GEN_3_DIA"; break;
      case MDC_USOUND_CARD_BEAT_RATE_FETAL: metric_str = "MDC_USOUND_CARD_BEAT_RATE_FETAL"; break;
      case MDC_USOUND_CARD_BEAT_RATE_FETAL_BTB: metric_str = "MDC_USOUND_CARD_BEAT_RATE_FETAL_BTB"; break;
      case MDC_USOUND_CARD_BEAT_FETAL_SIG_QUAL_INDEX: metric_str = "MDC_USOUND_CARD_BEAT_FETAL_SIG_QUAL_INDEX"; break;
      case MDC_ECG_CARD_BEAT_FETAL: metric_str = "MDC_ECG_CARD_BEAT_FETAL"; break;
      case MDC_ECG_CARD_BEAT_RATE_FETAL: metric_str = "MDC_ECG_CARD_BEAT_RATE_FETAL"; break;
      case MDC_ECG_CARD_BEAT_RATE_FETAL_BTB: metric_str = "MDC_ECG_CARD_BEAT_RATE_FETAL_BTB"; break;
      case MDC_ECG_CARD_BEAT_FETAL_SIG_QUAL_INDEX: metric_str = "MDC_ECG_CARD_BEAT_FETAL_SIG_QUAL_INDEX"; break;
      case MDC_TRIG_BEAT_FETAL: metric_str = "MDC_TRIG_BEAT_FETAL"; break;
      case MDC_ECG_ELEC_POTL_FETAL: metric_str = "MDC_ECG_ELEC_POTL_FETAL"; break;
      case MDC_TOCO: metric_str = "MDC_TOCO"; break;
      case MDC_STAT_COINCIDENCE: metric_str = "MDC_STAT_COINCIDENCE"; break;
      case MDC_PRESS_INTRA_UTERAL: metric_str = "MDC_PRESS_INTRA_UTERAL"; break;
      case MDC_VOL_AWAY: metric_str = "MDC_VOL_AWAY"; break;
      case MDC_RATIO_FETAL_MVMT_TOTAL: metric_str = "MDC_RATIO_FETAL_MVMT_TOTAL"; break;
      case MDC_TEMP_AXIL: metric_str = "MDC_TEMP_AXIL"; break;
      case MDC_TEMP_PRED: metric_str = "MDC_TEMP_PRED"; break;
      case MDC_SAT_O2_CAP: metric_str = "MDC_SAT_O2_CAP"; break;
      case MDC_CONC_AN_GAP: metric_str = "MDC_CONC_AN_GAP"; break;
      case MDC_SAT_O2_VEN_CALC: metric_str = "MDC_SAT_O2_VEN_CALC"; break;
      case MDC_ENERGY_BAL: metric_str = "MDC_ENERGY_BAL"; break;
      case MDC_PRESS_GEN_7_DIA: metric_str = "MDC_PRESS_GEN_7_DIA"; break;
      case MDC_RESP_CM: metric_str = "MDC_RESP_CM"; break;
      case MDC_RESP_RATE_CM: metric_str = "MDC_RESP_RATE_CM"; break;
      case MDC_PULS_OXIM_PLETH_TELE: metric_str = "MDC_PULS_OXIM_PLETH_TELE"; break;
      case MDC_PULS_OXIM_PLETH_LEFT: metric_str = "MDC_PULS_OXIM_PLETH_LEFT"; break;
      case MDC_PULS_OXIM_PLETH_RIGHT: metric_str = "MDC_PULS_OXIM_PLETH_RIGHT"; break;
      case MDC_PRESS_BLD_ART_FEMORAL: metric_str = "MDC_PRESS_BLD_ART_FEMORAL"; break;
      case MDC_PRESS_BLD_ART_BRACHIAL: metric_str = "MDC_PRESS_BLD_ART_BRACHIAL"; break;
      case MDC_PRESS_INTRA_CRAN_1: metric_str = "MDC_PRESS_INTRA_CRAN_1"; break;
      case MDC_PRESS_INTRA_CRAN_2: metric_str = "MDC_PRESS_INTRA_CRAN_2"; break;

      case MDC_VENT_PRESS_AWAY_END_EXP_POS_DYNAMIC_EXTRINSIC: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_DYNAMIC_EXTRINSIC"; break;
      case MDC_VENT_VOL_MINUTE_EXP_TOTAL: metric_str = "MDC_VENT_VOL_MINUTE_EXP_TOTAL"; break;
      case MDC_VENT_VOL_TIDAL_EXP_TOTAL: metric_str = "MDC_VENT_VOL_TIDAL_EXP_TOTAL"; break;
      case MDC_VENT_FLOW_RESP_RATE_TOTAL: metric_str = "MDC_VENT_FLOW_RESP_RATE_TOTAL"; break;
      case MDC_VENT_VOL_AWAY_TIDAL_EXP: metric_str = "MDC_VENT_VOL_AWAY_TIDAL_EXP"; break;
      case MDC_VENT_RESP_RATE_SPONT: metric_str = "MDC_VENT_RESP_RATE_SPONT"; break;
      case MDC_VENT_AWAY_RSBI: metric_str = "MDC_VENT_AWAY_RSBI"; break;
      case MDC_VENT_VOL_TIDAL_EXP: metric_str = "MDC_VENT_VOL_TIDAL_EXP"; break;
      case MDC_VENT_PRESS_AWAY_AUX_MAX: metric_str = "MDC_VENT_PRESS_AWAY_AUX_MAX"; break;
      case MDC_VENT_PRESS_AWAY_AUX_MEAN: metric_str = "MDC_VENT_PRESS_AWAY_AUX_MEAN"; break;
      case MDC_VENT_PRESS_AWAY_AUX_MIN: metric_str = "MDC_VENT_PRESS_AWAY_AUX_MIN"; break;
      case MDC_VENT_CONC_AWAY_O2_ET: metric_str = "MDC_VENT_CONC_AWAY_O2_ET"; break;
      case MDC_VENT_PRESS_RESP_PLAT_STATIC: metric_str = "MDC_VENT_PRESS_RESP_PLAT_STATIC"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_EXTRINSIC: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_EXTRINSIC"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_INTRINSIC: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_INTRINSIC"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_TOTAL: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_STATIC_TOTAL"; break;
      case MDC_VENT_RESP_EXPENDED_ENERGY: metric_str = "MDC_VENT_RESP_EXPENDED_ENERGY"; break;
      case MDC_VENT_FLOW_O2_CONSUMP_PER_BSA: metric_str = "MDC_VENT_FLOW_O2_CONSUMP_PER_BSA"; break;
      case MDC_VENT_FLOW_CO2_PROD_RESP_PER_BSA: metric_str = "MDC_VENT_FLOW_CO2_PROD_RESP_PER_BSA"; break;
      case MDC_VENT_FLOW_O2_CONSUMP_PER_PT_WEIGHT: metric_str = "MDC_VENT_FLOW_O2_CONSUMP_PER_PT_WEIGHT"; break;
      case MDC_VENT_FLOW_CO2_PROD_RESP_PER_PT_WEIGHT: metric_str = "MDC_VENT_FLOW_CO2_PROD_RESP_PER_PT_WEIGHT"; break;
      case MDC_VENT_VOL_TIDAL_EXP_TOTAL_PER_PT_WEIGHT: metric_str = "MDC_VENT_VOL_TIDAL_EXP_TOTAL_PER_PT_WEIGHT"; break;
      case MDC_VENT_VOL_MINUTE_EXP_TOTAL_PER_PT_WEIGHT: metric_str = "MDC_VENT_VOL_MINUTE_EXP_TOTAL_PER_PT_WEIGHT"; break;
      case MDC_VENT_PRESS_AWAY_END_EXP_POS_DYNAMIC_INTRINSIC: metric_str = "MDC_VENT_PRESS_AWAY_END_EXP_POS_DYNAMIC_INTRINSIC"; break;
      case MDC_VENT_PRESS_SUPPLY_O2: metric_str = "MDC_VENT_PRESS_SUPPLY_O2"; break;
      case MDC_VENT_PRESS_SUPPLY_AIR: metric_str = "MDC_VENT_PRESS_SUPPLY_AIR"; break;
      case MDC_VENT_PRESS_AIR_AMBIENT: metric_str = "MDC_VENT_PRESS_AIR_AMBIENT"; break;
      case MDC_VENT_VOL_TIDAL_INSP: metric_str = "MDC_VENT_VOL_TIDAL_INSP"; break;
      case MDC_VENT_VOL_MINUTE_INSP_TOTAL: metric_str = "MDC_VENT_VOL_MINUTE_INSP_TOTAL"; break;
      case MDC_VENT_TIME_INSP: metric_str = "MDC_VENT_TIME_INSP"; break;
      case MDC_VENT_TIME_EXP: metric_str = "MDC_VENT_TIME_EXP"; break;
      case MDC_VENT_VOL_SET_TIDAL: metric_str = "MDC_VENT_VOL_SET_TIDAL"; break;
      case MDC_PRESS_AWAY_SET_END_EXP_POS: metric_str = "MDC_PRESS_AWAY_SET_END_EXP_POS"; break;
      case MDC_VENT_TIME_SET_INSP: metric_str = "MDC_VENT_TIME_SET_INSP"; break;
      case MDC_PRESS_AWAY_SET_INSP: metric_str = "MDC_PRESS_AWAY_SET_INSP"; break;
      case MDC_PRESS_AWAY_SET_SUPP: metric_str = "MDC_PRESS_AWAY_SET_SUPP"; break;
      case MDC_PRESS_AWAY_SET_LIMIT: metric_str = "MDC_PRESS_AWAY_SET_LIMIT"; break;
      case MDC_VENT_FLOW_SET_RESP_RATE: metric_str = "MDC_VENT_FLOW_SET_RESP_RATE"; break;
      case MDC_VENT_FLOW_SET_MECH_RESP_RATE: metric_str = "MDC_VENT_FLOW_SET_MECH_RESP_RATE"; break;
      case MDC_VENT_SET_INSP_PAUSE_PERCENT: metric_str = "MDC_VENT_SET_INSP_PAUSE_PERCENT"; break;
      case MDC_VENT_RATIO_SET_IE: metric_str = "MDC_VENT_RATIO_SET_IE"; break;
      case MDC_VENT_MECH_INSP_SET_TRIGGER_PER_BREATH: metric_str = "MDC_VENT_MECH_INSP_SET_TRIGGER_PER_BREATH"; break;
      case MDC_VENT_MECH_INSP_SET_TRIGGER_FLOW: metric_str = "MDC_VENT_MECH_INSP_SET_TRIGGER_FLOW"; break;
      case MDC_VENT_MECH_INSP_SET_END_PER_FLOW: metric_str = "MDC_VENT_MECH_INSP_SET_END_PER_FLOW"; break;
      case MDC_VENT_SET_FLOW_BIAS: metric_str = "MDC_VENT_SET_FLOW_BIAS"; break;
      case MDC_VENT_PRESS_SET_RISE_TIME: metric_str = "MDC_VENT_PRESS_SET_RISE_TIME"; break;
      case MDC_VENT_FLOW_SET_RISE_TIME: metric_str = "MDC_VENT_FLOW_SET_RISE_TIME"; break;
      case MDC_VENT_PRESS_SET_TRIG_SENS: metric_str = "MDC_VENT_PRESS_SET_TRIG_SENS"; break;
      case MDC_VENT_PRESS_SET_MAX: metric_str = "MDC_VENT_PRESS_SET_MAX"; break;
      case MDC_VENT_PRESS_SET_SUPP_RISE_TIME: metric_str = "MDC_VENT_PRESS_SET_SUPP_RISE_TIME"; break;
      case MDC_VENT_SET_FLOW: metric_str = "MDC_VENT_SET_FLOW"; break;
      case MDC_VENT_SET_PAUSE_TIME: metric_str = "MDC_VENT_SET_PAUSE_TIME"; break;
      case MDC_VENT_CONC_AWAY_SET_O2_INSP: metric_str = "MDC_VENT_CONC_AWAY_SET_O2_INSP"; break;
      case MDC_VENT_PRESS_SET_HIGH: metric_str = "MDC_VENT_PRESS_SET_HIGH"; break;
      case MDC_VENT_PRESS_SET_LOW: metric_str = "MDC_VENT_PRESS_SET_LOW"; break;
      case MDC_VENT_TIME_SET_HIGH: metric_str = "MDC_VENT_TIME_SET_HIGH"; break;
      case MDC_VENT_TIME_SET_LOW: metric_str = "MDC_VENT_TIME_SET_LOW"; break;
      case MDC_VENT_TIME_SET_SUPP: metric_str = "MDC_VENT_TIME_SET_SUPP"; break;
      case MDC_VENT_TIME_SET_DISCONNECT: metric_str = "MDC_VENT_TIME_SET_DISCONNECT"; break;
      case MDC_VENT_TIME_SET_PATIENT_EFFORT: metric_str = "MDC_VENT_TIME_SET_PATIENT_EFFORT"; break;
      case MDC_VENT_SET_TUBE_SIZE: metric_str = "MDC_VENT_SET_TUBE_SIZE"; break;
      case MDC_VENT_SET_ARC_LEVEL: metric_str = "MDC_VENT_SET_ARC_LEVEL"; break;
      case MDC_VENT_SET_BSA: metric_str = "MDC_VENT_SET_BSA"; break;
      case MDC_VENT_SET_PATIENT_HEIGHT: metric_str = "MDC_VENT_SET_PATIENT_HEIGHT"; break;
      case MDC_VENT_SET_PATIENT_WEIGHT: metric_str = "MDC_VENT_SET_PATIENT_WEIGHT"; break;
      case MDC_VENT_SET_NEBULIZER_TIME: metric_str = "MDC_VENT_SET_NEBULIZER_TIME"; break;
      case MDC_VENT_SET_NEBULIZER_VOLUME: metric_str = "MDC_VENT_SET_NEBULIZER_VOLUME"; break;
      case MDC_VENT_SET_NEBULIZER_PAUSE_TIME: metric_str = "MDC_VENT_SET_NEBULIZER_PAUSE_TIME"; break;
      case MDC_VENT_SET_NEBULIZER_CYCLES: metric_str = "MDC_VENT_SET_NEBULIZER_CYCLES"; break;
      case MDC_VENT_PRESS_SET_MIN: metric_str = "MDC_VENT_PRESS_SET_MIN"; break;
      case MDC_VENT_ASSIST_SET_MODE: metric_str = "MDC_VENT_ASSIST_SET_MODE"; break;
      case MDC_VENT_SET_TUBE_TYPE: metric_str = "MDC_VENT_SET_TUBE_TYPE"; break;
      case MDC_VENT_SET_PATIENT_TYPE: metric_str = "MDC_VENT_SET_PATIENT_TYPE"; break;
      case MDC_VENT_SET_FLOW_SENSOR_TYPE: metric_str = "MDC_VENT_SET_FLOW_SENSOR_TYPE"; break;
      case MDC_VENT_SET_SYSTEM_CONFIGURATION: metric_str = "MDC_VENT_SET_SYSTEM_CONFIGURATION"; break;
      case MDC_VENT_SET_CONTINUOUS_NEBULIZATION: metric_str = "MDC_VENT_SET_CONTINUOUS_NEBULIZATION"; break;
      case MDC_FLOW_FLUID_PUMP_BOLUS_INDUCTION: metric_str = "bolus or induction flow rate"; break;
      case MDC_VOL_FLUID_TBI_REMAIN_BOLUS: metric_str = "bolus volume to be infused"; break;
      case MDC_TIME_PD_REMAIN_INDUCTION_BOLUS: metric_str = "remaining infusion time induction or bolus"; break;
      case MDC_VOL_FLUID_DELIV_PRIMARY_BOLUS_INDUCTION: metric_str = "primary/bolus/induction infused volume"; break;
      case MDC_ECG_LEAD_PROCESS_7_SINGLE_12: metric_str = "MDC_ECG_LEAD_PROCESS_7_SINGLE_12"; break;
      case MDC_VOL_FLUID_DELIV_RAMP: metric_str = "ramp infused volume"; break;
      case MDC_VOL_FLUID_DELIV_SEQUENTIAL: metric_str = "sequential infused volume"; break;
      case MDC_CO2_SENSOR_PUMP_ON_OFF: metric_str = "MDC_CO2_SENSOR_PUMP_ON_OFF"; break;
      case MDC_VOL_FLUID_DELIV_INDUCTION: metric_str = "induction infused volume"; break;
      case MDC_VOL_FLUID_DELIV_BOLUS: metric_str = "bolus infused volume"; break;
      case MDC_VOL_FLUID_DELIV_PARTIAL_PRIMARY_BOLUS_INDUCTION: metric_str = "partial primary/bolus/induction infused volume"; break;
      case MDC_VOL_FLUID_DELIV_PARTIAL_RAMP: metric_str = "partial ramp infused volume"; break;
      case MDC_VOL_FLUID_DELIV_PARTIAL_SEQUENTIAL: metric_str = "partial sequential infused volume"; break;
      case MDC_VOL_FLUID_DELIV_PARTIAL_SECONDARY: metric_str = "partial secondary infused volume"; break;

      case MDC_ECG_AMPL_ST_I: metric_str = "MDC_ECG_AMPL_ST_I"; break;
      case MDC_ECG_AMPL_ST_II: metric_str = "MDC_ECG_AMPL_ST_II"; break;
      case MDC_ECG_AMPL_ST_V1: metric_str = "MDC_ECG_AMPL_ST_V1"; break;
      case MDC_ECG_AMPL_ST_V2: metric_str = "MDC_ECG_AMPL_ST_V2"; break;
      case MDC_ECG_AMPL_ST_V3: metric_str = "MDC_ECG_AMPL_ST_V3"; break;
      case MDC_ECG_AMPL_ST_V4: metric_str = "MDC_ECG_AMPL_ST_V4"; break;
      case MDC_ECG_AMPL_ST_V5: metric_str = "MDC_ECG_AMPL_ST_V5"; break;
      case MDC_ECG_AMPL_ST_V6: metric_str = "MDC_ECG_AMPL_ST_V6"; break;
      case MDC_ECG_AMPL_ST_III: metric_str = "MDC_ECG_AMPL_ST_III"; break;
      case MDC_ECG_AMPL_ST_AVR: metric_str = "MDC_ECG_AMPL_ST_AVR"; break;
      case MDC_ECG_AMPL_ST_AVL: metric_str = "MDC_ECG_AMPL_ST_AVL"; break;
      case MDC_ECG_AMPL_ST_AVF: metric_str = "MDC_ECG_AMPL_ST_AVF"; break;
      case MDC_ECG_AMPL_ST_V: metric_str = "MDC_ECG_AMPL_ST_V"; break;
      case MDC_ECG_AMPL_ST_MCL: metric_str = "MDC_ECG_AMPL_ST_MCL"; break;
      case MDC_PRESS_BLD_ART_FEM_MEAN: metric_str = "MDC_PRESS_BLD_ART_FEM_MEAN"; break;
      case MDC_PRESS_BLD_ART_FEM_SYS: metric_str = "MDC_PRESS_BLD_ART_FEM_SYS"; break;
      case MDC_PRESS_BLD_ART_FEM_DIA: metric_str = "MDC_PRESS_BLD_ART_FEM_DIA"; break;
      case MDC_ICG_OUTPUT_CARD_INDEX: metric_str = "MDC_ICG_OUTPUT_CARD_INDEX"; break;
      case MDC_ICG_OUTPUT_CARD: metric_str = "MDC_ICG_OUTPUT_CARD"; break;
      case MDC_ICG_CONDUCTANCE_FLUID_THORACIC: metric_str = "MDC_ICG_CONDUCTANCE_FLUID_THORACIC"; break;
      case MDC_ICG_VOL_BLD_STROKE: metric_str = "MDC_ICG_VOL_BLD_STROKE"; break;
      case MDC_ICG_INDEX_STROKE: metric_str = "MDC_ICG_INDEX_STROKE"; break;
      case MDC_ICG_INDEX_VELOCITY: metric_str = "MDC_ICG_INDEX_VELOCITY"; break;
      case MDC_ICG_RES_VASC_SYS: metric_str = "MDC_ICG_RES_VASC_SYS"; break;
      case MDC_ICG_RES_VASC_SYS_INDEX: metric_str = "MDC_ICG_RES_VASC_SYS_INDEX"; break;
      case MDC_ICG_INDEX_ACCELERATION: metric_str = "MDC_ICG_INDEX_ACCELERATION"; break;
      case MDC_EEG_INDEX_BISPECTRAL: metric_str = "MDC_EEG_INDEX_BISPECTRAL"; break;
      case MDC_EEG_RATIO_SUPPRESSION: metric_str = "MDC_EEG_RATIO_SUPPRESSION"; break;
      case MDC_EEG_INDEX_SIGNAL_QUALITY: metric_str = "MDC_EEG_INDEX_SIGNAL_QUALITY"; break;
      case MDC_ICG_HEART_RATE: metric_str = "MDC_ICG_HEART_RATE"; break;
      case MDC_ICG_PRESS_BLD_ART_MEAN: metric_str = "MDC_ICG_PRESS_BLD_ART_MEAN"; break;
      case MDC_ICG_TIME_PD_VENT_L_AORT_VALV: metric_str = "MDC_ICG_TIME_PD_VENT_L_AORT_VALV"; break;
      case MDC_ICG_SIGNAL_QUALITY: metric_str = "MDC_ICG_SIGNAL_QUALITY"; break;
      case MDC_ECG_SIGNAL_QUALITY: metric_str = "MDC_ECG_SIGNAL_QUALITY"; break;
      case MDC_ICG_INDEX_DELIVERED_O2: metric_str = "MDC_ICG_INDEX_DELIVERED_O2"; break;
      case MDC_ICG_LEFT_CARDIAC_WORK_INDEX: metric_str = "MDC_ICG_LEFT_CARDIAC_WORK_INDEX"; break;
      case MDC_ICG_LEFT_VENTRICULAR_EJECTION_TIME: metric_str = "MDC_ICG_LEFT_VENTRICULAR_EJECTION_TIME"; break;
      case MDC_ICG_INDEX_WORK_STROKE_VENTRICULAR_LEFT: metric_str = "MDC_ICG_INDEX_WORK_STROKE_VENTRICULAR_LEFT"; break;
      case MDC_ICG_RATIO_TIME_SYSTOLIC: metric_str = "MDC_ICG_RATIO_TIME_SYSTOLIC"; break;
      case MDC_ICG_INDEX_DELIVERED_O2_ESTIMATED: metric_str = "MDC_ICG_INDEX_DELIVERED_O2_ESTIMATED"; break;
      case MDC_EEG_AMP: metric_str = "MDC_EEG_AMP"; break;
      case MDC_PRESS_SUPPLY_AIR: metric_str = "MDC_PRESS_SUPPLY_AIR"; break;
      case MDC_PRESS_SUPPLY_O2: metric_str = "MDC_PRESS_SUPPLY_O2"; break;
      case MDC_CONC_AWAY_O2_ET: metric_str = "MDC_CONC_AWAY_O2_ET"; break;
      case MDC_PRESS_AWAY_END_EXP_POS_DYNAMIC_EXTRINSIC: metric_str = "MDC_PRESS_AWAY_END_EXP_POS_DYNAMIC_EXTRINSIC"; break;
      case MDC_PRESS_AWAY_END_EXP_POS_DYNAMIC_INTRINSIC: metric_str = "MDC_PRESS_AWAY_END_EXP_POS_DYNAMIC_INTRINSIC"; break;
      case MDC_PRESS_AWAY_AUX_MAX: metric_str = "MDC_PRESS_AWAY_AUX_MAX"; break;
      case MDC_PRESS_FLUID_MEAS_LIMIT: metric_str = "selected pressure limit value"; break;

      case MDC_EVT_STAT_AL_SILENCE_COUNT: metric_str = "MDC_EVT_STAT_AL_SILENCE_COUNT"; break;
      case MDC_ACT_SET_MDS_STATUS: metric_str = "MDC_ACT_SET_MDS_STATUS"; break;
      case MDC_ACT_SET_MDS_STEP: metric_str = "MDC_ACT_SET_MDS_STEP"; break;

      case MDC_CARD_VELOCITY_INDEX: metric_str = "MDC_CARD_VELOCITY_INDEX"; break;
      case MDC_SAT_O2_DELIV: metric_str = "MDC_SAT_O2_DELIV"; break;
      case MDC_VENT_EJECT_TIME_LEFT: metric_str = "MDC_VENT_EJECT_TIME_LEFT"; break;
      case MDC_SYST_TIME_RATIO: metric_str = "MDC_SYST_TIME_RATIO"; break;
      case MDC_CARD_ACCELERATION_INDEX: metric_str = "MDC_CARD_ACCELERATION_INDEX"; break;
      case MDC_SAT_O2_DELIV_INDEX_EST: metric_str = "MDC_SAT_O2_DELIV_INDEX_EST"; break;
      case MDC_BIS_BIS: metric_str = "MDC_BIS_BIS"; break;
      case MDC_BIS_SUPP_RATIO: metric_str = "MDC_BIS_SUPP_RATIO"; break;
      case MDC_BIS_SIG_QUAL: metric_str = "MDC_BIS_SIG_QUAL"; break;
      case MDC_EEG_BIS_AMPL: metric_str = "MDC_EEG_BIS_AMPL"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_1: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_1"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_1: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_1"; break;
      case MDC_EEG_SUPP_RATIO_CH_1: metric_str = "MDC_EEG_SUPP_RATIO_CH_1"; break;
      case MDC_EEG_AMPL_CH_1: metric_str = "MDC_EEG_AMPL_CH_1"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_1: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_1"; break;
      case MDC_EEG_DELTA_CH_1: metric_str = "MDC_EEG_DELTA_CH_1"; break;
      case MDC_EEG_THETA_CH_1: metric_str = "MDC_EEG_THETA_CH_1"; break;
      case MDC_EEG_ALPHA_CH_1: metric_str = "MDC_EEG_ALPHA_CH_1"; break;
      case MDC_EEG_BETA_CH_1: metric_str = "MDC_EEG_BETA_CH_1"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_2: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_2"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_2: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_2"; break;
      case MDC_EEG_SUPP_RATIO_CH_2: metric_str = "MDC_EEG_SUPP_RATIO_CH_2"; break;
      case MDC_EEG_AMPL_CH_2: metric_str = "MDC_EEG_AMPL_CH_2"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_2: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_2"; break;
      case MDC_EEG_DELTA_CH_2: metric_str = "MDC_EEG_DELTA_CH_2"; break;
      case MDC_EEG_THETA_CH_2: metric_str = "MDC_EEG_THETA_CH_2"; break;
      case MDC_EEG_ALPHA_CH_2: metric_str = "MDC_EEG_ALPHA_CH_2"; break;
      case MDC_EEG_BETA_CH_2: metric_str = "MDC_EEG_BETA_CH_2"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_3: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_3"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_3: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_3"; break;
      case MDC_EEG_SUPP_RATIO_CH_3: metric_str = "MDC_EEG_SUPP_RATIO_CH_3"; break;
      case MDC_EEG_AMPL_CH_3: metric_str = "MDC_EEG_AMPL_CH_3"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_3: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_3"; break;
      case MDC_EEG_DELTA_CH_3: metric_str = "MDC_EEG_DELTA_CH_3"; break;
      case MDC_EEG_THETA_CH_3: metric_str = "MDC_EEG_THETA_CH_3"; break;
      case MDC_EEG_ALPHA_CH_3: metric_str = "MDC_EEG_ALPHA_CH_3"; break;
      case MDC_EEG_BETA_CH_3: metric_str = "MDC_EEG_BETA_CH_3"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_4: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_4"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_4: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_4"; break;
      case MDC_EEG_SUPP_RATIO_CH_4: metric_str = "MDC_EEG_SUPP_RATIO_CH_4"; break;
      case MDC_EEG_AMPL_CH_4: metric_str = "MDC_EEG_AMPL_CH_4"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_4: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_4"; break;
      case MDC_EEG_DELTA_CH_4: metric_str = "MDC_EEG_DELTA_CH_4"; break;
      case MDC_EEG_THETA_CH_4: metric_str = "MDC_EEG_THETA_CH_4"; break;
      case MDC_EEG_ALPHA_CH_4: metric_str = "MDC_EEG_ALPHA_CH_4"; break;
      case MDC_EEG_BETA_CH_4: metric_str = "MDC_EEG_BETA_CH_4"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_SUPP_RATIO_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_SUPP_RATIO_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_AMPL_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_AMPL_CH_1_AND_2_PAIR"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_1_AND_2_PAIR: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_DELTA_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_DELTA_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_THETA_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_THETA_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_ALPHA_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_ALPHA_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_BETA_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_BETA_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_SPECTRAL_EDGE_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_FREQ_PWR_SPEC_CRTX_DOM_MEAN_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_SUPP_RATIO_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_SUPP_RATIO_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_AMPL_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_AMPL_CH_3_AND_4_PAIR"; break;
      case MDC_EMG_ELEC_POTL_MUSC_CH_3_AND_4_PAIR: metric_str = "MDC_EMG_ELEC_POTL_MUSC_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_DELTA_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_DELTA_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_THETA_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_THETA_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_ALPHA_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_ALPHA_CH_3_AND_4_PAIR"; break;
      case MDC_EEG_BETA_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_BETA_CH_3_AND_4_PAIR"; break;
      case MDC_PRESS_BLD_NONINV_ALARM_LEVEL: metric_str = "MDC_PRESS_BLD_NONINV_ALARM_LEVEL"; break;
      case MDC_BLD_NBP_AUTO_MODE_TIME_CAL_CHECK_PRESS: metric_str = "MDC_BLD_NBP_AUTO_MODE_TIME_CAL_CHECK_PRESS"; break;
      case MDC_CO2_BAR_PRESS_AMP_AXIS: metric_str = "MDC_CO2_BAR_PRESS_AMP_AXIS"; break;
      case MDC_SAT_O2_VEN_LAB_SAT_VALUE: metric_str = "MDC_SAT_O2_VEN_LAB_SAT_VALUE"; break;
      case MDC_SAT_O2_VEN_AMP_AXIS: metric_str = "MDC_SAT_O2_VEN_AMP_AXIS"; break;
      case MDC_SAT_O2_VEN_TIME_AXIS: metric_str = "MDC_SAT_O2_VEN_TIME_AXIS"; break;
      case MDC_CONC_AWAY_N2_EXP: metric_str = "MDC_CONC_AWAY_N2_EXP"; break;
      case MDC_CONC_AWAY_N2_INSP: metric_str = "MDC_CONC_AWAY_N2_INSP"; break;
      case MDC_PRESS_BARO: metric_str = "MDC_PRESS_BARO"; break;
      case MDC_GAS_BARO_PRESS_OFFSET_530: metric_str = "MDC_GAS_BARO_PRESS_OFFSET_530"; break;
      case MDC_ARTGAS_SENSOR_INIT_MEAS: metric_str = "MDC_ARTGAS_SENSOR_INIT_MEAS"; break;
      case MDC_CONC_PH_ART_QA_CHK_VAL: metric_str = "MDC_CONC_PH_ART_QA_CHK_VAL"; break;
      case MDC_CONC_CO2_ART_QA_CHK_VAL: metric_str = "MDC_CONC_CO2_ART_QA_CHK_VAL"; break;
      case MDC_CONC_O2_ART_QA_CHK_VAL: metric_str = "MDC_CONC_O2_ART_QA_CHK_VAL"; break;
      case MDC_ICG_PACE_DETECT: metric_str = "MDC_ICG_PACE_DETECT"; break;
      case MDC_ICG_SUBCODE_LRG_RIGHT_NUM: metric_str = "MDC_ICG_SUBCODE_LRG_RIGHT_NUM"; break;
      case MDC_ICG_SUBCODE_SMLL_UPPLEFT_VALUE: metric_str = "MDC_ICG_SUBCODE_SMLL_UPPLEFT_VALUE"; break;
      case MDC_ICG_SUBCODE_SMLL_MIDLEFT_VALUE: metric_str = "MDC_ICG_SUBCODE_SMLL_MIDLEFT_VALUE"; break;
      case MDC_ICG_SUBCODE_SMLL_LOWLEFT_VALUE: metric_str = "MDC_ICG_SUBCODE_SMLL_LOWLEFT_VALUE"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_1: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_1"; break;
      case MDC_EEG_POS_LEVEL_CH_1: metric_str = "MDC_EEG_POS_LEVEL_CH_1"; break;
      case MDC_EEG_NEG_LEVEL_CH_1: metric_str = "MDC_EEG_NEG_LEVEL_CH_1"; break;
      case MDC_EEG_REF_LEAD_LABEL: metric_str = "MDC_EEG_REF_LEAD_LABEL"; break;
      case MDC_EEG_GROUND_LEAD_LABEL: metric_str = "MDC_EEG_GROUND_LEAD_LABEL"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_2: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_2"; break;
      case MDC_EEG_POS_LEVEL_CH_2: metric_str = "MDC_EEG_POS_LEVEL_CH_2"; break;
      case MDC_EEG_NEG_LEVEL_CH_2: metric_str = "MDC_EEG_NEG_LEVEL_CH_2"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_3: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_3"; break;
      case MDC_EEG_POS_LEVEL_CH_3: metric_str = "MDC_EEG_POS_LEVEL_CH_3"; break;
      case MDC_EEG_NEG_LEVEL_CH_3: metric_str = "MDC_EEG_NEG_LEVEL_CH_3"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_4: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_4"; break;
      case MDC_EEG_POS_LEVEL_CH_4: metric_str = "MDC_EEG_POS_LEVEL_CH_4"; break;
      case MDC_EEG_NEG_LEVEL_CH_4: metric_str = "MDC_EEG_NEG_LEVEL_CH_4"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_1_AND_2_PAIR: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_1_AND_2_PAIR"; break;
      case MDC_EEG_SIGNAL_QUAL_CH_3_AND_4_PAIR: metric_str = "MDC_EEG_SIGNAL_QUAL_CH_3_AND_4_PAIR"; break;
      case MDC_ECG_PACE_MODE: metric_str = "MDC_ECG_PACE_MODE"; break;
      case MDC_ECG_GAIN_SELECT: metric_str = "MDC_ECG_GAIN_SELECT"; break;
      case MDC_ECG_ST_VIEW_ONOFF: metric_str = "MDC_ECG_ST_VIEW_ONOFF"; break;
      case MDC_ECG_PVC_LIMIT_CHECK: metric_str = "MDC_ECG_PVC_LIMIT_CHECK"; break;
      case MDC_ECG_TEMPLATEVIEW_ON: metric_str = "MDC_ECG_TEMPLATEVIEW_ON"; break;
      case MDC_ECG_VLEAD_ST_SELECT: metric_str = "MDC_ECG_VLEAD_ST_SELECT"; break;
      case MDC_ECG_LEAD_V2_V6_CLEAR: metric_str = "MDC_ECG_LEAD_V2_V6_CLEAR"; break;
      case MDC_ECG_TTX_ALARM_PAUSE: metric_str = "MDC_ECG_TTX_ALARM_PAUSE"; break;
      case MDC_ECG_TTX_ALARM_PAUSE_COMPAT: metric_str = "MDC_ECG_TTX_ALARM_PAUSE_COMPAT"; break;
      case MDC_ECG_ARRHY_MODE: metric_str = "MDC_ECG_ARRHY_MODE"; break;
      case MDC_ECG_AUTO_MODE: metric_str = "MDC_ECG_AUTO_MODE"; break;
      case MDC_ECG_12SL_AUTOMODE_COUNT: metric_str = "MDC_ECG_12SL_AUTOMODE_COUNT"; break;
      case MDC_RESP_AUTO_DETECT: metric_str = "MDC_RESP_AUTO_DETECT"; break;
      case MDC_RESP_LEAD_1: metric_str = "MDC_RESP_LEAD_1"; break;
      case MDC_RESP_CARDIO_ARTIFACT_FILTER: metric_str = "MDC_RESP_CARDIO_ARTIFACT_FILTER"; break;
      case MDC_RESP_CARDIFACT_ALARM: metric_str = "MDC_RESP_CARDIFACT_ALARM"; break;
      case MDC_RESP_MARKER: metric_str = "MDC_RESP_MARKER"; break;
      case MDC_RESP_RELEARN: metric_str = "MDC_RESP_RELEARN"; break;
      case MDC_PRESS_BLD_ART_PULM_WEDGE_STATUS: metric_str = "MDC_PRESS_BLD_ART_PULM_WEDGE_STATUS"; break;
      case MDC_PRESS_BLD_12HZ_FILTER: metric_str = "MDC_PRESS_BLD_12HZ_FILTER"; break;
      case MDC_PRESS_BLD_SQUELCH_FUNCTION: metric_str = "MDC_PRESS_BLD_SQUELCH_FUNCTION"; break;
      case MDC_PRESS_BLD_SQUELCH_VALUE: metric_str = "MDC_PRESS_BLD_SQUELCH_VALUE"; break;
      case MDC_PRESS_BLD_DISPLAY_DEVICE_PROCESS_WEDGE: metric_str = "MDC_PRESS_BLD_DISPLAY_DEVICE_PROCESS_WEDGE"; break;
      case MDC_PRESS_BLD_DISPLAY_DEVICE_WEDGE_MODE: metric_str = "MDC_PRESS_BLD_DISPLAY_DEVICE_WEDGE_MODE"; break;
      case MDC_PRESS_BLD_SITE_SELECT: metric_str = "MDC_PRESS_BLD_SITE_SELECT"; break;
      case MDC_PRESS_BLD_SCALE_SELECT: metric_str = "MDC_PRESS_BLD_SCALE_SELECT"; break;
      case MDC_PRESS_BLD_SITE_SELECT_NEW: metric_str = "MDC_PRESS_BLD_SITE_SELECT_NEW"; break;
      case MDC_PRESS_BLD_SITE_ART_DISCONNECT: metric_str = "MDC_PRESS_BLD_SITE_ART_DISCONNECT"; break;
      case MDC_DEV_FILTER: metric_str = "MDC_DEV_FILTER"; break;
      case MDC_PULS_RATE_ON: metric_str = "MDC_PULS_RATE_ON"; break;
      case MDC_PRESS_BLD_ZERO_COMMAND: metric_str = "MDC_PRESS_BLD_ZERO_COMMAND"; break;
      case MDC_PRESS_BLD_ALARMS_ON: metric_str = "MDC_PRESS_BLD_ALARMS_ON"; break;
      case MDC_PRESS_BLD_LIMITS_CHANGE: metric_str = "MDC_PRESS_BLD_LIMITS_CHANGE"; break;
      case MDC_DEV_WEDGE_MODE: metric_str = "MDC_DEV_WEDGE_MODE"; break;
      case MDC_DEV_WEDGE_STOP: metric_str = "MDC_DEV_WEDGE_STOP"; break;
      case MDC_DEV_WEDGE_NEW: metric_str = "MDC_DEV_WEDGE_NEW"; break;
      case MDC_SAT_O2_SIZE_SELECT: metric_str = "MDC_SAT_O2_SIZE_SELECT"; break;
      case MDC_SAT_O2_AUTO_SIZE: metric_str = "MDC_SAT_O2_AUTO_SIZE"; break;
      case MDC_SAT_O2_LIMITS_CHANGE: metric_str = "MDC_SAT_O2_LIMITS_CHANGE"; break;
      case MDC_TEMP_1_DISABLED: metric_str = "MDC_TEMP_1_DISABLED"; break;
      case MDC_TEMP_2_DISABLED: metric_str = "MDC_TEMP_2_DISABLED"; break;
      case MDC_TEMP_DISPLAY_UNITS: metric_str = "MDC_TEMP_DISPLAY_UNITS"; break;
      case MDC_TEMP_AUDIO_ALARM_ON: metric_str = "MDC_TEMP_AUDIO_ALARM_ON"; break;
      case MDC_TEMP_LIMITS_CHANGE: metric_str = "MDC_TEMP_LIMITS_CHANGE"; break;
      case MDC_OUTPUT_CARD_TEMP_UNITS: metric_str = "MDC_OUTPUT_CARD_TEMP_UNITS"; break;
      case MDC_OUTPUT_CARD_PROG_MODE: metric_str = "MDC_OUTPUT_CARD_PROG_MODE"; break;
      case MDC_OUTPUT_CARD_AUTO_ENABLE: metric_str = "MDC_OUTPUT_CARD_AUTO_ENABLE"; break;
      case MDC_OUTPUT_CARD_MAN_START: metric_str = "MDC_OUTPUT_CARD_MAN_START"; break;
      case MDC_OUTPUT_CARD_MINJ_PROBE: metric_str = "MDC_OUTPUT_CARD_MINJ_PROBE"; break;
      case MDC_OUTPUT_CARD_LIMITS_CHANGE: metric_str = "MDC_OUTPUT_CARD_LIMITS_CHANGE"; break;
      case MDC_PRESS_BLD_NONINV_AUTO_MODE_ON: metric_str = "MDC_PRESS_BLD_NONINV_AUTO_MODE_ON"; break;
      case MDC_PRESS_BLD_NONINV_CLEAR_MESGS: metric_str = "MDC_PRESS_BLD_NONINV_CLEAR_MESGS"; break;
      case MDC_PRESS_BLD_NONINV_STAT_MEAS_ON: metric_str = "MDC_PRESS_BLD_NONINV_STAT_MEAS_ON"; break;
      case MDC_PRESS_BLD_NONINV_CUFF_SIZE: metric_str = "MDC_PRESS_BLD_NONINV_CUFF_SIZE"; break;
      case MDC_PRESS_BLD_NONINV_BURN_IN_MODE: metric_str = "MDC_PRESS_BLD_NONINV_BURN_IN_MODE"; break;
      case MDC_PRESS_BLD_NONINV_CALIB_MODE: metric_str = "MDC_PRESS_BLD_NONINV_CALIB_MODE"; break;
      case MDC_PRESS_BLD_NONINV_SET_ZERO: metric_str = "MDC_PRESS_BLD_NONINV_SET_ZERO"; break;
      case MDC_PRESS_BLD_NONINV_SET_SPAN: metric_str = "MDC_PRESS_BLD_NONINV_SET_SPAN"; break;
      case MDC_PRESS_BLD_NONINV_CALIB_CHECK: metric_str = "MDC_PRESS_BLD_NONINV_CALIB_CHECK"; break;
      case MDC_PRESS_BLD_NONINV_AT_CAL_PRESS: metric_str = "MDC_PRESS_BLD_NONINV_AT_CAL_PRESS"; break;
      case MDC_PRESS_BLD_NONINV_CAK_CHK_PRESS: metric_str = "MDC_PRESS_BLD_NONINV_CAK_CHK_PRESS"; break;
      case MDC_PRESS_BLD_NONINV_GO_STOP: metric_str = "MDC_PRESS_BLD_NONINV_GO_STOP"; break;
      case MDC_PRESS_BLD_NONINV_ALARMS_ON: metric_str = "MDC_PRESS_BLD_NONINV_ALARMS_ON"; break;
      case MDC_PRESS_BLD_NONINV_LIMITS_CHANGE: metric_str = "MDC_PRESS_BLD_NONINV_LIMITS_CHANGE"; break;
      case MDC_DIM_CO2_GAS_TYPE: metric_str = "MDC_DIM_CO2_GAS_TYPE"; break;
      case MDC_CO2_SERVICE_MODE: metric_str = "MDC_CO2_SERVICE_MODE"; break;
      case MDC_CO2_CAL_MODE: metric_str = "MDC_CO2_CAL_MODE"; break;
      case MDC_CO2_UNITS: metric_str = "MDC_CO2_UNITS"; break;
      case MDC_CO2_COMPENSATION_ON: metric_str = "MDC_CO2_COMPENSATION_ON"; break;
      case MDC_CO2_DEVICE_DEPENDENT: metric_str = "MDC_CO2_DEVICE_DEPENDENT"; break;
      case MDC_CO2_SCALE: metric_str = "MDC_CO2_SCALE"; break;
      case MDC_O2_UNIT: metric_str = "MDC_O2_UNIT"; break;
      case MDC_CO2_WAVEFORM_SPEED: metric_str = "MDC_CO2_WAVEFORM_SPEED"; break;
      case MDC_CO2_CLEAR_MESG_COMP: metric_str = "MDC_CO2_CLEAR_MESG_COMP"; break;
      case MDC_CO2_MODULE_TYPE: metric_str = "MDC_CO2_MODULE_TYPE"; break;
      case MDC_SAT_O2_VEN_CALIB_MODE: metric_str = "MDC_SAT_O2_VEN_CALIB_MODE"; break;
      case MDC_SAT_O2_VEN_ACCEPT_NEW_LAB_SAT_VAL: metric_str = "MDC_SAT_O2_VEN_ACCEPT_NEW_LAB_SAT_VAL"; break;
      case MDC_SAT_O2_VEN_CONFIRM_LAB_SAT_VAL: metric_str = "MDC_SAT_O2_VEN_CONFIRM_LAB_SAT_VAL"; break;
      case MDC_SAT_O2_VEN_CANCEL_CALIB: metric_str = "MDC_SAT_O2_VEN_CANCEL_CALIB"; break;
      case MDC_SAT_O2_VEN_CALIB_REQ_VALID: metric_str = "MDC_SAT_O2_VEN_CALIB_REQ_VALID"; break;
      case MDC_SAT_O2_VEN_ALARMS_ON: metric_str = "MDC_SAT_O2_VEN_ALARMS_ON"; break;
      case MDC_SAT_O2_VEN_LIMITS_CHANGE: metric_str = "MDC_SAT_O2_VEN_LIMITS_CHANGE"; break;
      case MDC_GAS_EXP_SUBCODE: metric_str = "MDC_GAS_EXP_SUBCODE"; break;
      case MDC_GAS_VIEW_MIX_ON: metric_str = "MDC_GAS_VIEW_MIX_ON"; break;
      case MDC_GAS_UNITS: metric_str = "MDC_GAS_UNITS"; break;
      case MDC_GAS_CP_BYPASS_ON: metric_str = "MDC_GAS_CP_BYPASS_ON"; break;
      case MDC_GAS_SPEC_SAMPLING: metric_str = "MDC_GAS_SPEC_SAMPLING"; break;
      case MDC_GAS_DEVICE_DEPENDENT: metric_str = "MDC_GAS_DEVICE_DEPENDENT"; break;
      case MDC_GAS_MODULE_TYPE: metric_str = "MDC_GAS_MODULE_TYPE"; break;
      case MDC_GAS_LIMITS_CHANGE: metric_str = "MDC_GAS_LIMITS_CHANGE"; break;
      case MDC_GAS_LIMIT_SUBCODE: metric_str = "MDC_GAS_LIMIT_SUBCODE"; break;
      case MDC_ARTGAS_ABG_MEASURE_START: metric_str = "MDC_ARTGAS_ABG_MEASURE_START"; break;
      case MDC_ARTGAS_SENSOR_INIT_COMPLETE: metric_str = "MDC_ARTGAS_SENSOR_INIT_COMPLETE"; break;
      case MDC_ARTGAS_QA_CHK_BEGIN: metric_str = "MDC_ARTGAS_QA_CHK_BEGIN"; break;
      case MDC_ARTGAS_MEAS_CANCEL: metric_str = "MDC_ARTGAS_MEAS_CANCEL"; break;
      case MDC_ARTGAS_MEAS_TYPE: metric_str = "MDC_ARTGAS_MEAS_TYPE"; break;
      case MDC_ARTGAS_ABG_FLUSH_CONFIRM: metric_str = "MDC_ARTGAS_ABG_FLUSH_CONFIRM"; break;
      case MDC_ARTGAS_QA_CHECK: metric_str = "MDC_ARTGAS_QA_CHECK"; break;
      case MDC_ICG_ECG_VECTOR: metric_str = "MDC_ICG_ECG_VECTOR"; break;
      case MDC_ICG_WAVEFORM_1: metric_str = "MDC_ICG_WAVEFORM_1"; break;
      case MDC_ICG_WAVEFORM_2: metric_str = "MDC_ICG_WAVEFORM_2"; break;
      case MDC_ICG_DATA_AVE: metric_str = "MDC_ICG_DATA_AVE"; break;
      case MDC_ICG_LEADS_CHECK: metric_str = "MDC_ICG_LEADS_CHECK"; break;
      case MDC_ICG_ACTIVE_LEADS_CHK: metric_str = "MDC_ICG_ACTIVE_LEADS_CHK"; break;
      case MDC_ICG_START_AUTO_VECTOR_SEARCH: metric_str = "MDC_ICG_START_AUTO_VECTOR_SEARCH"; break;
      case MDC_ICG_LIMIT_CHANGE: metric_str = "MDC_ICG_LIMIT_CHANGE"; break;
      case MDC_BIS_SMOOTHING_RATE: metric_str = "MDC_BIS_SMOOTHING_RATE"; break;
      case MDC_BIS_IMPED_CHK: metric_str = "MDC_BIS_IMPED_CHK"; break;
      case MDC_BIS_FILTER: metric_str = "MDC_BIS_FILTER"; break;
      case MDC_BIS_SPECTRA_DISPLAY: metric_str = "MDC_BIS_SPECTRA_DISPLAY"; break;
      case MDC_VIS_SPEC_FREQ_RANGE: metric_str = "MDC_VIS_SPEC_FREQ_RANGE"; break;
      case MDC_BIS_POWER_SCALE: metric_str = "MDC_BIS_POWER_SCALE"; break;
      case MDC_EEG_WF_SCALE: metric_str = "MDC_EEG_WF_SCALE"; break;
      case MDC_BIS_SPECT_UPDATE_RATE: metric_str = "MDC_BIS_SPECT_UPDATE_RATE"; break;
      case MDC_BIS_IMPED_TEST: metric_str = "MDC_BIS_IMPED_TEST"; break;
      case MDC_BIS_DSC_TEST: metric_str = "MDC_BIS_DSC_TEST"; break;
      case MDC_BIS_RESUME_BIS: metric_str = "MDC_BIS_RESUME_BIS"; break;
      case MDC_BIS_ARTIFACT_FLAG: metric_str = "MDC_BIS_ARTIFACT_FLAG"; break;
      case MDC_BIS_LIMIT_CHANGE: metric_str = "MDC_BIS_LIMIT_CHANGE"; break;
      case MDC_EEG_DISPLAY_TYPE: metric_str = "MDC_EEG_DISPLAY_TYPE"; break;
      case MDC_EEG_SPECT_DISPLAY: metric_str = "MDC_EEG_SPECT_DISPLAY"; break;
      case MDC_EEG_SPECT_CHANNEL: metric_str = "MDC_EEG_SPECT_CHANNEL"; break;
      case MDC_EEG_SPECTRAL_FREQ: metric_str = "MDC_EEG_SPECTRAL_FREQ"; break;
      case MDC_EEG_50_60_HZ_FILTER: metric_str = "MDC_EEG_50_60_HZ_FILTER"; break;
      case MDC_EEG_LEAD_DETECT: metric_str = "MDC_EEG_LEAD_DETECT"; break;
      case MDC_EEG_MONTAGE_DISPLAY: metric_str = "MDC_EEG_MONTAGE_DISPLAY"; break;
      case MDC_EEG_SPECT_POWER_SCALE: metric_str = "MDC_EEG_SPECT_POWER_SCALE"; break;
      case MDC_EEG_SPECTRA_UPDATE_RATE: metric_str = "MDC_EEG_SPECTRA_UPDATE_RATE"; break;
      case MDC_EEG_IMPED_TEST: metric_str = "MDC_EEG_IMPED_TEST"; break;
      case MDC_EEG_DSC_TEST: metric_str = "MDC_EEG_DSC_TEST"; break;
      case MDC_EEG_HIGH_FILTER: metric_str = "MDC_EEG_HIGH_FILTER"; break;
      case MDC_EEG_LOW_FILTER: metric_str = "MDC_EEG_LOW_FILTER"; break;
      case MDC_EEG_SPECTRAL_SYMM: metric_str = "MDC_EEG_SPECTRAL_SYMM"; break;
      case MDC_EEG_WAVEFORM_SCALE: metric_str = "MDC_EEG_WAVEFORM_SCALE"; break;
      case MDC_EEG_ARTIFACT_CH_1: metric_str = "MDC_EEG_ARTIFACT_CH_1"; break;
      case MDC_EEG_LIMIT_CHANGE: metric_str = "MDC_EEG_LIMIT_CHANGE"; break;
      case MDC_EEG_ARTIFACT_CH_2: metric_str = "MDC_EEG_ARTIFACT_CH_2"; break;
      case MDC_EEG_ARTIFACT_CH_3: metric_str = "MDC_EEG_ARTIFACT_CH_3"; break;
      case MDC_EEG_ARTIFACT_CH_4: metric_str = "MDC_EEG_ARTIFACT_CH_4"; break;
      case MDC_THOR_FLUID_CONTENT: metric_str = "MDC_THOR_FLUID_CONTENT"; break;
      case MDC_CUFF_PRESS: metric_str = "MDC_CUFF_PRESS"; break;
      case MDC_CONC_AWAY_HEL_EXP: metric_str = "MDC_CONC_AWAY_HEL_EXP"; break;
      case MDC_CONC_AWAY_ARG_EXP: metric_str = "MDC_CONC_AWAY_ARG_EXP"; break;
      case MDC_CONC_AWAY_HEL_INSP: metric_str = "MDC_CONC_AWAY_HEL_INSP"; break;
      case MDC_CONC_AWAY_ARG_INSP: metric_str = "MDC_CONC_AWAY_ARG_INSP"; break;
      case MDC_CONC_AWAY_ANESTHETIC_AGENT: metric_str = "MDC_CONC_AWAY_ANESTHETIC_AGENT"; break;
      case MDC_ECG_LEAD_TRACE_1: metric_str = "MDC_ECG_LEAD_TRACE_1"; break;
      case MDC_ECG_12SL_AUTOMODE_INTERVAL: metric_str = "MDC_ECG_12SL_AUTOMODE_INTERVAL"; break;
      case MDC_RESP_THRESHOLD_DETECT: metric_str = "MDC_RESP_THRESHOLD_DETECT"; break;
      case MDC_RESP_MANUAL_SIZE: metric_str = "MDC_RESP_MANUAL_SIZE"; break;
      case MDC_PRESS_BLD_CALIB: metric_str = "MDC_PRESS_BLD_CALIB"; break;
      case MDC_PULS_VOLUME: metric_str = "MDC_PULS_VOLUME"; break;
      case MDC_OUTPUT_CARD_CATH_COMP_FACTOR: metric_str = "MDC_OUTPUT_CARD_CATH_COMP_FACTOR"; break;
      case MDC_OUTPUT_CARD_CATH_SIZE: metric_str = "MDC_OUTPUT_CARD_CATH_SIZE"; break;
      case MDC_OUTPUT_CARD_INJ_VOL: metric_str = "MDC_OUTPUT_CARD_INJ_VOL"; break;
      case MDC_OUTPUT_CARD_TRIAL_SELECT: metric_str = "MDC_OUTPUT_CARD_TRIAL_SELECT"; break;
      case MDC_OUTPUT_CARD_PWS_BT_BASE: metric_str = "MDC_OUTPUT_CARD_PWS_BT_BASE"; break;
      case MDC_OUTPUT_CARD_PWS_START_OFFSET: metric_str = "MDC_OUTPUT_CARD_PWS_START_OFFSET"; break;
      case MDC_VOL_FLUID_TARGET: metric_str = "MDC_VOL_FLUID_TARGET"; break;
      case MDC_INFUS_RAMP_LOWER: metric_str = "MDC_INFUS_RAMP_LOWER"; break;
      case MDC_INFUS_RAMP_UPPER: metric_str = "MDC_INFUS_RAMP_UPPER"; break;
      case MDC_VOL_WITHD_ACTUAL_TOTAL: metric_str = "MDC_VOL_WITHD_ACTUAL_TOTAL"; break;
      case MDC_VOL_FLUID_DELIV_SEC_TARGET: metric_str = "MDC_VOL_FLUID_DELIV_SEC_TARGET"; break;
      case MDC_VOL_FLUID_DELIV_SEC_WITHD: metric_str = "MDC_VOL_FLUID_DELIV_SEC_WITHD"; break;
      case MDC_RATE_INFUS_PRI_LOWER_LIMIT: metric_str = "MDC_RATE_INFUS_PRI_LOWER_LIMIT"; break;
      case MDC_PUMP_ADDRESS: metric_str = "MDC_PUMP_ADDRESS"; break;
      case MDC_TRIGGER_INPUT_PORT_STATUS: metric_str = "MDC_TRIGGER_INPUT_PORT_STATUS"; break;
      case MDC_BRIGHTNESS_LEVEL: metric_str = "MDC_BRIGHTNESS_LEVEL"; break;
      case MDC_FLUID_DILUENT: metric_str = "MDC_FLUID_DILUENT"; break;
      case MDC_PRESS_SYRINGE: metric_str = "MDC_PRESS_SYRINGE"; break;
      case MDC_TARGET_REACHED_STATUS: metric_str = "MDC_TARGET_REACHED_STATUS"; break;
      case MDC_DIRECTION_PORT_STATE: metric_str = "MDC_DIRECTION_PORT_STATE"; break;
      case MDC_CURR_RATE_INFUS_PRI: metric_str = "MDC_CURR_RATE_INFUS_PRI"; break;
      case MDC_CURR_RATE_WITHD_PRI: metric_str = "MDC_CURR_RATE_WITHD_PRI"; break;
      case MDC_SYRINGE_DIAMETER: metric_str = "MDC_SYRINGE_DIAMETER"; break;
      case MDC_INFUS_RAMP_SECONDS: metric_str = "MDC_INFUS_RAMP_SECONDS"; break;
      case MDC_WITHD_RAMP_LOWER: metric_str = "MDC_WITHD_RAMP_LOWER"; break;
      case MDC_WITHD_RAMP_UPPER: metric_str = "MDC_WITHD_RAMP_UPPER"; break;
      case MDC_WITHD_RAMP_SECONDS: metric_str = "MDC_WITHD_RAMP_SECONDS"; break;
      case MDC_RATE_WITHD_PRI: metric_str = "MDC_RATE_WITHD_PRI"; break;
      case MDC_SYRINGE_VOLUME: metric_str = "MDC_SYRINGE_VOLUME"; break;
      case MDC_RATE_INFUS_PRI_UPPER_LIMIT: metric_str = "MDC_RATE_INFUS_PRI_UPPER_LIMIT"; break;
      case MDC_INFUS_FORCE_LEVEL: metric_str = "MDC_INFUS_FORCE_LEVEL"; break;
      case MDC_ECHO_STATE: metric_str = "MDC_ECHO_STATE"; break;
      case MDC_FOOTSWITCH: metric_str = "MDC_FOOTSWITCH"; break;
      case MDC_POLL_MODE_STATE: metric_str = "MDC_POLL_MODE_STATE"; break;
      case MDC_MOTOR_DIRECTION: metric_str = "MDC_MOTOR_DIRECTION"; break;
      case MDC_LIMIT_SWITCH_STATUS: metric_str = "MDC_LIMIT_SWITCH_STATUS"; break;
      case MDC_STALLED_STATUS: metric_str = "MDC_STALLED_STATUS"; break;
      case MDC_TRIGGER_INPUT_STATE: metric_str = "MDC_TRIGGER_INPUT_STATE"; break;
      case MDC_TIME_AWAY_END_EXP_POS_LOW: metric_str = "MDC_TIME_AWAY_END_EXP_POS_LOW"; break;
      case MDC_RESP_RATE_TOTAL: metric_str = "MDC_RESP_RATE_TOTAL"; break;
      case MDC_VOL_AWAY_TIDAL_EXP_SPONT: metric_str = "MDC_VOL_AWAY_TIDAL_EXP_SPONT"; break;
      case MDC_VENT_VOL_PERCENT_LEAK: metric_str = "MDC_VENT_VOL_PERCENT_LEAK"; break;
      case MDC_TEMP_DELTA_BODY: metric_str = "MDC_TEMP_DELTA_BODY"; break;
      case MDC_VENT_TIME_APNEA_INSP_PCV: metric_str = "MDC_VENT_TIME_APNEA_INSP_PCV"; break;
      case MDC_VENT_DATA_SET_STATUS: metric_str = "Setting Data Status"; break;
      case MDC_PRESS_AWAY_DISPLAY_UNITS: return "Displayed Pressure Units"; break;
      case MDC_FLOW_AWAY_DISPLAY_UNITS: return "Displayed Flow Units"; break;
      case MDC_CO2_DISPLAY_UNITS: return "Displayed CO2 Units"; break;
      case MDC_VENT_PRESS_SUPPLY_GAS_DISPLAY_UNITS: return "Displayed Gas Supply Units"; break;
      case MDC_VENT_RESP_EXPENDED_ENERGY_DISPLAY_UNITS: return "Displayed energy expenditure units"; break;
      case MDC_PRESS_AWAY_SOURCE: return "airway pressure measurement source"; break;
      case MDC_FLOW_AWAY_SOURCE: return "flow measurement source"; break;
      case MDC_VENT_VOL_SOURCE: return "volume source"; break;
      case MDC_VENT_O2_MEAS_SOURCE: return "O2 measurement source"; break;
      case MDC_VENT_DATA_MEAS_STATUS_TIME: return "Measured Data Status: Timing"; break;
      case MDC_VENT_DATA_MEAS_STATUS_MECH: return "Measured Data Status: Mechanical"; break;
      case MDC_VENT_DATA_MEAS_STATUS_TRIGGER: return "Measured Data Status: Trigger"; break;
      case MDC_VENT_DATA_MEAS_STATUS_PSV: return "Measured Data Status: PSV"; break;
      default: break;
    }
    return metric_str;
  }

private:
  // Disallow use of implicitly generated member functions:
  MetricIDUtil(const MetricIDUtil &src);
  MetricIDUtil &operator=(const MetricIDUtil &rhs);

  MetricIDUtil(){}
  ~MetricIDUtil(){}
};

#endif
