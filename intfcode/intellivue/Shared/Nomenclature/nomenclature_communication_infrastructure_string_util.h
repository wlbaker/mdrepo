/**
 * @file iso_ieee_11073_part_10101_nomenclature_communication_infrastructure.h
 * 
 * @brief String converter for nomenclature from 11073 part 10101. This header
 * includes communication infrastructure nomenclature. This header is intended
 * to be shared by software which uses 11073 nomenclature.
 * 
 * @see ISO/IEEE 11073-10101:2004(E) HEALTH INFORMATICS —
 * POINT-OF-CARE MEDICAL DEVICE COMMUNICATION
 * 
 * @author Robert England
 * 
 */
//=============================================================================

#ifndef ISO_IEEE_11073_PART_10101_NOMENCLATURE_COMMUNICATION_INFRASTRUCTURE_H_
#define ISO_IEEE_11073_PART_10101_NOMENCLATURE_COMMUNICATION_INFRASTRUCTURE_H_

/**
 * @see ISO/IEEE 11073-10101:2004(E) HEALTH INFORMATICS —
 * POINT-OF-CARE MEDICAL DEVICE COMMUNICATION
 * B.9 Communication Infrastructure
 */

/**
 * Partition:	PROFsupp
 * Description	Profile Support descriptor
 */
#define MDC_POLL_PROFILE_SUPPORT	1	/*	5619	*/
#define MDC_BASELINE_PROFILE_SUPPORT	2	/*	5618	*/

/**
 * Partition:	SYSspec component
 * Description	Profile Support descriptor
 */
#define MDC_MED_DEV_SPEC_STD_SUPPORT	257	/*	5617	*/
#define MDC_MDIB_OBJ_SUPPORT	258	/*	5620	*/

/**
 * Partition:	DIF
 * Description	Device Interface
 */
#define MDC_CC_DIF	513	/*	5457	*/

/**
 * Partition:	MIBelem
 * Description	Mgmt Info Bases (MIB) Elements
 */
#define MDC_CC_MIB_ELEM	1025	/*	5458	*/
#define MDC_CC_MIB_ELEM_DIF	1026	/*	5471	*/
#define MDC_CC_MIB_ELEM_GEN_COMM_STATS	1027	/*	5460	*/
#define MDC_CC_MIB_ELEM_P1073_3_1_PORT_CFG	1028	/*	5472	*/
#define MDC_CC_MIB_ELEM_P1073_3_1_LINK_ACC	1029	/*	5473	*/
#define MDC_CC_MIB_ELEM_P1073_3_1_PERF_CURR	1030	/*	5474	*/
#define MDC_CC_MIB_ELEM_P1073_3_1_CONFIG_PHYS	1031	/*	5475	*/
#define MDC_CC_MIB_ELEM_P1073_3_1_FAULT_THRES	1032	/*	5476	*/
#define MDC_CC_MIB_ELEM_P1073_3_2_CONFIG	1033	/*	5477	*/

/**
 * Partition:	MIBdata
 * Description	MIB data (Attributes)
 */
#define MDC_CC_MIB_DATA_DIF_ID	2049	/*	5478	*/
#define MDC_CC_MIB_DATA_DIF_PORT_ST	2050	/*	5548	*/
#define MDC_CC_MIB_DATA_DIF_TYPE	2051	/*	5549	*/
#define MDC_CC_MIB_DATA_PROFILE_ID	2052	/*	5550	*/
#define MDC_CC_MIB_DATA_SUPP_PROFILES	2053	/*	5551	*/
#define MDC_CC_MIB_DATA_MTU	2054	/*	5552	*/
#define MDC_CC_MIB_DATA_LINK_SPEED	2055	/*	5553	*/
#define MDC_CC_MIB_DATA_MIB_ELEM_LIST	2056	/*	5554	*/
#define MDC_CC_MIB_DATA_PACK_IN	2057	/*	5555	*/
#define MDC_CC_MIB_DATA_PACK_OUT	2058	/*	5556	*/
#define MDC_CC_MIB_DATA_OCT_IN	2059	/*	5557	*/
#define MDC_CC_MIB_DATA_OCT_OUT	2060	/*	5558	*/
#define MDC_CC_MIB_DATA_DISC_PACK_IN	2061	/*	5559	*/
#define MDC_CC_MIB_DATA_DISC_PACK_OUT	2062	/*	5560	*/
#define MDC_CC_MIB_DATA_UNK_PROT_PACK_IN	2063	/*	5561	*/
#define MDC_CC_MIB_DATA_QUEUE_LEN_IN	2064	/*	5562	*/
#define MDC_CC_MIB_DATA_QUEUE_LEN_OUT	2065	/*	5563	*/
#define MDC_CC_MIB_DATA_DIF_STATE	2066	/*	5564	*/
#define MDC_CC_MIB_DATA_CUR_DIF_STATE	2067	/*	5565	*/
#define MDC_CC_MIB_DATA_TIME_DIF_LAST_CHANGE	2068	/*	5566	*/
#define MDC_CC_MIB_DATA_ERRS_IN	2069	/*	5567	*/
#define MDC_CC_MIB_DATA_ERRS_OUT	2070	/*	5568	*/
#define MDC_CC_MIB_DATA_COMM_MODE	2071	/*	5569	*/
#define MDC_CC_MIB_DATA_AVG_SPEED	2072	/*	5570	*/
#define MDC_CC_MIB_DATA_MAX_SPEED	2073	/*	5571	*/
#define MDC_CC_MIB_DATA_MAX_TX_LEN	2074	/*	5572	*/
#define MDC_CC_MIB_DATA_MAX_RX_LEN	2075	/*	5573	*/
#define MDC_CC_MIB_DATA_POLL_PERIOD	2076	/*	5574	*/
#define MDC_CC_MIB_DATA_TOT_BIT_RATE	2077	/*	5575	*/
#define MDC_CC_MIB_DATA_ID_PORT	2078	/*	5576	*/
#define MDC_CC_MIB_DATA_LINK_TIME	2079	/*	5577	*/
#define MDC_CC_MIB_DATA_LINK_STAT	2080	/*	5578	*/
#define MDC_CC_MIB_DATA_MGM_TIME	2081	/*	5579	*/
#define MDC_CC_MIB_DATA_MGM_STAT	2082	/*	5580	*/
#define MDC_CC_MIB_DATA_FRAMES_SENT	2083	/*	5581	*/
#define MDC_CC_MIB_DATA_FRAMES_RECV	2084	/*	5582	*/
#define MDC_CC_MIB_DATA_U_FRAMES_SENT	2085	/*	5583	*/
#define MDC_CC_MIB_DATA_U_FRAMES_RECV	2086	/*	5584	*/
#define MDC_CC_MIB_DATA_UI_FRAMES_SENT	2087	/*	5585	*/
#define MDC_CC_MIB_DATA_UI_FRAMES_RECV	2088	/*	5586	*/
#define MDC_CC_MIB_DATA_I_FRAMES_SENT	2089	/*	5587	*/
#define MDC_CC_MIB_DATA_I_FRAMES_RECV	2090	/*	5588	*/
#define MDC_CC_MIB_DATA_BYTES_SENT	2091	/*	5589	*/
#define MDC_CC_MIB_DATA_BYTES_RECV	2092	/*	5590	*/
#define MDC_CC_MIB_DATA_INT_BYTES_SENT	2093	/*	5592	*/
#define MDC_CC_MIB_DATA_INT_BYTES_RECV	2094	/*	5593	*/
#define MDC_CC_MIB_DATA_FRAMES_OUT_ABRT	2095	/*	5594	*/
#define MDC_CC_MIB_DATA_PHYS_CAPAB	2096	/*	5595	*/
#define MDC_CC_MIB_DATA_MAX_CURRENT_RATING	2097	/*	5596	*/
#define MDC_CC_MIB_DATA_FRAMES_SENT_LIM	2098	/*	5597	*/
#define MDC_CC_MIB_DATA_FRAMES_RECV_LIM	2099	/*	5598	*/
#define MDC_CC_MIB_DATA_U_FRAMES_SENT_LIM	2100	/*	5599	*/
#define MDC_CC_MIB_DATA_U_FRAMES_RECV_LIM	2101	/*	5600	*/
#define MDC_CC_MIB_DATA_UI_FRAMES_SENT_LIM	2102	/*	5601	*/
#define MDC_CC_MIB_DATA_UI_FRAMES_RECV_LIM	2103	/*	5602	*/
#define MDC_CC_MIB_DATA_I_FRAMES_SENT_LIM	2104	/*	5603	*/
#define MDC_CC_MIB_DATA_I_FRAMES_RECV_LIM	2105	/*	5604	*/
#define MDC_CC_MIB_DATA_BYTES_SENT_LIM	2106	/*	5605	*/
#define MDC_CC_MIB_DATA_BYTES_RECV_LIM	2107	/*	5606	*/
#define MDC_CC_MIB_DATA_INT_BYTES_SENT_LIM	2108	/*	5607	*/
#define MDC_CC_MIB_DATA_INT_BYTES_RECV_LIM	2109	/*	5608	*/
#define MDC_CC_MIB_DATA_FRAMES_OUT_ABRT_LIM	2110	/*	5609	*/
#define MDC_CC_MIB_DATA_BAUD_RATE	2111	/*	5610	*/
#define MDC_CC_MIB_DATA_MAX_TURN_AROUND_TIME	2112	/*	5611	*/
#define MDC_CC_MIB_DATA_DATA_SIZE	2113	/*	5612	*/
#define MDC_CC_MIB_DATA_WINDOW_SIZE	2114	/*	5613	*/
#define MDC_CC_MIB_DATA_ADDIT_BOF	2115	/*	5614	*/
#define MDC_CC_MIB_DATA_LINK_DISCON_TIME	2116	/*	5615	*/
#define MDC_CC_MIB_DATA_LINK_THRSHLD_TIME	2117	/*	5616	*/
#define MDC_CC_MIB_DATA_DIF_PORT_NO	2318	/*	5719	*/

/**
 * Partition:	DEVspec
 * Description	Device Specialization
 */
#define MDC_DEV_SPEC_PROFILE_INFUS	4097	/*	5622	*/
#define MDC_DEV_SPEC_PROFILE_VENT	4098	/*	5623	*/
#define MDC_DEV_SPEC_PROFILE_VS_MON	4099	/*	5624	*/
#define MDC_DEV_SPEC_PROFILE_PULS_OXIM	4100	/*	5625	*/
#define MDC_DEV_SPEC_PROFILE_DEFIB	4101	/*	5626	*/
#define MDC_DEV_SPEC_PROFILE_ECG	4102	/*	5627	*/
#define MDC_DEV_SPEC_PROFILE_BP	4103	/*	5628	*/
#define MDC_DEV_SPEC_PROFILE_TEMP	4104	/*	5629	*/
#define MDC_DEV_SPEC_PROFILE_AIRWAY_FLOW	4105	/*	5630	*/
#define MDC_DEV_SPEC_PROFILE_CARD_OUT	4106	/*	5631	*/
#define MDC_DEV_SPEC_PROFILE_CAPNOM	4107	/*	5632	*/
#define MDC_DEV_SPEC_PROFILE_CALC_HEMO	4108	/*	5633	*/
#define MDC_DEV_SPEC_PROFILE_CALC_PULM	4109	/*	5634	*/
#define MDC_DEV_SPEC_PROFILE_RESP	4110	/*	5635	*/
#define MDC_DEV_SPEC_PROFILE_SCALE	4111	/*	5636	*/

class MIBNomenclatureUtil
{
public:
  const static std::string MIBIDToString(const long id)
  {
    std::string str;
    switch(id)
    {
      case MDC_CC_MIB_ELEM: str = "MDC_CC_MIB_ELEM"; break;
      case MDC_CC_MIB_ELEM_DIF: str = "MDC_CC_MIB_ELEM_DIF"; break;
      case MDC_CC_MIB_ELEM_GEN_COMM_STATS: str = "MDC_CC_MIB_ELEM_GEN_COMM_STATS"; break;
      case MDC_CC_MIB_ELEM_P1073_3_1_PORT_CFG: str = "MDC_CC_MIB_ELEM_P1073_3_1_PORT_CFG"; break;
      case MDC_CC_MIB_ELEM_P1073_3_1_LINK_ACC: str = "MDC_CC_MIB_ELEM_P1073_3_1_LINK_ACC"; break;
      case MDC_CC_MIB_ELEM_P1073_3_1_PERF_CURR: str = "MDC_CC_MIB_ELEM_P1073_3_1_PERF_CURR"; break;
      case MDC_CC_MIB_ELEM_P1073_3_1_CONFIG_PHYS: str = "MDC_CC_MIB_ELEM_P1073_3_1_CONFIG_PHYS"; break;
      case MDC_CC_MIB_ELEM_P1073_3_1_FAULT_THRES: str = "MDC_CC_MIB_ELEM_P1073_3_1_FAULT_THRES"; break;
      case MDC_CC_MIB_ELEM_P1073_3_2_CONFIG: str = "MDC_CC_MIB_ELEM_P1073_3_2_CONFIG"; break;
      case MDC_CC_MIB_DATA_DIF_ID: str = "MDC_CC_MIB_DATA_DIF_ID"; break;
      case MDC_CC_MIB_DATA_DIF_PORT_ST: str = "MDC_CC_MIB_DATA_DIF_PORT_ST"; break;
      case MDC_CC_MIB_DATA_DIF_TYPE: str = "MDC_CC_MIB_DATA_DIF_TYPE"; break;
      case MDC_CC_MIB_DATA_PROFILE_ID: str = "MDC_CC_MIB_DATA_PROFILE_ID"; break;
      case MDC_CC_MIB_DATA_SUPP_PROFILES: str = "MDC_CC_MIB_DATA_SUPP_PROFILES"; break;
      case MDC_CC_MIB_DATA_MTU: str = "MDC_CC_MIB_DATA_MTU"; break;
      case MDC_CC_MIB_DATA_LINK_SPEED: str = "MDC_CC_MIB_DATA_LINK_SPEED"; break;
      case MDC_CC_MIB_DATA_MIB_ELEM_LIST: str = "MDC_CC_MIB_DATA_MIB_ELEM_LIST"; break;
      case MDC_CC_MIB_DATA_PACK_IN: str = "MDC_CC_MIB_DATA_PACK_IN"; break;
      case MDC_CC_MIB_DATA_PACK_OUT: str = "MDC_CC_MIB_DATA_PACK_OUT"; break;
      case MDC_CC_MIB_DATA_OCT_IN: str = "MDC_CC_MIB_DATA_OCT_IN"; break;
      case MDC_CC_MIB_DATA_OCT_OUT: str = "MDC_CC_MIB_DATA_OCT_OUT"; break;
      case MDC_CC_MIB_DATA_DISC_PACK_IN: str = "MDC_CC_MIB_DATA_DISC_PACK_IN"; break;
      case MDC_CC_MIB_DATA_DISC_PACK_OUT: str = "MDC_CC_MIB_DATA_DISC_PACK_OUT"; break;
      case MDC_CC_MIB_DATA_UNK_PROT_PACK_IN: str = "MDC_CC_MIB_DATA_UNK_PROT_PACK_IN"; break;
      case MDC_CC_MIB_DATA_QUEUE_LEN_IN: str = "MDC_CC_MIB_DATA_QUEUE_LEN_IN"; break;
      case MDC_CC_MIB_DATA_QUEUE_LEN_OUT: str = "MDC_CC_MIB_DATA_QUEUE_LEN_OUT"; break;
      case MDC_CC_MIB_DATA_DIF_STATE: str = "MDC_CC_MIB_DATA_DIF_STATE"; break;
      case MDC_CC_MIB_DATA_CUR_DIF_STATE: str = "MDC_CC_MIB_DATA_CUR_DIF_STATE"; break;
      case MDC_CC_MIB_DATA_TIME_DIF_LAST_CHANGE: str = "MDC_CC_MIB_DATA_TIME_DIF_LAST_CHANGE"; break;
      case MDC_CC_MIB_DATA_ERRS_IN: str = "MDC_CC_MIB_DATA_ERRS_IN"; break;
      case MDC_CC_MIB_DATA_ERRS_OUT: str = "MDC_CC_MIB_DATA_ERRS_OUT"; break;
      case MDC_CC_MIB_DATA_COMM_MODE: str = "MDC_CC_MIB_DATA_COMM_MODE"; break;
      case MDC_CC_MIB_DATA_AVG_SPEED: str = "MDC_CC_MIB_DATA_AVG_SPEED"; break;
      case MDC_CC_MIB_DATA_MAX_SPEED: str = "MDC_CC_MIB_DATA_MAX_SPEED"; break;
      case MDC_CC_MIB_DATA_MAX_TX_LEN: str = "MDC_CC_MIB_DATA_MAX_TX_LEN"; break;
      case MDC_CC_MIB_DATA_MAX_RX_LEN: str = "MDC_CC_MIB_DATA_MAX_RX_LEN"; break;
      case MDC_CC_MIB_DATA_POLL_PERIOD: str = "MDC_CC_MIB_DATA_POLL_PERIOD"; break;
      case MDC_CC_MIB_DATA_TOT_BIT_RATE: str = "MDC_CC_MIB_DATA_TOT_BIT_RATE"; break;
      case MDC_CC_MIB_DATA_ID_PORT: str = "MDC_CC_MIB_DATA_ID_PORT"; break;
      case MDC_CC_MIB_DATA_LINK_TIME: str = "MDC_CC_MIB_DATA_LINK_TIME"; break;
      case MDC_CC_MIB_DATA_LINK_STAT: str = "MDC_CC_MIB_DATA_LINK_STAT"; break;
      case MDC_CC_MIB_DATA_MGM_TIME: str = "MDC_CC_MIB_DATA_MGM_TIME"; break;
      case MDC_CC_MIB_DATA_MGM_STAT: str = "MDC_CC_MIB_DATA_MGM_STAT"; break;
      case MDC_CC_MIB_DATA_FRAMES_SENT: str = "MDC_CC_MIB_DATA_FRAMES_SENT"; break;
      case MDC_CC_MIB_DATA_FRAMES_RECV: str = "MDC_CC_MIB_DATA_FRAMES_RECV"; break;
      case MDC_CC_MIB_DATA_U_FRAMES_SENT: str = "MDC_CC_MIB_DATA_U_FRAMES_SENT"; break;
      case MDC_CC_MIB_DATA_U_FRAMES_RECV: str = "MDC_CC_MIB_DATA_U_FRAMES_RECV"; break;
      case MDC_CC_MIB_DATA_UI_FRAMES_SENT: str = "MDC_CC_MIB_DATA_UI_FRAMES_SENT"; break;
      case MDC_CC_MIB_DATA_UI_FRAMES_RECV: str = "MDC_CC_MIB_DATA_UI_FRAMES_RECV"; break;
      case MDC_CC_MIB_DATA_I_FRAMES_SENT: str = "MDC_CC_MIB_DATA_I_FRAMES_SENT"; break;
      case MDC_CC_MIB_DATA_I_FRAMES_RECV: str = "MDC_CC_MIB_DATA_I_FRAMES_RECV"; break;
      case MDC_CC_MIB_DATA_BYTES_SENT: str = "MDC_CC_MIB_DATA_BYTES_SENT"; break;
      case MDC_CC_MIB_DATA_BYTES_RECV: str = "MDC_CC_MIB_DATA_BYTES_RECV"; break;
      case MDC_CC_MIB_DATA_INT_BYTES_SENT: str = "MDC_CC_MIB_DATA_INT_BYTES_SENT"; break;
      case MDC_CC_MIB_DATA_INT_BYTES_RECV: str = "MDC_CC_MIB_DATA_INT_BYTES_RECV"; break;
      case MDC_CC_MIB_DATA_FRAMES_OUT_ABRT: str = "MDC_CC_MIB_DATA_FRAMES_OUT_ABRT"; break;
      case MDC_CC_MIB_DATA_PHYS_CAPAB: str = "MDC_CC_MIB_DATA_PHYS_CAPAB"; break;
      case MDC_CC_MIB_DATA_MAX_CURRENT_RATING: str = "MDC_CC_MIB_DATA_MAX_CURRENT_RATING"; break;
      case MDC_CC_MIB_DATA_FRAMES_SENT_LIM: str = "MDC_CC_MIB_DATA_FRAMES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_FRAMES_RECV_LIM: str = "MDC_CC_MIB_DATA_FRAMES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_U_FRAMES_SENT_LIM: str = "MDC_CC_MIB_DATA_U_FRAMES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_U_FRAMES_RECV_LIM: str = "MDC_CC_MIB_DATA_U_FRAMES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_UI_FRAMES_SENT_LIM: str = "MDC_CC_MIB_DATA_UI_FRAMES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_UI_FRAMES_RECV_LIM: str = "MDC_CC_MIB_DATA_UI_FRAMES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_I_FRAMES_SENT_LIM: str = "MDC_CC_MIB_DATA_I_FRAMES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_I_FRAMES_RECV_LIM: str = "MDC_CC_MIB_DATA_I_FRAMES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_BYTES_SENT_LIM: str = "MDC_CC_MIB_DATA_BYTES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_BYTES_RECV_LIM: str = "MDC_CC_MIB_DATA_BYTES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_INT_BYTES_SENT_LIM: str = "MDC_CC_MIB_DATA_INT_BYTES_SENT_LIM"; break;
      case MDC_CC_MIB_DATA_INT_BYTES_RECV_LIM: str = "MDC_CC_MIB_DATA_INT_BYTES_RECV_LIM"; break;
      case MDC_CC_MIB_DATA_FRAMES_OUT_ABRT_LIM: str = "MDC_CC_MIB_DATA_FRAMES_OUT_ABRT_LIM"; break;
      case MDC_CC_MIB_DATA_BAUD_RATE: str = "MDC_CC_MIB_DATA_BAUD_RATE"; break;
      case MDC_CC_MIB_DATA_MAX_TURN_AROUND_TIME: str = "MDC_CC_MIB_DATA_MAX_TURN_AROUND_TIME"; break;
      case MDC_CC_MIB_DATA_DATA_SIZE: str = "MDC_CC_MIB_DATA_DATA_SIZE"; break;
      case MDC_CC_MIB_DATA_WINDOW_SIZE: str = "MDC_CC_MIB_DATA_WINDOW_SIZE"; break;
      case MDC_CC_MIB_DATA_ADDIT_BOF: str = "MDC_CC_MIB_DATA_ADDIT_BOF"; break;
      case MDC_CC_MIB_DATA_LINK_DISCON_TIME: str = "MDC_CC_MIB_DATA_LINK_DISCON_TIME"; break;
      case MDC_CC_MIB_DATA_LINK_THRSHLD_TIME: str = "MDC_CC_MIB_DATA_LINK_THRSHLD_TIME"; break;
      case MDC_CC_MIB_DATA_DIF_PORT_NO: str = "MDC_CC_MIB_DATA_DIF_PORT_NO"; break;
      default: break;
    }
    return str;
  }

private:
  // Disallow use of implicitly generated member functions:
  MIBNomenclatureUtil(const MIBNomenclatureUtil &src);
  MIBNomenclatureUtil &operator=(const MIBNomenclatureUtil &rhs);
  
  MIBNomenclatureUtil(){}
  ~MIBNomenclatureUtil(){}
};

#endif