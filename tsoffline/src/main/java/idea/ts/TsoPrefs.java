//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package idea.ts;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tso-prefs complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="tso-prefs">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="title" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="analysis" type="{http://idea.mil/ts}ts-analysis" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="codes" type="{http://idea.mil/ts}ts-code" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="filters" type="{http://idea.mil/ts}ts-filter" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="attributes" type="{http://idea.mil/ts}tso-attributeType" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tso-prefs", propOrder = {
    "title",
    "analysis",
    "codes",
    "filters",
    "attributes"
})
public class TsoPrefs {

    @XmlElement(required = true)
    protected String title;
    protected List<TsAnalysis> analysis;
    protected List<TsCode> codes;
    protected List<TsFilter> filters;
    protected List<TsoAttributeType> attributes;

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the analysis property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the analysis property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAnalysis().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TsAnalysis }
     * </p>
     * 
     * 
     * @return
     *     The value of the analysis property.
     */
    public List<TsAnalysis> getAnalysis() {
        if (analysis == null) {
            analysis = new ArrayList<>();
        }
        return this.analysis;
    }

    /**
     * Gets the value of the codes property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the codes property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getCodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TsCode }
     * </p>
     * 
     * 
     * @return
     *     The value of the codes property.
     */
    public List<TsCode> getCodes() {
        if (codes == null) {
            codes = new ArrayList<>();
        }
        return this.codes;
    }

    /**
     * Gets the value of the filters property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the filters property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getFilters().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TsFilter }
     * </p>
     * 
     * 
     * @return
     *     The value of the filters property.
     */
    public List<TsFilter> getFilters() {
        if (filters == null) {
            filters = new ArrayList<>();
        }
        return this.filters;
    }

    /**
     * Gets the value of the attributes property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attributes property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAttributes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TsoAttributeType }
     * </p>
     * 
     * 
     * @return
     *     The value of the attributes property.
     */
    public List<TsoAttributeType> getAttributes() {
        if (attributes == null) {
            attributes = new ArrayList<>();
        }
        return this.attributes;
    }
    
        
        
        
        /**
	 * Gets the value of a single named attribute.
	 * 
	 * @param key 
	 * 
	 * <p>
	 * This accessor method returns a the string value of the named attribute.  The typ field of the attribute is ignored.
	 * 
	 */
	public String getAttribute(String key) {
		if (attributes != null) {

			for (TsoAttributeType attrib : attributes) {
				if (key.equals(attrib.getKey())) {
					return attrib.value;
				}
			}
		}
		return null;
	}

        /**
	 * Sets the value of a single named attribute.
	 * 
	 * <p>
	 * This method sets the string value of the named attribute.  If the attribute is not found
	 * it will be created.  The typ field of the attribute is ignored.
	 * 
	 */
	public void putAttribute(String key, String value) {
		List<TsoAttributeType> attribs = getAttributes();

		for (TsoAttributeType attrib : attribs) {
			if (key.equals(attrib.getKey())) {
				attrib.setValue(value);
				return;
			}
		}

		TsoAttributeType attrib = new TsoAttributeType();
		attrib.setKey(key);
		attrib.setValue(value);
		attribs.add( attrib );
		return;
	}
        
}
