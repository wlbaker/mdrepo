/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: model/medsys3.proto */

#ifndef PROTOBUF_C_model_2fmedsys3_2eproto__INCLUDED
#define PROTOBUF_C_model_2fmedsys3_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Medsys3__Ident Medsys3__Ident;
typedef struct _Medsys3__Status Medsys3__Status;
typedef struct _Medsys3__Measurement Medsys3__Measurement;
typedef struct _Medsys3__Sigevent Medsys3__Sigevent;


/* --- enums --- */


/* --- messages --- */

struct  _Medsys3__Ident
{
  ProtobufCMessage base;
  /*
   *[9]  ??
   */
  char *model;
  /*
   * 23_03  (see page A-15)
   */
  char *serial_no;
  /*
   * 24_03  (see page A-15)
   */
  char *hospital_id;
  /*
   * 4C_03  (see page A-16)
   */
  char *sw_expire;
  /*
   * CE_03  (see page A-16)
   */
  char *sw_version;
};
#define MEDSYS3__IDENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&medsys3__ident__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Medsys3__Status
{
  ProtobufCMessage base;
  /*
   *  int32 pa_rate       = 5;  // 00_00 ... rate setting
   *  int32 pb_rate       = 6;  // 00_00
   *  int32 pc_rate       = 7;  // 00_00
   */
  /*
   * 29_00
   */
  char *drug_a;
  /*
   * 29_01
   */
  char *drug_b;
  /*
   * 29_02
   */
  char *drug_c;
};
#define MEDSYS3__STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&medsys3__status__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Medsys3__Measurement
{
  ProtobufCMessage base;
  /*
   * 0D_03
   */
  int32_t ins_status;
  /*
   * 0D_00
   */
  int32_t pa_dev_status;
  /*
   * 0D_01
   */
  int32_t pb_dev_status;
  /*
   * 0D_02
   */
  int32_t pc_dev_status;
  /*
   * 0F_00
   */
  int32_t pa_inf_status;
  /*
   * 0F_01
   */
  int32_t pb_inf_status;
  /*
   * 0F_02
   */
  int32_t pc_inf_status;
  /*
   * C0_00 ...rate measurement
   */
  int32_t pa_rate;
  /*
   * C0_01
   */
  int32_t pb_rate;
  /*
   * C0_02
   */
  int32_t pc_rate;
  /*
   * 0A_00
   */
  int32_t pa_infused;
  /*
   * 0A_01
   */
  int32_t pb_infused;
  /*
   * 0A_02
   */
  int32_t pc_infused;
  /*
   * 0B_00
   */
  int32_t pa_sec_infused;
  /*
   * 0B_01
   */
  int32_t pb_sec_infused;
  /*
   * 0B_02
   */
  int32_t pc_sec_infused;
};
#define MEDSYS3__MEASUREMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&medsys3__measurement__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Medsys3__Sigevent
{
  ProtobufCMessage base;
  int32_t code;
  int32_t pump;
  int32_t aaf_type;
  int32_t aaf_index;
};
#define MEDSYS3__SIGEVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&medsys3__sigevent__descriptor) \
    , 0, 0, 0, 0 }


/* Medsys3__Ident methods */
void   medsys3__ident__init
                     (Medsys3__Ident         *message);
size_t medsys3__ident__get_packed_size
                     (const Medsys3__Ident   *message);
size_t medsys3__ident__pack
                     (const Medsys3__Ident   *message,
                      uint8_t             *out);
size_t medsys3__ident__pack_to_buffer
                     (const Medsys3__Ident   *message,
                      ProtobufCBuffer     *buffer);
Medsys3__Ident *
       medsys3__ident__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   medsys3__ident__free_unpacked
                     (Medsys3__Ident *message,
                      ProtobufCAllocator *allocator);
/* Medsys3__Status methods */
void   medsys3__status__init
                     (Medsys3__Status         *message);
size_t medsys3__status__get_packed_size
                     (const Medsys3__Status   *message);
size_t medsys3__status__pack
                     (const Medsys3__Status   *message,
                      uint8_t             *out);
size_t medsys3__status__pack_to_buffer
                     (const Medsys3__Status   *message,
                      ProtobufCBuffer     *buffer);
Medsys3__Status *
       medsys3__status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   medsys3__status__free_unpacked
                     (Medsys3__Status *message,
                      ProtobufCAllocator *allocator);
/* Medsys3__Measurement methods */
void   medsys3__measurement__init
                     (Medsys3__Measurement         *message);
size_t medsys3__measurement__get_packed_size
                     (const Medsys3__Measurement   *message);
size_t medsys3__measurement__pack
                     (const Medsys3__Measurement   *message,
                      uint8_t             *out);
size_t medsys3__measurement__pack_to_buffer
                     (const Medsys3__Measurement   *message,
                      ProtobufCBuffer     *buffer);
Medsys3__Measurement *
       medsys3__measurement__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   medsys3__measurement__free_unpacked
                     (Medsys3__Measurement *message,
                      ProtobufCAllocator *allocator);
/* Medsys3__Sigevent methods */
void   medsys3__sigevent__init
                     (Medsys3__Sigevent         *message);
size_t medsys3__sigevent__get_packed_size
                     (const Medsys3__Sigevent   *message);
size_t medsys3__sigevent__pack
                     (const Medsys3__Sigevent   *message,
                      uint8_t             *out);
size_t medsys3__sigevent__pack_to_buffer
                     (const Medsys3__Sigevent   *message,
                      ProtobufCBuffer     *buffer);
Medsys3__Sigevent *
       medsys3__sigevent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   medsys3__sigevent__free_unpacked
                     (Medsys3__Sigevent *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Medsys3__Ident_Closure)
                 (const Medsys3__Ident *message,
                  void *closure_data);
typedef void (*Medsys3__Status_Closure)
                 (const Medsys3__Status *message,
                  void *closure_data);
typedef void (*Medsys3__Measurement_Closure)
                 (const Medsys3__Measurement *message,
                  void *closure_data);
typedef void (*Medsys3__Sigevent_Closure)
                 (const Medsys3__Sigevent *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor medsys3__ident__descriptor;
extern const ProtobufCMessageDescriptor medsys3__status__descriptor;
extern const ProtobufCMessageDescriptor medsys3__measurement__descriptor;
extern const ProtobufCMessageDescriptor medsys3__sigevent__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_model_2fmedsys3_2eproto__INCLUDED */
