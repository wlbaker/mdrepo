/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ni_DAQmx_MxAnalogMultiChannelReader */

#ifndef _Included_ni_DAQmx_MxAnalogMultiChannelReader
#define _Included_ni_DAQmx_MxAnalogMultiChannelReader
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ni_DAQmx_MxAnalogMultiChannelReader
 * Method:    beginReadWaveform
 * Signature: (ILni/DAQcommon/AsyncCallback;Ljava/lang/Object;)Lni/DAQcommon/IAsyncResult;
 */
JNIEXPORT jobject JNICALL Java_ni_DAQmx_MxAnalogMultiChannelReader_beginReadWaveform
  (JNIEnv *, jobject, jint, jobject, jobject);

/*
 * Class:     ni_DAQmx_MxAnalogMultiChannelReader
 * Method:    endReadWaveform
 * Signature: (Lni/DAQcommon/IAsyncResult;)[Lni/DAQcommon/AnalogWaveform;
 */
JNIEXPORT jobjectArray JNICALL Java_ni_DAQmx_MxAnalogMultiChannelReader_endReadWaveform
  (JNIEnv *, jobject, jobject);

/*
 * Class:     ni_DAQmx_MxAnalogMultiChannelReader
 * Method:    readSingleSample
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ni_DAQmx_MxAnalogMultiChannelReader_readSingleSample
  (JNIEnv *, jobject);

/*
 * Class:     ni_DAQmx_MxAnalogMultiChannelReader
 * Method:    readWaveform
 * Signature: (I)[Lni/DAQcommon/AnalogWaveform;
 */
JNIEXPORT jobjectArray JNICALL Java_ni_DAQmx_MxAnalogMultiChannelReader_readWaveform
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
