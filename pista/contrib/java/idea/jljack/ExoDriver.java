/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package idea.jljack;

public class ExoDriver implements ExoDriverConstants {
  public static float LJUSB_GetLibraryVersion() {
    return ExoDriverJNI.LJUSB_GetLibraryVersion();
  }

  public static long LJUSB_GetDevCount(long ProductID) {
    return ExoDriverJNI.LJUSB_GetDevCount(ProductID);
  }

  public static long LJUSB_GetDevCounts(SWIGTYPE_p_unsigned_int productCounts, SWIGTYPE_p_unsigned_int productIds, long n) {
    return ExoDriverJNI.LJUSB_GetDevCounts(SWIGTYPE_p_unsigned_int.getCPtr(productCounts), SWIGTYPE_p_unsigned_int.getCPtr(productIds), n);
  }

  public static int LJUSB_OpenAllDevices(SWIGTYPE_p_p_void devHandles, SWIGTYPE_p_unsigned_int productIds, long maxDevices) {
    return ExoDriverJNI.LJUSB_OpenAllDevices(SWIGTYPE_p_p_void.getCPtr(devHandles), SWIGTYPE_p_unsigned_int.getCPtr(productIds), maxDevices);
  }

  public static SWIGTYPE_p_void LJUSB_OpenDevice(long DevNum, long dwReserved, long ProductID) {
    long cPtr = ExoDriverJNI.LJUSB_OpenDevice(DevNum, dwReserved, ProductID);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static boolean LJUSB_ResetConnection(SWIGTYPE_p_void hDevice) {
    return ExoDriverJNI.LJUSB_ResetConnection(SWIGTYPE_p_void.getCPtr(hDevice));
  }

  public static long LJUSB_Write(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_Write(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static long LJUSB_Read(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_Read(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static long LJUSB_Stream(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_Stream(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static long LJUSB_WriteTO(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count, long timeout) {
    return ExoDriverJNI.LJUSB_WriteTO(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count, timeout);
  }

  public static long LJUSB_ReadTO(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count, long timeout) {
    return ExoDriverJNI.LJUSB_ReadTO(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count, timeout);
  }

  public static long LJUSB_StreamTO(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count, long timeout) {
    return ExoDriverJNI.LJUSB_StreamTO(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count, timeout);
  }

  public static void LJUSB_CloseDevice(SWIGTYPE_p_void hDevice) {
    ExoDriverJNI.LJUSB_CloseDevice(SWIGTYPE_p_void.getCPtr(hDevice));
  }

  public static boolean LJUSB_IsHandleValid(SWIGTYPE_p_void hDevice) {
    return ExoDriverJNI.LJUSB_IsHandleValid(SWIGTYPE_p_void.getCPtr(hDevice));
  }

  public static int LJUSB_GetDeviceDescriptorReleaseNumber(SWIGTYPE_p_void hDevice) {
    return ExoDriverJNI.LJUSB_GetDeviceDescriptorReleaseNumber(SWIGTYPE_p_void.getCPtr(hDevice));
  }

  public static long LJUSB_GetHIDReportDescriptor(SWIGTYPE_p_void hDevice, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_GetHIDReportDescriptor(SWIGTYPE_p_void.getCPtr(hDevice), SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static long LJUSB_BulkRead(SWIGTYPE_p_void hDevice, short endpoint, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_BulkRead(SWIGTYPE_p_void.getCPtr(hDevice), endpoint, SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static long LJUSB_BulkWrite(SWIGTYPE_p_void hDevice, short endpoint, SWIGTYPE_p_unsigned_char pBuff, long count) {
    return ExoDriverJNI.LJUSB_BulkWrite(SWIGTYPE_p_void.getCPtr(hDevice), endpoint, SWIGTYPE_p_unsigned_char.getCPtr(pBuff), count);
  }

  public static boolean LJUSB_AbortPipe(SWIGTYPE_p_void hDevice, long Pipe) {
    return ExoDriverJNI.LJUSB_AbortPipe(SWIGTYPE_p_void.getCPtr(hDevice), Pipe);
  }

}
