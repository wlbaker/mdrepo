/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: model/pista.proto */

#ifndef PROTOBUF_C_model_2fpista_2eproto__INCLUDED
#define PROTOBUF_C_model_2fpista_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Pista__Connection Pista__Connection;


/* --- enums --- */


/* --- messages --- */

/*
 * connection still needs a message data...status is also part of deviceinfo struct
 */
struct  _Pista__Connection
{
  ProtobufCMessage base;
  /*
   * 0 --> not connected, 1 --> connected
   */
  int32_t status;
};
#define PISTA__CONNECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pista__connection__descriptor) \
    , 0 }


/* Pista__Connection methods */
void   pista__connection__init
                     (Pista__Connection         *message);
size_t pista__connection__get_packed_size
                     (const Pista__Connection   *message);
size_t pista__connection__pack
                     (const Pista__Connection   *message,
                      uint8_t             *out);
size_t pista__connection__pack_to_buffer
                     (const Pista__Connection   *message,
                      ProtobufCBuffer     *buffer);
Pista__Connection *
       pista__connection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pista__connection__free_unpacked
                     (Pista__Connection *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Pista__Connection_Closure)
                 (const Pista__Connection *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor pista__connection__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_model_2fpista_2eproto__INCLUDED */
