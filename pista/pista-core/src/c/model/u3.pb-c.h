/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: model/u3.proto */

#ifndef PROTOBUF_C_model_2fu3_2eproto__INCLUDED
#define PROTOBUF_C_model_2fu3_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _U3__U3Settings U3__U3Settings;
typedef struct _U3__U3Fsensor U3__U3Fsensor;
typedef struct _U3__U3Esensor U3__U3Esensor;


/* --- enums --- */


/* --- messages --- */

struct  _U3__U3Settings
{
  ProtobufCMessage base;
  int32_t hzz;
  int32_t rps;
  int32_t ms;
  int32_t fin_mask;
  int32_t ein_mask;
  int32_t fout_mask;
  int32_t eout_mask;
};
#define U3__U3_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&u3__u3_settings__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _U3__U3Fsensor
{
  ProtobufCMessage base;
  size_t n_ain0;
  int32_t *ain0;
  size_t n_ain1;
  int32_t *ain1;
  size_t n_ain2;
  int32_t *ain2;
  size_t n_ain3;
  int32_t *ain3;
  size_t n_fio4;
  int32_t *fio4;
  size_t n_fio5;
  int32_t *fio5;
  size_t n_fio6;
  int32_t *fio6;
  size_t n_fio7;
  int32_t *fio7;
};
#define U3__U3_FSENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&u3__u3_fsensor__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _U3__U3Esensor
{
  ProtobufCMessage base;
  size_t n_eio0;
  int32_t *eio0;
  size_t n_eio1;
  int32_t *eio1;
  size_t n_eio2;
  int32_t *eio2;
  size_t n_eio3;
  int32_t *eio3;
  size_t n_eio4;
  int32_t *eio4;
  size_t n_eio5;
  int32_t *eio5;
  size_t n_eio6;
  int32_t *eio6;
  size_t n_eio7;
  int32_t *eio7;
};
#define U3__U3_ESENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&u3__u3_esensor__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/* U3__U3Settings methods */
void   u3__u3_settings__init
                     (U3__U3Settings         *message);
size_t u3__u3_settings__get_packed_size
                     (const U3__U3Settings   *message);
size_t u3__u3_settings__pack
                     (const U3__U3Settings   *message,
                      uint8_t             *out);
size_t u3__u3_settings__pack_to_buffer
                     (const U3__U3Settings   *message,
                      ProtobufCBuffer     *buffer);
U3__U3Settings *
       u3__u3_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   u3__u3_settings__free_unpacked
                     (U3__U3Settings *message,
                      ProtobufCAllocator *allocator);
/* U3__U3Fsensor methods */
void   u3__u3_fsensor__init
                     (U3__U3Fsensor         *message);
size_t u3__u3_fsensor__get_packed_size
                     (const U3__U3Fsensor   *message);
size_t u3__u3_fsensor__pack
                     (const U3__U3Fsensor   *message,
                      uint8_t             *out);
size_t u3__u3_fsensor__pack_to_buffer
                     (const U3__U3Fsensor   *message,
                      ProtobufCBuffer     *buffer);
U3__U3Fsensor *
       u3__u3_fsensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   u3__u3_fsensor__free_unpacked
                     (U3__U3Fsensor *message,
                      ProtobufCAllocator *allocator);
/* U3__U3Esensor methods */
void   u3__u3_esensor__init
                     (U3__U3Esensor         *message);
size_t u3__u3_esensor__get_packed_size
                     (const U3__U3Esensor   *message);
size_t u3__u3_esensor__pack
                     (const U3__U3Esensor   *message,
                      uint8_t             *out);
size_t u3__u3_esensor__pack_to_buffer
                     (const U3__U3Esensor   *message,
                      ProtobufCBuffer     *buffer);
U3__U3Esensor *
       u3__u3_esensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   u3__u3_esensor__free_unpacked
                     (U3__U3Esensor *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*U3__U3Settings_Closure)
                 (const U3__U3Settings *message,
                  void *closure_data);
typedef void (*U3__U3Fsensor_Closure)
                 (const U3__U3Fsensor *message,
                  void *closure_data);
typedef void (*U3__U3Esensor_Closure)
                 (const U3__U3Esensor *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor u3__u3_settings__descriptor;
extern const ProtobufCMessageDescriptor u3__u3_fsensor__descriptor;
extern const ProtobufCMessageDescriptor u3__u3_esensor__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_model_2fu3_2eproto__INCLUDED */
