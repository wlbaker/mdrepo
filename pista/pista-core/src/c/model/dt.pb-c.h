/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: model/dt.proto */

#ifndef PROTOBUF_C_model_2fdt_2eproto__INCLUDED
#define PROTOBUF_C_model_2fdt_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Dt__DtSettings Dt__DtSettings;
typedef struct _Dt__DtSensor Dt__DtSensor;


/* --- enums --- */


/* --- messages --- */

struct  _Dt__DtSettings
{
  ProtobufCMessage base;
  double hzz;
  int32_t rps;
  int32_t ms;
  int32_t in_mask;
};
#define DT__DT_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dt__dt_settings__descriptor) \
    , 0, 0, 0, 0 }


struct  _Dt__DtSensor
{
  ProtobufCMessage base;
  size_t n_ain0;
  int32_t *ain0;
  size_t n_ain1;
  int32_t *ain1;
  size_t n_ain2;
  int32_t *ain2;
  size_t n_ain3;
  int32_t *ain3;
  size_t n_fio4;
  int32_t *fio4;
  size_t n_fio5;
  int32_t *fio5;
  size_t n_fio6;
  int32_t *fio6;
  size_t n_fio7;
  int32_t *fio7;
};
#define DT__DT_SENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dt__dt_sensor__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/* Dt__DtSettings methods */
void   dt__dt_settings__init
                     (Dt__DtSettings         *message);
size_t dt__dt_settings__get_packed_size
                     (const Dt__DtSettings   *message);
size_t dt__dt_settings__pack
                     (const Dt__DtSettings   *message,
                      uint8_t             *out);
size_t dt__dt_settings__pack_to_buffer
                     (const Dt__DtSettings   *message,
                      ProtobufCBuffer     *buffer);
Dt__DtSettings *
       dt__dt_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dt__dt_settings__free_unpacked
                     (Dt__DtSettings *message,
                      ProtobufCAllocator *allocator);
/* Dt__DtSensor methods */
void   dt__dt_sensor__init
                     (Dt__DtSensor         *message);
size_t dt__dt_sensor__get_packed_size
                     (const Dt__DtSensor   *message);
size_t dt__dt_sensor__pack
                     (const Dt__DtSensor   *message,
                      uint8_t             *out);
size_t dt__dt_sensor__pack_to_buffer
                     (const Dt__DtSensor   *message,
                      ProtobufCBuffer     *buffer);
Dt__DtSensor *
       dt__dt_sensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dt__dt_sensor__free_unpacked
                     (Dt__DtSensor *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Dt__DtSettings_Closure)
                 (const Dt__DtSettings *message,
                  void *closure_data);
typedef void (*Dt__DtSensor_Closure)
                 (const Dt__DtSensor *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dt__dt_settings__descriptor;
extern const ProtobufCMessageDescriptor dt__dt_sensor__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_model_2fdt_2eproto__INCLUDED */
